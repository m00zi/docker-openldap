dn: inum=%(inumOrg)s!2124.0CF1,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Cert authentication module
displayName: cert
gluuStatus: false
inum: %(inumOrg)s!2124.0CF1
oxConfigurationProperty: {"value1":"chain_cert_file_path","value2":"/etc/certs/chain_cert.pem","description":""}
oxConfigurationProperty: {"value1":"credentials_file","value2":"/etc/certs/cert_creds.json","description":""}
oxConfigurationProperty: {"value1":"map_user_cert","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_generic_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_path_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_ocsp_validator","value2":"true","description":""}
oxConfigurationProperty: {"value1":"use_crl_validator","value2":"false","description":""}
oxConfigurationProperty: {"value1":"crl_max_response_size","value2":"10485760","description":""}
oxLevel: 25
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: Iw0KIyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRle
 HQuDQojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KaW1wb3J0IHN5cw0KaW1wb3J0IGJhc2U2NA0KaW1wb3J0IHVybGxpYg0KDQpmcm9t
 IG9yZy5qYm9zcy5zZWFtIGltcG9ydCBDb21wb25lbnQNCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlDQpmcm9
 tIG9yZy5qYm9zcy5zZWFtLmNvbnRleHRzIGltcG9ydCBDb250ZXh0cw0KZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQNCmZyb20gb3JnLmpib3NzLnNlYW0uc2VjdX
 JpdHkgaW1wb3J0IElkZW50aXR5DQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UgaW1wb3J0IFVzZXJTZXJ2aWNlDQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyDQpmcm9tI
 G9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IFNlcnZlclV0aWwNCmZyb20gb3JnLnhkaS51dGlsLnNlY3VyaXR5IGltcG9ydCBTdHJpbmdFbmNyeXB0ZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBB
 cnJheXMNCmZyb20gb3JnLnhkaS5veGF1dGguY2VydC5maW5nZXJwcmludCBpbXBvcnQgRmluZ2VycHJpbnRIZWxwZXINCmZyb20gb3JnLnhkaS5veGF1dGguY2VydC52YWxpZGF0aW9uIGltcG9ydCB
 HZW5lcmljQ2VydGlmaWNhdGVWZXJpZmllciwgUGF0aENlcnRpZmljYXRlVmVyaWZpZXIsIE9DU1BDZXJ0aWZpY2F0ZVZlcmlmaWVyLCBDUkxDZXJ0aWZpY2F0ZVZlcmlmaWVyDQpmcm9tIG9yZy54ZG
 kub3hhdXRoLmNlcnQudmFsaWRhdGlvbi5tb2RlbCBpbXBvcnQgVmFsaWRhdGlvblN0YXR1cw0KZnJvbSBvcmcueGRpLm94YXV0aC51dGlsIGltcG9ydCBDZXJ0VXRpbA0KZnJvbSBvcmcueGRpLm94Y
 XV0aC5zZXJ2aWNlLm5ldCBpbXBvcnQgSHR0cFNlcnZpY2UNCmZyb20gb3JnLmFwYWNoZS5odHRwLnBhcmFtcyBpbXBvcnQgQ29yZUNvbm5lY3Rpb25QTmFtZXMNCmltcG9ydCBqYXZhDQoNCg0KdHJ5
 Og0KICAgIGltcG9ydCBqc29uDQpleGNlcHQgSW1wb3J0RXJyb3I6DQogICAgaW1wb3J0IHNpbXBsZWpzb24gYXMganNvbg0KDQpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW5
 0aWNhdGlvblR5cGUpOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQ
 ogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24iDQoNCiAgICAgICAgaWYgbm90IChjb25maWd1cmF0a
 W9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY2hhaW5fY2VydF9maWxlX3BhdGgiKSk6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIFByb3BlcnR5IGNoYWluX2NlcnRf
 ZmlsZV9wYXRoIGlzIG1hbmRhdG9yeSINCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgIGlmIG5vdCAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm1hcF91c2V
 yX2NlcnQiKSk6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIFByb3BlcnR5IG1hcF91c2VyX2NlcnQgaXMgbWFuZGF0b3J5Ig0KICAgICAgICAgICAgcmV0dXJuIEZhbH
 NlDQoNCiAgICAgICAgY2hhaW5fY2VydF9maWxlX3BhdGggPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNoYWluX2NlcnRfZmlsZV9wYXRoIikuZ2V0VmFsdWUyKCkNCg0KICAgICAgICBzZ
 WxmLmNoYWluX2NlcnRzID0gQ2VydFV0aWwubG9hZFg1MDlDZXJ0aWZpY2F0ZUZyb21GaWxlKGNoYWluX2NlcnRfZmlsZV9wYXRoKQ0KICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24u
 IExvYWRlZCAnJWQnIGNoYWluIGNlcnRpZmljYXRlcyIgJSBzZWxmLmNoYWluX2NlcnRzLnNpemUoKQ0KICAgICAgICANCiAgICAgICAgY3JsX21heF9yZXNwb25zZV9zaXplID0gNSAqIDEwMjQgKiA
 xMDI0ICAjIDEwTWINCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImNybF9tYXhfcmVzcG9uc2Vfc2l6ZSIpOg0KICAgICAgICAgICAgY3JsX21heF9yZXNwb2
 5zZV9zaXplID0gU3RyaW5nSGVscGVyLnRvSW50ZWdlcihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNybF9tYXhfcmVzcG9uc2Vfc2l6ZSIpLmdldFZhbHVlMigpLCBjcmxfbWF4X3Jlc3Bvb
 nNlX3NpemUpDQogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIENSTCBtYXggcmVzcG9uc2Ugc2l6ZSBpcyAnJWQnIiAlIGNybF9tYXhfcmVzcG9uc2Vfc2l6ZQ0KDQogICAg
 ICAgICMgRGVmaW5lIGFycmF5IHRvIG9yZGVyIG1ldGhvZHMgY29ycmVjdGx5DQogICAgICAgIHNlbGYudmFsaWRhdG9yX3R5cGVzID0gWyAnZ2VuZXJpYycsICdwYXRoJywgJ29jc3AnLCAnY3JsJ10
 NCiAgICAgICAgc2VsZi52YWxpZGF0b3JzID0geyAnZ2VuZXJpYycgOiBbR2VuZXJpY0NlcnRpZmljYXRlVmVyaWZpZXIoKSwgRmFsc2VdLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYX
 RoJyA6IFtQYXRoQ2VydGlmaWNhdGVWZXJpZmllcihGYWxzZSksIEZhbHNlXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb2NzcCcgOiBbT0NTUENlcnRpZmljYXRlVmVyaWZpZXIoKSwgR
 mFsc2VdLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICdjcmwnIDogW0NSTENlcnRpZmljYXRlVmVyaWZpZXIoY3JsX21heF9yZXNwb25zZV9zaXplKSwgRmFsc2VdIH0NCg0KICAgICAgICBm
 b3IgdHlwZSBpbiBzZWxmLnZhbGlkYXRvcl90eXBlczoNCiAgICAgICAgICAgIHZhbGlkYXRvcl9wYXJhbV9uYW1lID0gInVzZV8lc192YWxpZGF0b3IiICUgdHlwZQ0KICAgICAgICAgICAgaWYgY29
 uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkodmFsaWRhdG9yX3BhcmFtX25hbWUpOg0KICAgICAgICAgICAgICAgIHZhbGlkYXRvcl9zdGF0dXMgPSBTdHJpbmdIZWxwZXIudG9Cb29sZW
 FuKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCh2YWxpZGF0b3JfcGFyYW1fbmFtZSkuZ2V0VmFsdWUyKCksIEZhbHNlKQ0KICAgICAgICAgICAgICAgIHNlbGYudmFsaWRhdG9yc1t0eXBlXVsxX
 SA9IHZhbGlkYXRvcl9zdGF0dXMNCg0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemF0aW9uLiBWYWxpZGF0aW9uIG1ldGhvZCAnJXMnIHN0YXR1czogJyVzJyIgJSAodHlwZSwgc2Vs
 Zi52YWxpZGF0b3JzW3R5cGVdWzFdKQ0KDQogICAgICAgIHNlbGYubWFwX3VzZXJfY2VydCA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJtYXBfdXN
 lcl9jZXJ0IikuZ2V0VmFsdWUyKCksIEZhbHNlKQ0KICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6YXRpb24uIG1hcF91c2VyX2NlcnQ6ICclcyciICUgc2VsZi5tYXBfdXNlcl9jZXJ0DQoNCi
 AgICAgICAgc2VsZi5lbmFibGVkX3JlY2FwdGNoYSA9IHNlbGYuaW5pdFJlY2FwdGNoYShjb25maWd1cmF0aW9uQXR0cmlidXRlcykNCiAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemF0aW9uL
 iBlbmFibGVkX3JlY2FwdGNoYTogJyVzJyIgJSBzZWxmLmVuYWJsZWRfcmVjYXB0Y2hhDQoNCiAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSINCg0KICAgICAgICBy
 ZXR1cm4gVHJ1ZSAgIA0KDQogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiQ2VydC4gRGVzdHJveSINCg0KICAgICAgICBmb3IgdHl
 wZSBpbiBzZWxmLnZhbGlkYXRvcl90eXBlczoNCiAgICAgICAgICAgIHNlbGYudmFsaWRhdG9yc1t0eXBlXVswXS5kZXN0cm95KCkNCg0KICAgICAgICBwcmludCAiQ2VydC4gRGVzdHJveWVkIHN1Y2
 Nlc3NmdWxseSINCg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0a
 W9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25N
 ZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHVybiBOb25lDQoNCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25
 BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6DQogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpDQogICAgICAgIHVzZXJfbm
 FtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkNCg0KICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkNCiAgICAgICAgdXNlclNlcnZpY2UgPSBDb21wb25lbnQuZ
 2V0SW5zdGFuY2UoVXNlclNlcnZpY2UpDQoNCiAgICAgICAgaWYgc3RlcCA9PSAxOg0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIg0KICAgICAgICAgICAg
 bG9naW5fYnV0dG9uID0gU2VydmVyVXRpbC5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAibG9naW5Gb3JtOmxvZ2luQnV0dG9uIikNCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5
 pc0VtcHR5KGxvZ2luX2J1dHRvbik6DQogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGb3JtIHdlcmUgc3VibWl0dGVkIGluY29ycmVjdGx5Ig0KIC
 AgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICAgICAgaWYgc2VsZi5lbmFibGVkX3JlY2FwdGNoYToNCiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvc
 iBzdGVwIDEuIFZhbGlkYXRpbmcgcmVjYXB0Y2hhIHJlc3BvbnNlIg0KICAgICAgICAgICAgICAgIHJlY2FwdGNoYV9yZXNwb25zZSA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFy
 YW1ldGVycywgImctcmVjYXB0Y2hhLXJlc3BvbnNlIikNCg0KICAgICAgICAgICAgICAgIHJlY2FwdGNoYV9yZXN1bHQgPSBzZWxmLnZhbGlkYXRlUmVjYXB0Y2hhKHJlY2FwdGNoYV9yZXNwb25zZSk
 NCiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHJlY2FwdGNoYV9yZXN1bHQ6ICclcyciICUgcmVjYXB0Y2hhX3Jlc3VsdA0KICAgICAgICAgICAgIC
 AgIA0KICAgICAgICAgICAgICAgIHJldHVybiByZWNhcHRjaGFfcmVzdWx0DQoNCiAgICAgICAgICAgIHJldHVybiBUcnVlDQogICAgICAgIGVsaWYgc3RlcCA9PSAyOg0KICAgICAgICAgICAgcHJpb
 nQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIg0KDQogICAgICAgICAgICAjIFZhbGlkYXRlIGlmIHVzZXIgc2VsZWN0ZWQgY2VydGlmaWNhdGUNCiAgICAgICAgICAgIGNlcnRfeDUwOSA9
 IHNlbGYuZ2V0U2Vzc2lvbkF0dHJpYnV0ZSgiY2VydF94NTA5IikNCiAgICAgICAgICAgIGlmIGNlcnRfeDUwOSA9PSBOb25lOg0KICAgICAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWN
 hdGUgZm9yIHN0ZXAgMi4gVXNlciBub3Qgc2VsZWN0ZWQgYW55IGNlcnRzIg0KICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3NlbGVjdGVkIiwgRmFsc2UpDQogICAgICAgICAgICAgIC
 AgICAgIA0KICAgICAgICAgICAgICAgICMgUmV0dXJuIFRydWUgdG8gaW5mb3JtIHVzZXIgaG93IHRvIHJlc2V0IHdvcmtmbG93DQogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUNCiAgICAgICAgI
 CAgIGVsc2U6DQogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNlcnRfc2VsZWN0ZWQiLCBUcnVlKQ0KICAgICAgICAgICAgICAgIHg1MDlDZXJ0aWZpY2F0ZSA9IHNlbGYuY2VydEZyb21TdHJp
 bmcoY2VydF94NTA5KQ0KDQogICAgICAgICAgICBzdWJqZWN0WDUwMFByaW5jaXBhbCA9IHg1MDlDZXJ0aWZpY2F0ZS5nZXRTdWJqZWN0WDUwMFByaW5jaXBhbCgpDQogICAgICAgICAgICBwcmludCA
 iQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIFVzZXIgc2VsZWN0ZWQgY2VydGlmaWNhdGUgd2l0aCBETiAnJXMnIiAlIHN1YmplY3RYNTAwUHJpbmNpcGFsDQogICAgICAgICAgICANCiAgIC
 AgICAgICAgICMgVmFsaWRhdGUgY2VydGlmaWNhdGVzIHdoaWNoIHVzZXIgc2VsZWN0ZWQNCiAgICAgICAgICAgIHZhbGlkID0gc2VsZi52YWxpZGF0ZUNlcnRpZmljYXRlKHg1MDlDZXJ0aWZpY2F0Z
 SkNCiAgICAgICAgICAgIGlmIG5vdCB2YWxpZDoNCiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIENlcnRpZmljYXRlIEROICclcycgaXMgbm90IHZh
 bGlkIiAlIHN1YmplY3RYNTAwUHJpbmNpcGFsDQogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNlcnRfdmFsaWQiLCBGYWxzZSkNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA
 jIFJldHVybiBUcnVlIHRvIGluZm9ybSB1c2VyIGhvdyB0byByZXNldCB3b3JrZmxvdw0KICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3
 ZhbGlkIiwgVHJ1ZSkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgIyBDYWxjdWxhdGUgY2VydGlmaWNhdGUgZmluZ2VycHJpbnQNCiAgICAgICAgICAgIHg1MDlDZXJ0aWZpY2F0ZUZpbmdlcnBya
 W50ID0gc2VsZi5jYWxjdWxhdGVDZXJ0aWZpY2F0ZUZpbmdlcnByaW50KHg1MDlDZXJ0aWZpY2F0ZSkNCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjZXJ0X3g1MDlfZmluZ2VycHJpbnQiLCB4NTA5
 Q2VydGlmaWNhdGVGaW5nZXJwcmludCkNCiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gRmluZ2VycHJpbnQgaXMgJyVzJyBvZiBjZXJ0aWZpY2F0ZSB3aXR
 oIEROICclcyciICUgKHg1MDlDZXJ0aWZpY2F0ZUZpbmdlcnByaW50LCBzdWJqZWN0WDUwMFByaW5jaXBhbCkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgIyBBdHRlbXB0IHRvIGZpbmQgdXNlci
 BieSBjZXJ0aWZpY2F0ZSBmaW5nZXJwcmludA0KICAgICAgICAgICAgY2VydF91c2VyX2V4dGVybmFsX3VpZCA9ICJjZXJ0OiVzIiAlIHg1MDlDZXJ0aWZpY2F0ZUZpbmdlcnByaW50DQogICAgICAgI
 CAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQgYXR0cmlidXRlIHZhbHVlICVzIiAlIGNlcnRfdXNl
 cl9leHRlcm5hbF91aWQNCg0KICAgICAgICAgICAgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsIGNlcnRfdXN
 lcl9leHRlcm5hbF91aWQpDQogICAgICAgICAgICBpZiBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID09IE5vbmU6DQogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3
 Igc3RlcCAyLiBGYWlsZWQgdG8gZmluZCB1c2VyIg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGlmIHNlbGYubWFwX3VzZXJfY2VydDoNCiAgICAgICAgICAgICAgICAgICAgcHJpb
 nQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTdG9yaW5nIGNlcnRfdXNlcl9leHRlcm5hbF91aWQgZm9yIHN0ZXAgMyINCiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNl
 cnRfdXNlcl9leHRlcm5hbF91aWQiLCBjZXJ0X3VzZXJfZXh0ZXJuYWxfdWlkKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICA
 gICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gTWFwcGluZyBjZXJ0IHRvIHVzZXIgYWNjb3VudCBpcyBub3QgYWxsb3dlZCINCiAgICAgICAgICAgICAgICAgIC
 AgY29udGV4dC5zZXQoImNlcnRfY291bnRfbG9naW5fc3RlcHMiLCAyKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgICAgICAgZm91bmRVc2VyTmFtZSA9IGZpbmRfd
 XNlcl9ieV9leHRlcm5hbF91aWQuZ2V0VXNlcklkKCkNCiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZm91bmRVc2VyTmFtZTogIiArIGZvdW5kVXNlck5h
 bWUNCg0KICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UNCiAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQ0KICAgICAgICAgICAgbG9
 nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKGZvdW5kVXNlck5hbWUpDQogICAgICAgIA0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTZX
 R0aW5nIGNvdW50IHN0ZXBzIHRvIDIiDQogICAgICAgICAgICBjb250ZXh0LnNldCgiY2VydF9jb3VudF9sb2dpbl9zdGVwcyIsIDIpDQoNCiAgICAgICAgICAgIHJldHVybiBsb2dnZWRfaW4NCiAgI
 CAgICAgZWxpZiBzdGVwID09IDM6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDMiDQoNCiAgICAgICAgICAgIGNlcnRfdXNlcl9leHRlcm5hbF91aWQgPSBz
 ZWxmLmdldFNlc3Npb25BdHRyaWJ1dGUoImNlcnRfdXNlcl9leHRlcm5hbF91aWQiKQ0KICAgICAgICAgICAgaWYgY2VydF91c2VyX2V4dGVybmFsX3VpZCA9PSBOb25lOg0KICAgICAgICAgICAgICA
 gIHByaW50ICJDZXJ0LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMy4gY2VydF91c2VyX2V4dGVybmFsX3VpZCBpcyBlbXB0eSINCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgIC
 AgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkNCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkNCiAgICAgI
 CAgICAgIHVzZXJfcGFzc3dvcmQgPSBjcmVkZW50aWFscy5nZXRQYXNzd29yZCgpDQoNCiAgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlDQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlz
 Tm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCkpOg0KICAgICAgICAgICAgICAgIGxvZ2dlZF9pbiA9IHVzZXJTZXJ
 2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQpDQoNCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToNCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KIC
 AgICAgICAgICAgIyBEb3VibGUgY2hlY2sganVzdCB0byBtYWtlIHN1cmUuIFdlIGRpZCBjaGVja2luZyBpbiBwcmV2aW91cyBzdGVwDQogICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZ
 XIgd2hpY2ggaGFzIGNlcnRfdXNlcl9leHRlcm5hbF91aWQNCiAgICAgICAgICAgICMgQXZvaWQgbWFwcGluZyB1c2VyIGNlcnQgdG8gbW9yZSB0aGFuIG9uZSBJRFAgYWNjb3VudA0KICAgICAgICAg
 ICAgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsIGNlcnRfdXNlcl9leHRlcm5hbF91aWQpDQogICAgICAgICA
 gICBpZiBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID09IE5vbmU6DQogICAgICAgICAgICAgICAgIyBBZGQgY2VydF91c2VyX2V4dGVybmFsX3VpZCB0byB1c2VyJ3MgZXh0ZXJuYWwgR1VJRCBsaX
 N0DQogICAgICAgICAgICAgICAgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZCA9IHVzZXJTZXJ2aWNlLmFkZFVzZXJBdHRyaWJ1dGUodXNlcl9uYW1lLCAib3hFeHRlcm5hbFVpZCIsIGNlcnRfdXNlc
 l9leHRlcm5hbF91aWQpDQogICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZCA9PSBOb25lOg0KICAgICAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gQXV0aGVudGlj
 YXRlIGZvciBzdGVwIDMuIEZhaWxlZCB0byB1cGRhdGUgY3VycmVudCB1c2VyIg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQo
 gICAgICAgIA0KICAgICAgICAgICAgcmV0dXJuIFRydWUNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3
 VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6DQogICAgICAgIHByaW50ICJDZXJ0LiBQcmVwYXJlIGZvciBzdGVwICVkIiAlIHN0ZXANCiAgICAgICAgY29udGV4dCA9I
 ENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpDQogICAgICAgIA0KICAgICAgICBpZiBzdGVwID09IDE6DQogICAgICAgICAgICBpZiBzZWxmLmVuYWJsZWRfcmVjYXB0Y2hhOg0KICAgICAgICAgICAg
 ICAgIGNvbnRleHQuc2V0KCJyZWNhcHRjaGFfc2l0ZV9rZXkiLCBzZWxmLnJlY2FwdGNoYV9jcmVkc1snc2l0ZV9rZXknXSkNCiAgICAgICAgZWxpZiBzdGVwID09IDI6DQogICAgICAgICAgICAjIFN
 0b3JlIGNlcnRpZmljYXRlIGluIHNlc3Npb24NCiAgICAgICAgICAgIGV4dGVybmFsQ29udGV4dCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKQ
 0KICAgICAgICAgICAgcmVxdWVzdCA9IGV4dGVybmFsQ29udGV4dC5nZXRSZXF1ZXN0KCkNCg0KICAgICAgICAgICAgIyBUcnkgdG8gZ2V0IGNlcnRpZmljYXRlIGZyb20gaGVhZGVyIFgtQ2xpZW50Q
 2VydA0KICAgICAgICAgICAgY2xpZW50Q2VydGlmaWNhdGUgPSBleHRlcm5hbENvbnRleHQuZ2V0UmVxdWVzdEhlYWRlck1hcCgpLmdldCgiWC1DbGllbnRDZXJ0IikNCiAgICAgICAgICAgIGlmIGNs
 aWVudENlcnRpZmljYXRlICE9IE5vbmU6DQogICAgICAgICAgICAgICAgeDUwOUNlcnRpZmljYXRlID0gc2VsZi5jZXJ0RnJvbVBlbVN0cmluZyhjbGllbnRDZXJ0aWZpY2F0ZSkNCiAgICAgICAgICA
 gICAgICBjb250ZXh0LnNldCgiY2VydF94NTA5IiwgIHNlbGYuY2VydFRvU3RyaW5nKHg1MDlDZXJ0aWZpY2F0ZSkpDQogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIFByZXBhcmUgZm9yIHN0ZX
 AgMi4gU3RvcmluZyB1c2VyIGNlcnRpZmljYXRlIG9idGFpbmVkIGZyb20gJ1gtQ2xpZW50Q2VydCcgaGVhZGVyIg0KICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgICAgICMgV
 HJ5IHRvIGdldCBjZXJ0aWZpY2F0ZSBmcm9tIGF0dHJpYnV0ZSBqYXZheC5zZXJ2bGV0LnJlcXVlc3QuWDUwOUNlcnRpZmljYXRlDQogICAgICAgICAgICB4NTA5Q2VydGlmaWNhdGVzID0gcmVxdWVz
 dC5nZXRBdHRyaWJ1dGUoJ2phdmF4LnNlcnZsZXQucmVxdWVzdC5YNTA5Q2VydGlmaWNhdGUnKQ0KICAgICAgICAgICAgaWYgKHg1MDlDZXJ0aWZpY2F0ZXMgIT0gTm9uZSkgYW5kIChsZW4oeDUwOUN
 lcnRpZmljYXRlcykgPiAwKToNCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgiY2VydF94NTA5Iiwgc2VsZi5jZXJ0VG9TdHJpbmcoeDUwOUNlcnRpZmljYXRlc1swXSkpDQogICAgICAgICAgIC
 AgICAgcHJpbnQgIkNlcnQuIFByZXBhcmUgZm9yIHN0ZXAgMi4gU3RvcmluZyB1c2VyIGNlcnRpZmljYXRlIG9idGFpbmVkIGZyb20gJ2phdmF4LnNlcnZsZXQucmVxdWVzdC5YNTA5Q2VydGlmaWNhd
 GUnIGF0dHJpYnV0ZSINCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgICAgIGlmIHN0ZXAgPCA0Og0KICAgICAgICAgICAgcmV0dXJuIFRydWUNCiAgICAgICAgZWxzZToNCiAgICAg
 ICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg0KICAgICAgICByZXR1cm4gQXJ
 yYXlzLmFzTGlzdCgiY2VydF9zZWxlY3RlZCIsICJjZXJ0X3ZhbGlkIiwgImNlcnRfeDUwOSIsICJjZXJ0X3g1MDlfZmluZ2VycHJpbnQiLCAiY2VydF9jb3VudF9sb2dpbl9zdGVwcyIsICJjZXJ0X3
 VzZXJfZXh0ZXJuYWxfdWlkIikNCg0KICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBjZXJ0X2NvdW50X2xvZ
 2luX3N0ZXBzID0gc2VsZi5nZXRTZXNzaW9uQXR0cmlidXRlKCJjZXJ0X2NvdW50X2xvZ2luX3N0ZXBzIikNCiAgICAgICAgaWYgY2VydF9jb3VudF9sb2dpbl9zdGVwcyAhPSBOb25lOg0KICAgICAg
 ICAgICAgcmV0dXJuIGNlcnRfY291bnRfbG9naW5fc3RlcHMNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHJldHVybiAzDQoNCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJ
 hdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg0KICAgICAgICBpZiBzdGVwID09IDE6DQogICAgICAgICAgICByZXR1cm4gIi9hdXRoL2NlcnQvbG9naW4ueGh0bWwiDQogICAgICAgIGlmIHN0ZXAgPT0gMj
 oNCiAgICAgICAgICAgIHJldHVybiAiL2NlcnQtbG9naW4ueGh0bWwiDQogICAgICAgIGVsaWYgc3RlcCA9PSAzOg0KICAgICAgICAgICAgY2VydF9zZWxlY3RlZCA9IHNlbGYuZ2V0U2Vzc2lvbkF0d
 HJpYnV0ZSgiY2VydF9zZWxlY3RlZCIpDQogICAgICAgICAgICBpZiBUcnVlICE9IGNlcnRfc2VsZWN0ZWQ6DQogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9jZXJ0L2NlcnQtbm90LXNlbGVj
 dGVkLnhodG1sIg0KDQogICAgICAgICAgICBjZXJ0X3ZhbGlkID0gc2VsZi5nZXRTZXNzaW9uQXR0cmlidXRlKCJjZXJ0X3ZhbGlkIikNCiAgICAgICAgICAgIGlmIFRydWUgIT0gY2VydF92YWxpZDo
 NCiAgICAgICAgICAgICAgICByZXR1cm4gIi9hdXRoL2NlcnQvY2VydC1pbnZhbGlkLnhodG1sIg0KICAgICAgICAgICAgDQogICAgICAgICAgICByZXR1cm4gIi9sb2dpbi54aHRtbCINCg0KICAgIC
 AgICByZXR1cm4gIiINCg0KICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZ
 iBwcm9jZXNzQmFzaWNBdXRoZW50aWNhdGlvbihzZWxmLCBjcmVkZW50aWFscyk6DQogICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQ0KDQogICAg
 ICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkNCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkNCg0KICAgICAgICBsb2dnZWRfaW4
 gPSBGYWxzZQ0KICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCkpOg
 0KICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkNCg0KICAgICAgICBpZiAobm90IGxvZ2dlZF9pbik6DQogICAgI
 CAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSkNCiAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0g
 Tm9uZSk6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gUHJvY2VzcyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQ0KICAgICAgICAgICA
 gcmV0dXJuIE5vbmUNCiAgICAgICAgDQogICAgICAgIHJldHVybiBmaW5kX3VzZXJfYnlfdWlkDQoNCiAgICBkZWYgZ2V0U2Vzc2lvbkF0dHJpYnV0ZShzZWxmLCBhdHRyaWJ1dGVfbmFtZSk6DQogIC
 AgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQ0KDQogICAgICAgICMgVHJ5IHRvIGdldCBhdHRyaWJ1dGUgdmFsdWUgZnJvbSBTZWFtIGV2ZW50IGNvbnRleHQNCiAgICAgI
 CAgaWYgY29udGV4dC5pc1NldChhdHRyaWJ1dGVfbmFtZSk6DQogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoYXR0cmlidXRlX25hbWUpDQogICAgICAgIA0KICAgICAgICAjIFRyeSB0byBn
 ZXQgYXR0cmlidXRlIGZyb20gcGVyc2lzdGVudCBzZXNzaW9uDQogICAgICAgIHNlc3Npb25fYXR0cmlidXRlcyA9IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpDQogICAgICAgIGlmIHN
 lc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleShhdHRyaWJ1dGVfbmFtZSk6DQogICAgICAgICAgICByZXR1cm4gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldChhdHRyaWJ1dGVfbmFtZSkNCg0KICAgIC
 AgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGNhbGN1bGF0ZUNlcnRpZmljYXRlRmluZ2VycHJpbnQoc2VsZiwgeDUwOUNlcnRpZmljYXRlKToNCiAgICAgICAgcHJpbnQgIkNlcnQuIENhbGN1bGF0Z
 SBmaW5nZXJwcmludCBmb3IgY2VydGlmaWNhdGUgRE4gJyVzJyIgJSB4NTA5Q2VydGlmaWNhdGUuZ2V0U3ViamVjdFg1MDBQcmluY2lwYWwoKQ0KICAgICAgICANCiAgICAgICAgcHVibGljS2V5ID0g
 eDUwOUNlcnRpZmljYXRlLmdldFB1YmxpY0tleSgpDQogICAgICAgIA0KICAgICAgICAjIFVzZSBveEF1dGggaW1wbGVtZW50YXRpb24NCiAgICAgICAgZmluZ2VycHJpbnQgPSBGaW5nZXJwcmludEh
 lbHBlci5nZXRQdWJsaWNLZXlTc2hGaW5nZXJwcmludChwdWJsaWNLZXkpDQogICAgICAgIA0KICAgICAgICByZXR1cm4gZmluZ2VycHJpbnQgICAgICANCg0KICAgIGRlZiB2YWxpZGF0ZUNlcnRpZm
 ljYXRlKHNlbGYsIHg1MDlDZXJ0aWZpY2F0ZSk6DQogICAgICAgIHN1YmplY3RYNTAwUHJpbmNpcGFsID0geDUwOUNlcnRpZmljYXRlLmdldFN1YmplY3RYNTAwUHJpbmNpcGFsKCkNCg0KICAgICAgI
 CBwcmludCAiQ2VydC4gVmFsaWRhdGluZyBjZXJ0aWZpY2F0ZSB3aXRoIEROICclcyciICUgc3ViamVjdFg1MDBQcmluY2lwYWwNCiAgICAgICAgDQogICAgICAgIHZhbGlkYXRpb25fZGF0ZSA9IGph
 dmEudXRpbC5EYXRlKCkNCg0KICAgICAgICBmb3IgdHlwZSBpbiBzZWxmLnZhbGlkYXRvcl90eXBlczoNCiAgICAgICAgICAgIGlmIHNlbGYudmFsaWRhdG9yc1t0eXBlXVsxXToNCiAgICAgICAgICA
 gICAgICByZXN1bHQgPSBzZWxmLnZhbGlkYXRvcnNbdHlwZV1bMF0udmFsaWRhdGUoeDUwOUNlcnRpZmljYXRlLCBzZWxmLmNoYWluX2NlcnRzLCB2YWxpZGF0aW9uX2RhdGUpDQogICAgICAgICAgIC
 AgICAgcHJpbnQgIkNlcnQuIFZhbGlkYXRlIGNlcnRpZmljYXRlOiAnJXMnLiBWYWxpZGF0aW9uIG1ldGhvZCAnJXMnIHJlc3VsdDogJyVzJyIgJSAoc3ViamVjdFg1MDBQcmluY2lwYWwsIHR5cGUsI
 HJlc3VsdCkNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmdldFZhbGlkaXR5KCkgIT0gVmFsaWRhdGlvblN0YXR1cy5DZXJ0aWZpY2F0ZVZhbGlkaXR5LlZBTElE
 KToNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIENlcnRpZmljYXRlOiAnJXMnIGlzIGludmFsaWQiICUgc3ViamVjdFg1MDBQcmluY2lwYWwNCiAgICAgICAgICAgICAgICAgICAgcmV
 0dXJuIEZhbHNlDQogICAgICAgIA0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGNlcnRUb1N0cmluZyhzZWxmLCB4NTA5Q2VydGlmaWNhdGUpOg0KICAgICAgICByZXR1cm4gYmFzZTY0Lm
 I2NGVuY29kZSh4NTA5Q2VydGlmaWNhdGUuZ2V0RW5jb2RlZCgpKQ0KDQogICAgZGVmIGNlcnRGcm9tU3RyaW5nKHNlbGYsIHg1MDlDZXJ0aWZpY2F0ZUVuY29kZWQpOg0KICAgICAgICB4NTA5Q2Vyd
 GlmaWNhdGVEZWNvZGVkID0gYmFzZTY0LmI2NGRlY29kZSh4NTA5Q2VydGlmaWNhdGVFbmNvZGVkKQ0KICAgICAgICByZXR1cm4gQ2VydFV0aWwueDUwOUNlcnRpZmljYXRlRnJvbUJ5dGVzKHg1MDlD
 ZXJ0aWZpY2F0ZURlY29kZWQpDQoNCiAgICBkZWYgY2VydEZyb21QZW1TdHJpbmcoc2VsZiwgcGVtQ2VydGlmaWNhdGUpOg0KICAgICAgICB4NTA5Q2VydGlmaWNhdGVFbmNvZGVkID0gcGVtQ2VydGl
 maWNhdGUucmVwbGFjZSgiLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tIiwgIiIpLnJlcGxhY2UoIi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0iLCAiIikuc3RyaXAoKQ0KICAgICAgICByZXR1cm
 4gc2VsZi5jZXJ0RnJvbVN0cmluZyh4NTA5Q2VydGlmaWNhdGVFbmNvZGVkKQ0KDQogICAgZGVmIGluaXRSZWNhcHRjaGEoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwc
 mludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEiDQogICAgICAgIGlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY3JlZGVudGlhbHNfZmlsZSIpOg0KICAgICAg
 ICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgY2VydF9jcmVkc19maWxlID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjcmVkZW50aWFsc19maWxlIikuZ2V0VmFsdWUyKCkNCg0KICA
 gICAgICAjIExvYWQgY3JlZGVudGlhbHMgZnJvbSBmaWxlDQogICAgICAgIGYgPSBvcGVuKGNlcnRfY3JlZHNfZmlsZSwgJ3InKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICBjcmVkcyA9IGpzb2
 4ubG9hZHMoZi5yZWFkKCkpDQogICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIHByaW50ICJDZXJ0LiBJbml0aWFsaXplIHJlY2FwdGNoYS4gRmFpbGVkIHRvIGxvYWQgY3JlZGVudGlhbHMgZnJvb
 SBmaWxlOiAlcyIgJSBjZXJ0X2NyZWRzX2ZpbGUNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICBmaW5hbGx5Og0KICAgICAgICAgICAgZi5jbG9zZSgpDQogICAgICAgIA0KICAgICAg
 ICB0cnk6DQogICAgICAgICAgICByZWNhcHRjaGFfY3JlZHMgPSBjcmVkc1sicmVjYXB0Y2hhIl0NCiAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemUgcmV
 jYXB0Y2hhLiBJbnZhbGlkIGNyZWRlbnRpYWxzIGZpbGUgJyVzJyBmb3JtYXQ6IiAlIGNlcnRfY3JlZHNfZmlsZQ0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgIA0KICAgICAgICBzZW
 xmLnJlY2FwdGNoYV9jcmVkcyA9IE5vbmUNCiAgICAgICAgaWYgcmVjYXB0Y2hhX2NyZWRzWyJlbmFibGVkIl06DQogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuI
 FJlY2FwdGNoYSBpcyBlbmFibGVkIg0KDQogICAgICAgICAgICBzdHJpbmdFbmNyeXB0ZXIgPSBTdHJpbmdFbmNyeXB0ZXIuZGVmYXVsdEluc3RhbmNlKCkNCg0KICAgICAgICAgICAgc2l0ZV9rZXkg
 PSByZWNhcHRjaGFfY3JlZHNbInNpdGVfa2V5Il0NCiAgICAgICAgICAgIHNlY3JldF9rZXkgPSByZWNhcHRjaGFfY3JlZHNbInNlY3JldF9rZXkiXQ0KDQogICAgICAgICAgICB0cnk6DQogICAgICA
 gICAgICAgICAgc2l0ZV9rZXkgPSBzdHJpbmdFbmNyeXB0ZXIuZGVjcnlwdChzaXRlX2tleSkNCiAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICAjIElnbm9yZSBleGNlcHRpb24uIF
 ZhbHVlIGlzIG5vdCBlbmNyeXB0ZWQNCiAgICAgICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuIEFzc3VtaW5nIHRoYXQgJ3NpdGVfa2V5JyBpbiBub3QgZW5jcnlwd
 GVkIg0KDQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgc2VjcmV0X2tleSA9IHN0cmluZ0VuY3J5cHRlci5kZWNyeXB0KHNlY3JldF9rZXkpDQogICAgICAgICAgICBleGNlcHQ6DQog
 ICAgICAgICAgICAgICAgIyBJZ25vcmUgZXhjZXB0aW9uLiBWYWx1ZSBpcyBub3QgZW5jcnlwdGVkDQogICAgICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemUgcmVjYXB0Y2hhLiBBc3N
 1bWluZyB0aGF0ICdzZWNyZXRfa2V5JyBpbiBub3QgZW5jcnlwdGVkIg0KDQogICAgICAgICAgICANCiAgICAgICAgICAgIHNlbGYucmVjYXB0Y2hhX2NyZWRzID0geyAnc2l0ZV9rZXknIDogc2l0ZV
 9rZXksICJzZWNyZXRfa2V5IiA6IHNlY3JldF9rZXkgfQ0KICAgICAgICAgICAgcHJpbnQgIkNlcnQuIEluaXRpYWxpemUgcmVjYXB0Y2hhLiBSZWNhcHRjaGEgaXMgY29uZmlndXJlZCBjb3JyZWN0b
 HkiDQoNCiAgICAgICAgICAgIHJldHVybiBUcnVlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gSW5pdGlhbGl6ZSByZWNhcHRjaGEuIFJlY2FwdGNoYSBpcyBkaXNhYmxl
 ZCINCg0KICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgIGRlZiB2YWxpZGF0ZVJlY2FwdGNoYShzZWxmLCByZWNhcHRjaGFfcmVzcG9uc2UpOg0KICAgICAgICBwcmludCAiQ2VydC4gVmFsaWRhdGU
 gcmVjYXB0Y2hhIHJlc3BvbnNlIg0KDQogICAgICAgIHJlcXVlc3QgPSBGYWNlc0NvbnRleHQuZ2V0Q3VycmVudEluc3RhbmNlKCkuZ2V0RXh0ZXJuYWxDb250ZXh0KCkuZ2V0UmVxdWVzdCgpDQogIC
 AgICAgIHJlbW90ZWlwID0gcmVxdWVzdC5nZXRIZWFkZXIoIlgtRk9SV0FSREVELUZPUiIpDQogICAgICAgIGlmIHJlbW90ZWlwID09IE5vbmU6DQogICAgICAgICAgICByZW1vdGVpcCA9IHJlcXVlc
 3QuZ2V0UmVtb3RlQWRkcigpDQogICAgICAgIHByaW50ICJDZXJ0LiBWYWxpZGF0ZSByZWNhcHRjaGEgcmVzcG9uc2UuIHJlbW90ZWlwOiAnJXMnIiAlIHJlbW90ZWlwDQoNCiAgICAgICAgaHR0cFNl
 cnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoSHR0cFNlcnZpY2UpOw0KDQogICAgICAgIGh0dHBfY2xpZW50ID0gaHR0cFNlcnZpY2UuZ2V0SHR0cHNDbGllbnQoKTsNCiAgICAgICAgaHR0cF9
 jbGllbnRfcGFyYW1zID0gaHR0cF9jbGllbnQuZ2V0UGFyYW1zKCk7DQogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcy5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3Rpb25QTmFtZXMuQ09OTkVDVE
 lPTl9USU1FT1VULCAxNSAqIDEwMDApOw0KICAgICAgICANCiAgICAgICAgcmVjYXB0Y2hhX3ZhbGlkYXRpb25fdXJsID0gImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vcmVjYXB0Y2hhL2FwaS9zaXRld
 mVyaWZ5Ig0KICAgICAgICByZWNhcHRjaGFfdmFsaWRhdGlvbl9yZXF1ZXN0ID0gdXJsbGliLnVybGVuY29kZSh7ICJzZWNyZXQiIDogc2VsZi5yZWNhcHRjaGFfY3JlZHNbJ3NlY3JldF9rZXknXSwg
 InJlc3BvbnNlIiA6IHJlY2FwdGNoYV9yZXNwb25zZSwgInJlbW90ZWlwIiA6IHJlbW90ZWlwIH0pDQogICAgICAgIHJlY2FwdGNoYV92YWxpZGF0aW9uX2hlYWRlcnMgPSB7ICJDb250ZW50LXR5cGU
 iIDogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsICJBY2NlcHQiIDogImFwcGxpY2F0aW9uL2pzb24iIH0NCg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBodHRwX3NlcnZpY2
 VfcmVzcG9uc2UgPSBodHRwU2VydmljZS5leGVjdXRlUG9zdChodHRwX2NsaWVudCwgcmVjYXB0Y2hhX3ZhbGlkYXRpb25fdXJsLCBOb25lLCByZWNhcHRjaGFfdmFsaWRhdGlvbl9oZWFkZXJzLCByZ
 WNhcHRjaGFfdmFsaWRhdGlvbl9yZXF1ZXN0KQ0KICAgICAgICAgICAgaHR0cF9yZXNwb25zZSA9IGh0dHBfc2VydmljZV9yZXNwb25zZS5nZXRIdHRwUmVzcG9uc2UoKQ0KICAgICAgICBleGNlcHQ6
 DQogICAgICAgICAgICBwcmludCAiQ2VydC4gVmFsaWRhdGUgcmVjYXB0Y2hhIHJlc3BvbnNlLiBFeGNlcHRpb246ICIsIHN5cy5leGNfaW5mbygpWzFdDQogICAgICAgICAgICByZXR1cm4gRmFsc2U
 NCg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBpZiBub3QgaHR0cFNlcnZpY2UuaXNSZXNwb25zZVN0YXN0dXNDb2RlT2soaHR0cF9yZXNwb25zZSk6DQogICAgICAgICAgICAgICAgcHJpbnQgIk
 NlcnQuIFZhbGlkYXRlIHJlY2FwdGNoYSByZXNwb25zZS4gR2V0IGludmFsaWQgcmVzcG9uc2UgZnJvbSB2YWxpZGF0aW9uIHNlcnZlcjogIiwgc3RyKGh0dHBfcmVzcG9uc2UuZ2V0U3RhdHVzTGluZ
 SgpLmdldFN0YXR1c0NvZGUoKSkNCiAgICAgICAgICAgICAgICBodHRwU2VydmljZS5jb25zdW1lKGh0dHBfcmVzcG9uc2UpDQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgDQogICAg
 ICAgICAgICByZXNwb25zZV9ieXRlcyA9IGh0dHBTZXJ2aWNlLmdldFJlc3BvbnNlQ29udGVudChodHRwX3Jlc3BvbnNlKQ0KICAgICAgICAgICAgcmVzcG9uc2Vfc3RyaW5nID0gaHR0cFNlcnZpY2U
 uY29udmVydEVudGl0eVRvU3RyaW5nKHJlc3BvbnNlX2J5dGVzKQ0KICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQ0KICAgICAgICBmaW5hbGx5Og0KICAgICAgIC
 AgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlLmNsb3NlQ29ubmVjdGlvbigpDQoNCiAgICAgICAgaWYgcmVzcG9uc2Vfc3RyaW5nID09IE5vbmU6DQogICAgICAgICAgICBwcmludCAiQ2VydC4gVmFsa
 WRhdGUgcmVjYXB0Y2hhIHJlc3BvbnNlLiBHZXQgZW1wdHkgcmVzcG9uc2UgZnJvbSB2YWxpZGF0aW9uIHNlcnZlciINCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICANCiAgICAgICAg
 cmVzcG9uc2UgPSBqc29uLmxvYWRzKHJlc3BvbnNlX3N0cmluZykNCiAgICAgICAgDQogICAgICAgIHJldHVybiByZXNwb25zZVsic3VjY2VzcyJdDQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!2FDB.CF02,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: Passport authentication module
displayName: passport
gluuStatus: false
inum: %(inumOrg)s!2FDB.CF02
oxConfigurationProperty: {"value1":"generic_remote_attributes_list","value2":"username, email, name, name, givenName, familyName, provider","description":""}
oxConfigurationProperty: {"value1":"generic_local_attributes_list","value2":"uid, mail, cn, displayName, givenName, sn, provider","description":""}
oxLevel: 60
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IEFydmluZCBUb21hcg0KIw0KDQpmcm9tIG9yZy5qYm9zcy5zZWFtLmNvbnRleHRzIGltcG9ydCBDb250ZXh0LCBDb250ZXh0
 cw0KZnJvbSBvcmcuamJvc3Muc2VhbS5mYWNlcyBpbXBvcnQgRmFjZXNNZXNzYWdlcw0KZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQNCmZyb20gb3JnLmpib3NzLnN
 lYW0uaW50ZXJuYXRpb25hbCBpbXBvcnQgU3RhdHVzTWVzc2FnZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydC
 BBcnJheXMsIEFycmF5TGlzdCwgSGFzaE1hcCwgSWRlbnRpdHlIYXNoTWFwDQpmcm9tIG9yZy54ZGkub3hhdXRoLmNsaWVudCBpbXBvcnQgVG9rZW5DbGllbnQsIFRva2VuUmVxdWVzdCwgVXNlckluZ
 m9DbGllbnQNCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuY29tbW9uIGltcG9ydCBHcmFudFR5cGUsIEF1dGhlbnRpY2F0aW9uTWV0aG9kDQpmcm9tIG9yZy54ZGkub3hhdXRoLm1vZGVsLmp3dCBp
 bXBvcnQgSnd0LCBKd3RDbGFpbU5hbWUNCmZyb20gb3JnLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5DQpmcm9tIG9yZy54ZGkubW9kZWwuY3VzdG9tLnNjcmlwdC50eXBlLmF1dGg
 gaW1wb3J0IFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZQ0KZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgQ2xpZW50U2VydmljZSwgQXV0aGVudGljYXRpb25TZX
 J2aWNlDQpmcm9tIG9yZy54ZGkub3hhdXRoLm1vZGVsLmNvbW1vbiBpbXBvcnQgVXNlcg0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlcg0KZnJvbSBvcmcueGRpLm94YXV0aC51d
 GlsIGltcG9ydCBTZXJ2ZXJVdGlsDQoNCnRyeToNCiAgICBpbXBvcnQganNvbg0KZXhjZXB0IEltcG9ydEVycm9yOg0KICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24NCmltcG9ydCBqYXZhDQpp
 bXBvcnQgcmUNCg0KDQpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQo
 gICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgcHJpbnQgIlBhc3Nwb3J0OiBCYXNpYy4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQogIC
 AgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiUGFzc3BvcnQ6IEJhc2ljLiBJbml0aWFsaXphdGlvbiBpbml0IG1ldGhvZCBjYWxsIg0KICAgI
 CAgICBzZWxmLmV4dGVuc2lvbk1vZHVsZSA9IE5vbmUNCiAgICAgICAgc2VsZi5hdHRyaWJ1dGVzTWFwcGluZyA9IE5vbmUNCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRh
 aW5zS2V5KCJnZW5lcmljX3JlbW90ZV9hdHRyaWJ1dGVzX2xpc3QiKSBhbmQNCiAgICAgICAgICAgICAgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiZ2VuZXJpY19sb2NhbF9
 hdHRyaWJ1dGVzX2xpc3QiKSk6DQoNCiAgICAgICAgICAgIHJlbW90ZUF0dHJpYnV0ZXNMaXN0ID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJnZW5lcmljX3JlbW90ZV9hdHRyaWJ1dGVzX2
 xpc3QiKS5nZXRWYWx1ZTIoKQ0KICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc0VtcHR5KHJlbW90ZUF0dHJpYnV0ZXNMaXN0KSk6DQogICAgICAgICAgICAgICAgcHJpbnQgIlBhc3Nwb3J0O
 iBJbml0aWFsaXphdGlvbi4gVGhlIHByb3BlcnR5IGdlbmVyaWNfcmVtb3RlX2F0dHJpYnV0ZXNfbGlzdCBpcyBlbXB0eSINCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgICAgICAg
 ICAgbG9jYWxBdHRyaWJ1dGVzTGlzdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZ2VuZXJpY19sb2NhbF9hdHRyaWJ1dGVzX2xpc3QiKS5nZXRWYWx1ZTIoKQ0KICAgICAgICAgICAgaWY
 gKFN0cmluZ0hlbHBlci5pc0VtcHR5KGxvY2FsQXR0cmlidXRlc0xpc3QpKToNCiAgICAgICAgICAgICAgICBwcmludCAiUGFzc3BvcnQ6IEluaXRpYWxpemF0aW9uLiBUaGUgcHJvcGVydHkgZ2VuZX
 JpY19sb2NhbF9hdHRyaWJ1dGVzX2xpc3QgaXMgZW1wdHkiDQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAgIHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLnByZ
 XBhcmVBdHRyaWJ1dGVzTWFwcGluZyhyZW1vdGVBdHRyaWJ1dGVzTGlzdCwgbG9jYWxBdHRyaWJ1dGVzTGlzdCkNCiAgICAgICAgICAgIGlmIChzZWxmLmF0dHJpYnV0ZXNNYXBwaW5nID09IE5vbmUp
 Og0KICAgICAgICAgICAgICAgIHByaW50ICJQYXNzcG9ydDogSW5pdGlhbGl6YXRpb24uIFRoZSBhdHRyaWJ1dGVzIG1hcHBpbmcgaXNuJ3QgdmFsaWQiDQogICAgICAgICAgICAgICAgcmV0dXJuIEZ
 hbHNlDQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiZXh0ZW5zaW9uX21vZHVsZSIpKToNCiAgICAgICAgICAgIGV4dGVuc2lvbk1vZHVsZU5hbWUgPSBjb2
 5maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImV4dGVuc2lvbl9tb2R1bGUiKS5nZXRWYWx1ZTIoKQ0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIHNlbGYuZXh0ZW5zaW9uTW9kdWxlI
 D0gX19pbXBvcnRfXyhleHRlbnNpb25Nb2R1bGVOYW1lKQ0KICAgICAgICAgICAgICAgIGV4dGVuc2lvbk1vZHVsZUluaXRSZXN1bHQgPSBzZWxmLmV4dGVuc2lvbk1vZHVsZS5pbml0KGNvbmZpZ3Vy
 YXRpb25BdHRyaWJ1dGVzKQ0KICAgICAgICAgICAgICAgIGlmIChub3QgZXh0ZW5zaW9uTW9kdWxlSW5pdFJlc3VsdCk6DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICA
 gICAgZXhjZXB0IEltcG9ydEVycm9yLCBleDoNCiAgICAgICAgICAgICAgICBwcmludCAiUGFzc3BvcnQ6IEluaXRpYWxpemF0aW9uLiBGYWlsZWQgdG8gbG9hZCBnZW5lcmljX2V4dGVuc2lvbl9tb2
 R1bGU6IiwgZXh0ZW5zaW9uTW9kdWxlTmFtZQ0KICAgICAgICAgICAgICAgIHByaW50ICJQYXNzcG9ydDogSW5pdGlhbGl6YXRpb24uIFVuZXhwZWN0ZWQgZXJyb3I6IiwgZXgNCiAgICAgICAgICAgI
 CAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydDogRXh0ZW5zaW9uIG1vZHVsZSBrZXkgbm90IGZvdW5kIikNCiAgICAgICAgcmV0dXJuIFRy
 dWUNCg0KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiAgICAgICAgcHJpbnQgIlBhc3Nwb3J0OiBCYXNpYy4gRGVzdHJveSBtZXRob2QgY2FsbCINCiAgICA
 gICAgcHJpbnQgIlBhc3Nwb3J0OiBCYXNpYy4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOg0KICAgICAgIC
 ByZXR1cm4gMQ0KDQogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiAgICAgICAgcmV0dXJuIFRydWUNC
 g0KICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQog
 ICAgZGVmIGdldFVzZXJWYWx1ZUZyb21BdXRoKHNlbGYsIHJlbW90ZV9hdHRyLCByZXF1ZXN0UGFyYW1ldGVycyk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHRvQmVGZWF0Y2hlZCA9ICJsb2d
 pbkZvcm06IiArIHJlbW90ZV9hdHRyDQogICAgICAgICAgICByZXR1cm4gU2VydmVyVXRpbC5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCB0b0JlRmVhdGNoZWQpDQogICAgICAgIGV4Y2
 VwdCBFeGNlcHRpb24sIGVycjoNCiAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydDogRXhjZXB0aW9uIGluc2lkZSBnZXRVc2VyVmFsdWVGcm9tQXV0aCAiICsgc3RyKGVycikpDQoNCiAgICBkZWYgY
 XV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIFVzZXJJZCA9IHNlbGYuZ2V0
 VXNlclZhbHVlRnJvbUF1dGgoInVzZXJpZCIsIHJlcXVlc3RQYXJhbWV0ZXJzKQ0KICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlcnI6DQogICAgICAgICAgICBwcmludCgiUGFzc3BvcnQ6IEVycm9
 yOiAiICsgc3RyKGVycikpDQogICAgICAgIHVzZUJhc2ljQXV0aCA9IEZhbHNlDQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eVN0cmluZyhVc2VySWQpKToNCiAgICAgICAgICAgIHVzZU
 Jhc2ljQXV0aCA9IFRydWUNCg0KICAgICAgICAjIFVzZSBiYXNpYyBtZXRob2QgdG8gbG9nIGluDQogICAgICAgIGlmICh1c2VCYXNpY0F1dGgpOg0KICAgICAgICAgICAgcHJpbnQgIlBhc3Nwb3J0O
 iBCYXNpYyBBdXRoZW50aWNhdGlvbiINCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpDQogICAgICAgICAgICB1c2VyX25hbWUgPSBj
 cmVkZW50aWFscy5nZXRVc2VybmFtZSgpDQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQ0KICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UNCg0
 KICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToNCiAgIC
 AgICAgICAgICAgICB1c2VyU2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkNCiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lL
 CB1c2VyX3Bhc3N3b3JkKQ0KDQogICAgICAgICAgICBpZiAobm90IGxvZ2dlZF9pbik6DQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAg
 ICAgIGVsc2U6DQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpDQogICAgICAgICAgICAgICAgYXV0aGVudGljYXRpb25
 TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkNCiAgICAgICAgICAgICAgICBmb3VuZFVzZXIgPSB1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYW
 xVaWQiLCBzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKCJwcm92aWRlciIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
 CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0UGFyYW1ldGVycykgKyAiOiIgKyBzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKA0KICAgICAgICAgICAgICAgICAgICBzZWxm
 LmdldFVpZFJlbW90ZUF0dHIoKSwgcmVxdWVzdFBhcmFtZXRlcnMpKQ0KDQogICAgICAgICAgICAgICAgaWYgKGZvdW5kVXNlciA9PSBOb25lKToNCiAgICAgICAgICAgICAgICAgICAgbmV3VXNlciA
 9IFVzZXIoKQ0KDQogICAgICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJFbWFpbCA9IHNlbGYuZ2V0VXNlclZhbHVlRnJvbUF1dGgoImVtYWlsIiwgcmVxdW
 VzdFBhcmFtZXRlcnMpDQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sIGVycjoNCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9ydDogRXJyb3IgaW4gZ2V0d
 GluZyB1c2VyIGVtYWlsOiAiICsgc3RyKGVycikpDQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc0VtcHR5U3RyaW5nKFVzZXJFbWFpbCkpOg0KICAgICAgICAgICAgICAg
 ICAgICAgICAgZmFjZXNNZXNzYWdlcyA9IEZhY2VzTWVzc2FnZXMuaW5zdGFuY2UoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgRmFjZXNDb250ZXh0LmdldEN1cnJlbnRJbnN0YW5jZSgpLmdldEV
 4dGVybmFsQ29udGV4dCgpLmdldEZsYXNoKCkuc2V0S2VlcE1lc3NhZ2VzKFRydWUpDQogICAgICAgICAgICAgICAgICAgICAgICBmYWNlc01lc3NhZ2VzLmNsZWFyKCkNCiAgICAgICAgICAgICAgIC
 AgICAgICAgIGZhY2VzTWVzc2FnZXMuYWRkKFN0YXR1c01lc3NhZ2UuU2V2ZXJpdHkuRVJST1IsICJQbGVhc2UgcHJvdmlkZSB5b3VyIGVtYWlsLiIpDQogICAgICAgICAgICAgICAgICAgICAgICBwc
 mludCAiUGFzc3BvcnQ6IEVtYWlsIHdhcyBub3QgcmVjZWl2ZWQgc28gc2VudCBlcnJvciINCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICAgICAgICAg
 IGlmIG5vdCByZS5tYXRjaChyIlteQF0rQFteQF0rXC5bXkBdKyIsIFVzZXJFbWFpbCk6DQogICAgICAgICAgICAgICAgICAgICAgICBmYWNlc01lc3NhZ2VzID0gRmFjZXNNZXNzYWdlcy5pbnN0YW5
 jZSgpDQogICAgICAgICAgICAgICAgICAgICAgICBGYWNlc0NvbnRleHQuZ2V0Q3VycmVudEluc3RhbmNlKCkuZ2V0RXh0ZXJuYWxDb250ZXh0KCkuZ2V0Rmxhc2goKS5zZXRLZWVwTWVzc2FnZXMoVH
 J1ZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2VzTWVzc2FnZXMuY2xlYXIoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdlcy5hZGQoU3RhdHVzTWVzc2FnZS5TZXZlc
 ml0eS5FUlJPUiwgIlBsZWFzZSBwcm92aWRlIHZhbGlkIGVtYWlsLiIpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiUGFzc3BvcnQ6IEVtYWlsIHdhcyBub3QgYSB2YWxpZCBlbWFpbCBz
 byBzZW50IGVycm9yIg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAgICAgICAgICAgZm9yIGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkgaW4gc2VsZi5hdHR
 yaWJ1dGVzTWFwcGluZy5lbnRyeVNldCgpOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlQXR0cmlidXRlID0gYXR0cmlidXRlc01hcHBpbmdFbnRyeS5nZXRLZXkoKQ0KICAgICAgICAgIC
 AgICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGUgPSBhdHRyaWJ1dGVzTWFwcGluZ0VudHJ5LmdldFZhbHVlKCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsQXR0cmlidXRlVmFsdWUgPSBzZ
 WxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKHJlbW90ZUF0dHJpYnV0ZSwgcmVxdWVzdFBhcmFtZXRlcnMpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKGxvY2FsQXR0cmlidXRlICE9IE5vbmUp
 ICYgKGxvY2FsQXR0cmlidXRlVmFsdWUgIT0gInVuZGVmaW5lZCIpICYgKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGUgIT0gInByb3ZpZGVyIikpOg0
 KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1VzZXIuc2V0QXR0cmlidXRlKGxvY2FsQXR0cmlidXRlLCBsb2NhbEF0dHJpYnV0ZVZhbHVlKQ0KICAgICAgICAgICAgICAgICAgICBuZXdVc2
 VyLnNldEF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsIHNlbGYuZ2V0VXNlclZhbHVlRnJvbUF1dGgoInByb3ZpZGVyIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
 CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RQYXJhbWV0ZXJzKSArICI6IiArIHNlbGYuZ2V0VXNlclZhbHVlRnJvbUF1dGgoDQogICAgICAgICAgICAgICAg
 ICAgICAgICBzZWxmLmdldFVpZFJlbW90ZUF0dHIoKSwgcmVxdWVzdFBhcmFtZXRlcnMpKQ0KICAgICAgICAgICAgICAgICAgICBwcmludCAoIlBhc3Nwb3J0OiAiICsgc2VsZi5nZXRVc2VyVmFsdWV
 Gcm9tQXV0aCgicHJvdmlkZXIiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0UGFyYW1ldGVycykgKyAiOiBBdHRlbXB0aW5nIHRvIG
 FkZCB1c2VyICIgKyBzZWxmLmdldFVzZXJWYWx1ZUZyb21BdXRoKA0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXRVaWRSZW1vdGVBdHRyKCksIHJlcXVlc3RQYXJhbWV0ZXJzKSkNCg0KI
 CAgICAgICAgICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICBmb3VuZFVzZXIgPSB1c2VyU2VydmljZS5hZGRVc2VyKG5ld1VzZXIsIFRydWUpDQogICAgICAgICAgICAgICAg
 ICAgICAgICBmb3VuZFVzZXJOYW1lID0gZm91bmRVc2VyLmdldFVzZXJJZCgpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiUGFzc3BvcnQ6IEZvdW5kIHVzZXIgbmFtZSAiICsgZm91bmR
 Vc2VyTmFtZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJBdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQ0KICAgICAgIC
 AgICAgICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0OiBVc2VyIGFkZGVkIHN1Y2Nlc3NmdWxseSBhbmQgaXNVc2VyQXV0aGVudGljYXRlZCA9ICIgKyBzdHIodXNlckF1dGhlbnRpY2F0ZWQpKQ0KI
 CAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlcnI6DQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiUGFzc3BvcnQ6IEVycm9yIGluIGFkZGluZyB1c2VyOiIgKyBzdHIo
 ZXJyKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXNlckF1dGhlbnRpY2F0ZWQNCg0KICAgICAgICAgICAgICAgIGVsc2U
 6DQogICAgICAgICAgICAgICAgICAgIGZvdW5kVXNlck5hbWUgPSBmb3VuZFVzZXIuZ2V0VXNlcklkKCkNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0OiBVc2VyIEZvdW5kICIgKy
 BzdHIoZm91bmRVc2VyTmFtZSkpDQogICAgICAgICAgICAgICAgICAgIHVzZXJBdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQ0KI
 CAgICAgICAgICAgICAgICAgICBwcmludCgiUGFzc3BvcnQ6IElzIHVzZXIgYXV0aGVudGljYXRlZCA9ICIgKyBzdHIodXNlckF1dGhlbnRpY2F0ZWQpKQ0KICAgICAgICAgICAgICAgICAgICByZXR1
 cm4gVHJ1ZQ0KDQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlcnI6DQogICAgICAgICAgICAgICAgcHJpbnQgKCJQYXNzcG9ydDogRXJyb3Igb2NjdXJyZWQgZHVyaW5nIHJlcXVlc3QgcGF
 yYW1ldGVyIGZldGNoaW5nICIgKyBzdHIoZXJyKSkNCg0KICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOg
 0KICAgICAgICBpZiAoc3RlcCA9PSAxKToNCiAgICAgICAgICAgIHByaW50ICJQYXNzcG9ydDogQmFzaWMuIFByZXBhcmUgZm9yIFN0ZXAgMSBtZXRob2QgY2FsbCINCiAgICAgICAgICAgIHJldHVyb
 iBUcnVlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMs
 IHN0ZXApOg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGVwcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHV
 ybiAxDQoNCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg0KICAgICAgICBpZiAoc3RlcCA9PSAxKToNCiAgICAgICAgICAgIHJldHVybi
 AiL2F1dGgvcGFzc3BvcnQvcGFzc3BvcnRsb2dpbi54aHRtbCINCiAgICAgICAgcmV0dXJuICIvYXV0aC9wYXNzcG9ydC9wYXNzcG9ydHBvc3Rsb2dpbi54aHRtbCINCg0KICAgIGRlZiBsb2dvdXQoc
 2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBwcmVwYXJlQXR0cmlidXRlc01hcHBpbmcoc2VsZiwg
 cmVtb3RlQXR0cmlidXRlc0xpc3QsIGxvY2FsQXR0cmlidXRlc0xpc3QpOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICByZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5ID0gU3RyaW5nSGVscGVyLnN
 wbGl0KHJlbW90ZUF0dHJpYnV0ZXNMaXN0LCAiLCIpDQogICAgICAgICAgICBpZiAoQXJyYXlIZWxwZXIuaXNFbXB0eShyZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5KSk6DQogICAgICAgICAgICAgIC
 AgcHJpbnQoIlBhc3Nwb3J0OiBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3BlY2lmaWVkIGluIHJlbW90ZUF0dHJpYnV0ZXNMaXN0IHByb3BlcnR5IikNC
 iAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZXNMaXN0QXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQobG9jYWxBdHRyaWJ1dGVzTGlzdCwgIiwi
 KQ0KICAgICAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzRW1wdHkobG9jYWxBdHRyaWJ1dGVzTGlzdEFycmF5KSk6DQogICAgICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0OiBQcmVwYXJlQXR0cml
 idXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3BlY2lmaWVkIGluIGxvY2FsQXR0cmlidXRlc0xpc3QgcHJvcGVydHkiKQ0KICAgICAgICAgICAgICAgIHJldHVybiBOb25lDQoNCi
 AgICAgICAgICAgIGlmIChsZW4ocmVtb3RlQXR0cmlidXRlc0xpc3RBcnJheSkgIT0gbGVuKGxvY2FsQXR0cmlidXRlc0xpc3RBcnJheSkpOg0KICAgICAgICAgICAgICAgIHByaW50KCJQYXNzcG9yd
 DogUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGUgbnVtYmVyIG9mIGF0dHJpYnV0ZXMgaW4gcmVtb3RlQXR0cmlidXRlc0xpc3QgYW5kIGxvY2FsQXR0cmlidXRlc0xpc3QgaXNuJ3QgZXF1YWwi
 KQ0KICAgICAgICAgICAgICAgIHJldHVybiBOb25lDQoNCiAgICAgICAgICAgIGF0dHJpYnV0ZU1hcHBpbmcgPSBJZGVudGl0eUhhc2hNYXAoKQ0KICAgICAgICAgICAgY29udGFpbnNVaWQgPSBGYWx
 zZQ0KICAgICAgICAgICAgaSA9IDANCiAgICAgICAgICAgIGNvdW50ID0gbGVuKHJlbW90ZUF0dHJpYnV0ZXNMaXN0QXJyYXkpDQogICAgICAgICAgICB3aGlsZSAoaSA8IGNvdW50KToNCiAgICAgIC
 AgICAgICAgICByZW1vdGVBdHRyaWJ1dGUgPSBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UocmVtb3RlQXR0cmlidXRlc0xpc3RBcnJheVtpXSkNCiAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0Z
 SA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShsb2NhbEF0dHJpYnV0ZXNMaXN0QXJyYXlbaV0pDQogICAgICAgICAgICAgICAgYXR0cmlidXRlTWFwcGluZy5wdXQocmVtb3RlQXR0cmlidXRlLCBs
 b2NhbEF0dHJpYnV0ZSkNCiAgICAgICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UobG9jYWxBdHRyaWJ1dGUsICJ1aWQiKSk6DQogICAgICAgICAgICAgICAgICAgIGN
 vbnRhaW5zVWlkID0gVHJ1ZQ0KDQogICAgICAgICAgICAgICAgaSA9IGkgKyAxDQoNCiAgICAgICAgICAgIGlmIChub3QgY29udGFpbnNVaWQpOg0KICAgICAgICAgICAgICAgIHByaW50ICJQYXNzcG
 9ydDogUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGVyZSBpcyBubyBtYXBwaW5nIHRvIG1hbmRhdG9yeSAndWlkJyBhdHRyaWJ1dGUiDQogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUNCg0KI
 CAgICAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZU1hcHBpbmcNCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiwgZXJyOg0KICAgICAgICAgICAgcHJpbnQoIlBhc3Nwb3J0OiBFeGNlcHRpb24gaW5zaWRl
 IHByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZyAiICsgc3RyKGVycikpDQoNCiAgICBkZWYgZ2V0VWlkUmVtb3RlQXR0cihzZWxmKToNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgZm9yIGF0dHJpYnV
 0ZXNNYXBwaW5nRW50cnkgaW4gc2VsZi5hdHRyaWJ1dGVzTWFwcGluZy5lbnRyeVNldCgpOg0KICAgICAgICAgICAgICAgIHJlbW90ZUF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkuZ2
 V0S2V5KCkNCiAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkuZ2V0VmFsdWUoKQ0KICAgICAgICAgICAgICAgIGlmIGxvY2FsQXR0cmlidXRlID09I
 CJ1aWQiOg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVtb3RlQXR0cmlidXRlDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHJldHVybiAiTm90IEdldCBVSUQgcmVsYXRl
 ZCByZW1vdGUgYXR0cmlidXRlIg0KICAgICAgICBleGNlcHQgRXhjZXB0aW9uLCBlcnI6DQogICAgICAgICAgICBwcmludCgiUGFzc3BvcnQ6IEV4Y2VwdGlvbiBpbnNpZGUgZ2V0VWlkUmVtb3RlQXR
 0ciAiICsgc3RyKGVycikpDQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!CB5B.3211,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: Permission Dynamic Scope script
displayName: dynamic_permission
gluuStatus: true
inum: %(inumOrg)s!CB5B.3211
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY29wZSBpbXBvcnQg
 RHluYW1pY1Njb3BlVHlwZQ0KZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWx
 wZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KDQppbXBvcnQgamF2YQ0KDQpjbGFzcyBEeW5hbWljU2NvcGUoRHluYW1pY1Njb3BlVHlwZSk6DQogICAgZGVmIF9faW
 5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToNCiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzDQoNCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1c
 mF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJQZXJtaXNzaW9uIGR5bmFtaWMgc2NvcGUuIEluaXRpYWxpemF0aW9uIg0KDQogICAgICAgIHByaW50ICJQZXJtaXNzaW9uIGR5bmFtaWMg
 c2NvcGUuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSINCg0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICA
 gICAgICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlLiBEZXN0cm95Ig0KICAgICAgICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig
 0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgIyBVcGRhdGUgSnNvbiBXZWIgdG9rZW4gYmVmb3JlIHNpZ25pbmcvZW5jcnlwcmluZyBpdA0KICAgICMgICBkeW5hbWljU2NvcGVDb250ZXh0I
 GlzIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UuZXh0ZXJuYWwuY29udGV4dC5EeW5hbWljU2NvcGVFeHRlcm5hbENvbnRleHQNCiAgICAjICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51
 dGlsLk1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5Pg0KICAgIGRlZiB1cGRhdGUoc2VsZiwgZHluYW1pY1Njb3BlQ29udGV4dCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICA
 gICBwcmludCAiUGVybWlzc2lvbiBkeW5hbWljIHNjb3BlIHNjb3BlLiBVcGRhdGUgbWV0aG9kIg0KDQogICAgICAgIGF1dGhvcml6YXRpb25HcmFudCA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0QX
 V0aG9yaXphdGlvbkdyYW50KCkNCiAgICAgICAgdXNlciA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0VXNlcigpDQogICAgICAgIGpzb25XZWJSZXNwb25zZSA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ
 2V0SnNvbldlYlJlc3BvbnNlKCkNCiAgICAgICAgY2xhaW1zID0ganNvbldlYlJlc3BvbnNlLmdldENsYWltcygpDQoNCiAgICAgICAgcm9sZXMgPSB1c2VyU2VydmljZS5nZXRDdXN0b21BdHRyaWJ1
 dGUodXNlciwgInJvbGUiKTsNCiAgICAgICAgaWYgcm9sZXMgIT0gTm9uZToNCiAgICAgICAgICAgIGNsYWltcy5zZXRDbGFpbSgicm9sZSIsIHJvbGUuZ2V0VmFsdWVzKCkpDQoNCiAgICAgICAgcmV
 0dXJuIFRydWUNCg0KICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBnZX
 RBcGlWZXJzaW9uKHNlbGYpOg0KICAgICAgICByZXR1cm4gMQ0K
oxScriptType: dynamic_scope
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!031C.4A65,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Id Generator script
displayName: id_generator
gluuStatus: false
inum: %(inumOrg)s!0011!031C.4A65
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5pZCBpbXBvcnQgSWRHZW5lcmF0
 b3JUeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdAoKaW1wb3J0IGphdmEKCmN
 sYXNzIElkR2VuZXJhdG9yKElkR2VuZXJhdG9yVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdX
 JyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiSWQgZ2VuZXJhdG9yLiBJbml0aWFsaXphdGlvbiIKICAgICAgI
 CBwcmludCAiSWQgZ2VuZXJhdG9yLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJp
 YnV0ZXMpOgogICAgICAgIHByaW50ICJJZCBnZW5lcmF0b3IuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIklkIGdlbmVyYXRvci4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4
 gVHJ1ZSAgIAoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgIyBJZCBnZW5lcmF0b3IgaW5pdCBtZXRob2QKICAgICMgICBhcHBJZCBpcyBhcHBsaWNhdG
 lvbiBJZAogICAgIyAgIGlkVHlwZSBpcyBJZCBUeXBlCiAgICAjICAgaWRQcmVmaXggaXMgSWQgUHJlZml4CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZ
 XJzb24KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmluZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgZ2VuZXJhdGVJZChzZWxmLCBhcHBJ
 ZCwgaWRUeXBlLCBpZFByZWZpeCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJJZCBnZW5lcmF0b3IuIEdlbmVyYXRlIElkIgogICAgICAgIHByaW50ICJJZCBnZW5lcmF
 0b3IuIEdlbmVyYXRlIElkLiBBcHBJZDogJyIsIGFwcElkLCAiJywgSWRUeXBlOiAnIiwgaWRUeXBlLCAiJywgSWRQcmVmaXg6ICciLCBpZFByZWZpeCwgIiciCgogICAgICAgICMgUmV0dXJuIE5vbm
 Ugb3IgZW1wdHkgc3RyaW5nIHRvIHRyaWdnZXIgZGVmYXVsdCBJZCBnZW5lcmF0aW9uIG1ldGhvZAogICAgICAgIHJldHVybiBOb25lCg==
oxScriptType: id_generator
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!031C.5621,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Dynamic Scope script for org_name
displayName: org_name
gluuStatus: false
inum: %(inumOrg)s!0011!031C.5621
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY29wZSBpbXBvcnQg
 RHluYW1pY1Njb3BlVHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KDQp
 pbXBvcnQgamF2YQ0KDQpjbGFzcyBEeW5hbWljU2NvcGUoRHluYW1pY1Njb3BlVHlwZSk6DQogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToNCiAgICAgICAgc2VsZi5jdX
 JyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzDQoNCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlL
 iBJbml0aWFsaXphdGlvbiINCg0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQogICAgICAgIHJldHVybiBUcnVlICAgDQoNCiAgICBkZWYg
 ZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlLiBEZXN0cm95Ig0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gRGV
 zdHJveWVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgICMgVXBkYXRlIEpzb24gV2ViIHRva2VuIGJlZm9yZSBzaWduaW5nL2VuY3J5cHJpbmcgaXQNCiAgICAjIC
 AgZHluYW1pY1Njb3BlQ29udGV4dCBpcyBvcmcueGRpLm94YXV0aC5zZXJ2aWNlLmV4dGVybmFsLmNvbnRleHQuRHluYW1pY1Njb3BlRXh0ZXJuYWxDb250ZXh0DQogICAgIyAgIGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4NCiAgICBkZWYgdXBkYXRlKHNlbGYsIGR5bmFtaWNTY29wZUNvbnRleHQsIGNvbmZpZ3VyYXRp
 b25BdHRyaWJ1dGVzKToNCiAgICAgICAgcHJpbnQgIkR5bmFtaWMgc2NvcGUuIFVwZGF0ZSBtZXRob2QgZm9yIHNjb3BlIG9yZ19uYW1lIg0KDQogICAgICAgIGR5bmFtaWNTY29wZXMgPSBkeW5hbWl
 jU2NvcGVDb250ZXh0LmdldER5bmFtaWNTY29wZXMoKQ0KICAgICAgICBhdXRob3JpemF0aW9uR3JhbnQgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldEF1dGhvcml6YXRpb25HcmFudCgpDQogICAgIC
 AgIHVzZXIgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldFVzZXIoKQ0KICAgICAgICBqc29uV2ViUmVzcG9uc2UgPSBkeW5hbWljU2NvcGVDb250ZXh0LmdldEpzb25XZWJSZXNwb25zZSgpDQogICAgI
 CAgIGNsYWltcyA9IGpzb25XZWJSZXNwb25zZS5nZXRDbGFpbXMoKQ0KDQogICAgICAgICMgQWRkIG9yZ2FuaXphdGlvbiBuYW1lIGlmIHRoZXJlIGlzIHNjb3BlID0gb3JnX25hbWUNCiAgICAgICAg
 Y2xhaW1zLnNldENsYWltKCJvcmdfbmFtZSIsICJHbHV1LCBJbmMuIikNCg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyw
 gcmVxdWVzdFBhcmFtZXRlcnMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6DQogICAgICAgIHJldHVybiAxDQo=
oxScriptType: dynamic_scope
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!031C.5622,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Dynamic Scope script for work_phone
displayName: work_phone
gluuStatus: false
inum: %(inumOrg)s!0011!031C.5622
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY29wZSBpbXBvcnQg
 RHluYW1pY1Njb3BlVHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KDQp
 pbXBvcnQgamF2YQ0KDQpjbGFzcyBEeW5hbWljU2NvcGUoRHluYW1pY1Njb3BlVHlwZSk6DQogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToNCiAgICAgICAgc2VsZi5jdX
 JyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzDQoNCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlL
 iBJbml0aWFsaXphdGlvbiINCg0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQogICAgICAgIHJldHVybiBUcnVlICAgDQoNCiAgICBkZWYg
 ZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJEeW5hbWljIHNjb3BlLiBEZXN0cm95Ig0KICAgICAgICBwcmludCAiRHluYW1pYyBzY29wZS4gRGV
 zdHJveWVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgICMgVXBkYXRlIEpzb24gV2ViIHRva2VuIGJlZm9yZSBzaWduaW5nL2VuY3J5cHJpbmcgaXQNCiAgICAjIC
 AgZHluYW1pY1Njb3BlQ29udGV4dCBpcyBvcmcueGRpLm94YXV0aC5zZXJ2aWNlLmV4dGVybmFsLmNvbnRleHQuRHluYW1pY1Njb3BlRXh0ZXJuYWxDb250ZXh0DQogICAgIyAgIGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4NCiAgICBkZWYgdXBkYXRlKHNlbGYsIGR5bmFtaWNTY29wZUNvbnRleHQsIGNvbmZpZ3VyYXRp
 b25BdHRyaWJ1dGVzKToNCiAgICAgICAgcHJpbnQgIkR5bmFtaWMgc2NvcGUuIFVwZGF0ZSBtZXRob2QgZm9yIHNjb3BlIHdvcmtfcGhvbmUiDQoNCiAgICAgICAgZHluYW1pY1Njb3BlcyA9IGR5bmF
 taWNTY29wZUNvbnRleHQuZ2V0RHluYW1pY1Njb3BlcygpDQogICAgICAgIGF1dGhvcml6YXRpb25HcmFudCA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0QXV0aG9yaXphdGlvbkdyYW50KCkNCiAgIC
 AgICAgdXNlciA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0VXNlcigpDQogICAgICAgIGpzb25XZWJSZXNwb25zZSA9IGR5bmFtaWNTY29wZUNvbnRleHQuZ2V0SnNvbldlYlJlc3BvbnNlKCkNCiAgI
 CAgICAgY2xhaW1zID0ganNvbldlYlJlc3BvbnNlLmdldENsYWltcygpDQoNCiAgICAgICAgIyBBZGQgd29yayBwaG9uZSBpZiB0aGVyZSBpcyBzY29wZSA9IHdvcmtfcGhvbmUNCiAgICAgICAgd29y
 a1Bob25lID0gdXNlci5nZXRBdHRyaWJ1dGUoInRlbGVwaG9uZU51bWJlciIpOw0KICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHkod29ya1Bob25lKSk6DQogICAgICAgICAgICBjbGF
 pbXMuc2V0Q2xhaW0oIndvcmtfcGhvbmUiLCB3b3JrUGhvbmUpDQoNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcX
 Vlc3RQYXJhbWV0ZXJzKToNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOg0KICAgICAgICByZXR1cm4gMQ0K
oxScriptType: dynamic_scope
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!13D3.E7AD,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Cache Refresh script
displayName: cache_refresh
gluuStatus: false
inum: %(inumOrg)s!0011!13D3.E7AD
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBDYWNoZVJl
 ZnJlc2hUeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdApmcm9tIG9yZy5nbHV
 1Lm94dHJ1c3QubW9kZWwgaW1wb3J0IEdsdXVDdXN0b21BdHRyaWJ1dGUKCmltcG9ydCBqYXZhCgpjbGFzcyBDYWNoZVJlZnJlc2goQ2FjaGVSZWZyZXNoVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2
 VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRya
 WJ1dGVzKToKICAgICAgICBwcmludCAiQ2FjaGUgcmVmcmVzaC4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSIKCiAg
 ICAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIERlc3Ryb3kiCiAgICA
 gICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUgICAKCiAgICAjIFVwZGF0ZSB1c2VyIGVudHJ5IGJlZm9yZSBwZXJzaXN0IG
 l0CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZXJzb24KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmluZ
 ywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgdXBkYXRlVXNlcihzZWxmLCB1c2VyLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNhY2hlIHJlZnJlc2guIFVw
 ZGF0ZVVzZXIgbWV0aG9kIgoKICAgICAgICBhdHRyaWJ1dGVzID0gdXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkKCiAgICAgICAgIyBBZGQgbmV3IGF0dHJpYnV0ZSBwcmVmZXJyZWRMYW5ndWFnZQo
 gICAgICAgIGF0dHJQcmVmZmVyZWRMYW5ndWFnZSA9IEdsdXVDdXN0b21BdHRyaWJ1dGUoInByZWZlcnJlZExhbmd1YWdlIiwgImVuLXVzIikKICAgICAgICBhdHRyaWJ1dGVzLmFkZChhdHRyUHJlZm
 ZlcmVkTGFuZ3VhZ2UpCgogICAgICAgICMgQWRkIG5ldyBhdHRyaWJ1dGUgdXNlclBhc3N3b3JkCiAgICAgICAgYXR0clVzZXJQYXNzd29yZCA9IEdsdXVDdXN0b21BdHRyaWJ1dGUoInVzZXJQYXNzd
 29yZCIsICJ0ZXN0IikKICAgICAgICBhdHRyaWJ1dGVzLmFkZChhdHRyVXNlclBhc3N3b3JkKQoKICAgICAgICAjIFVwZGF0ZSBnaXZlbk5hbWUgYXR0cmlidXRlCiAgICAgICAgZm9yIGF0dHJpYnV0
 ZSBpbiBhdHRyaWJ1dGVzOgogICAgICAgICAgICBhdHRyTmFtZSA9IGF0dHJpYnV0ZS5nZXROYW1lKCkKICAgICAgICAgICAgaWYgKCgiZ2l2ZW5uYW1lIiA9PSBTdHJpbmdIZWxwZXIudG9Mb3dlckN
 hc2UoYXR0ck5hbWUpKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHkoYXR0cmlidXRlLmdldFZhbHVlKCkpKToKICAgICAgICAgICAgICAgIGF0dHJpYnV0ZS5zZXRWYWx1ZShTdHJpbmdIZWxwZX
 IucmVtb3ZlTXVsdGlwbGVTcGFjZXMoYXR0cmlidXRlLmdldFZhbHVlKCkpICsgIiAodXBkYXRlZCkiKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogI
 CAgICAgIHJldHVybiAxCg==
oxScriptType: cache_refresh
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!14AF.A70C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: CAS authentication module
displayName: cas
gluuStatus: false
inum: %(inumOrg)s!0011!14AF.A70C
oxConfigurationProperty: {"value1":"cas_map_user","value2":"true","description":""}
oxConfigurationProperty: {"value1":"cas_renew_opt","value2":"false","description":""}
oxConfigurationProperty: {"value1":"cas_host","value2":"https://%(hostname)s/cas","description":""}
oxLevel: 30
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKaW1wb3J0IHN5cwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dHMK
 ZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3R
 vbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9tIG9yZy54ZGkub3
 hhdXRoLnNlcnZpY2UgaW1wb3J0IEF1dGhlbnRpY2F0aW9uU2VydmljZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UubmV0IGltcG9ydCBIdHRwU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpb
 XBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy5hcGFjaGUuaHR0cC5wYXJhbXMgaW1wb3J0IENvcmVDb25uZWN0aW9uUE5hbWVzCmZy
 b20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEhhc2hNYXAKCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgo
 gICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLC
 Bjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIEluaXRpYWxpemF0aW9uIgogICAgICAgIHByaW50ICJDQVMyLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCiAgI
 CAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQg
 IkNBUzIuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBpc1ZhbGl
 kQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkNBUzIuIFJlc3QgQVBJIGF1dGhlbnRpY2F0ZSBpc1ZhbG
 lkQXV0aGVudGljYXRpb25NZXRob2QiCgogICAgICAgIGlmIChub3QgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjYXNfdmFsaWRhdGlvbl91cmkiKSBhbmQKICAgICAgICAgI
 CAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImNhc192YWxpZGF0aW9uX3BhdHRlcm4iKSBhbmQKICAgICAgICAgICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNL
 ZXkoImNhc192YWxpZGF0aW9uX3RpbWVvdXQiKSkpOgogICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICBjYXNfdmFsaWRhdGlvbl91cmkgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQ
 oImNhc192YWxpZGF0aW9uX3VyaSIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX3ZhbGlkYXRpb25fcGF0dGVybiA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiY2FzX3ZhbGlkYXRpb25fcG
 F0dGVybiIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX3ZhbGlkYXRpb25fdGltZW91dCA9IGludChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc192YWxpZGF0aW9uX3RpbWVvdXQiKS5nZ
 XRWYWx1ZTIoKSkgKiAxMDAwCgogICAgICAgIGh0dHBTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKTsKCiAgICAgICAgaHR0cF9jbGllbnQgPSBodHRwU2VydmljZS5nZXRIdHRwc0NsaWVu
 dCgpOwogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcyA9IGh0dHBfY2xpZW50LmdldFBhcmFtcygpOwogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtcy5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3R
 pb25QTmFtZXMuQ09OTkVDVElPTl9USU1FT1VULCBjYXNfdmFsaWRhdGlvbl90aW1lb3V0KTsKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UgPSBodHRwU2Vydm
 ljZS5leGVjdXRlR2V0KGh0dHBfY2xpZW50LCBjYXNfdmFsaWRhdGlvbl91cmkpCiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2UgPSBodHRwX3NlcnZpY2VfcmVzcG9uc2UuZ2V0SHR0cFJlc3BvbnNlK
 CkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJDQVMyLiBSZXN0IEFQSSBhdXRoZW50aWNhdGUgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kLiBFeGNlcHRpb246ICIsIHN5cy5l
 eGNfaW5mbygpWzFdCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIChodHRwX3Jlc3BvbnNlLmdldFN0YXR1c0xpbmUoKS5nZXRTdGF0dXNDb2RlKCk
 gIT0gMjAwKToKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBSZXN0IEFQSSBhdXRoZW50aWNhdGUgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kLiBHZXQgaW52YWxpZCByZXNwb25zZSBmcm
 9tIENBUzIgc2VydmVyOiAiLCBzdHIoaHR0cF9yZXNwb25zZS5nZXRTdGF0dXNMaW5lKCkuZ2V0U3RhdHVzQ29kZSgpKQogICAgICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc
 3BvbnNlKQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgICAgICAgICAgdmFsaWRhdGlvbl9yZXNwb25zZV9ieXRlcyA9IGh0dHBTZXJ2aWNlLmdldFJlc3BvbnNlQ29udGVudCho
 dHRwX3Jlc3BvbnNlKQogICAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3BvbnNlX3N0cmluZyA9IGh0dHBTZXJ2aWNlLmNvbnZlcnRFbnRpdHlUb1N0cmluZyh2YWxpZGF0aW9uX3Jlc3BvbnNlX2J5dGV
 zKQogICAgICAgICAgICBodHRwU2VydmljZS5jb25zdW1lKGh0dHBfcmVzcG9uc2UpCiAgICAgICAgZmluYWxseToKICAgICAgICAgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlLmNsb3NlQ29ubmVjdG
 lvbigpCgogICAgICAgIGlmICh2YWxpZGF0aW9uX3Jlc3BvbnNlX3N0cmluZyA9PSBOb25lIG9yIHZhbGlkYXRpb25fcmVzcG9uc2Vfc3RyaW5nLmZpbmQoY2FzX3ZhbGlkYXRpb25fcGF0dGVybikgP
 T0gLTEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gUmVzdCBBUEkgYXV0aGVudGljYXRlIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZC4gR2V0IGludmFsaWQgbG9naW4gcGFnZSBmcm9tIENB
 UzIgc2VydmVyOiIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2V
 UeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgY2FzX2FsdF9hdXRoX21vZGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19hbHRfYXV0aF9tb2RlIikuZ2V0Vm
 FsdWUyKCkKICAgICAgICByZXR1cm4gY2FzX2FsdF9hdXRoX21vZGUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc
 3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNl
 KCkKICAgICAgICB1c2VyU2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICBodHRwU2VydmljZSA9IEh0dHBTZXJ2aWNlLmluc3RhbmNlKCk7CgogICAgICAgIGNhc19ob3N0ID0
 gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfaG9zdCIpLmdldFZhbHVlMigpCiAgICAgICAgY2FzX21hcF91c2VyID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQX
 R0cmlidXRlcy5nZXQoImNhc19tYXBfdXNlciIpLmdldFZhbHVlMigpLCBGYWxzZSkKICAgICAgICBjYXNfcmVuZXdfb3B0ID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0c
 mlidXRlcy5nZXQoImNhc19yZW5ld19vcHQiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAgIGNhc19leHRyYV9vcHRzID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRl
 cy5jb250YWluc0tleSgiY2FzX2V4dHJhX29wdHMiKSk6CiAgICAgICAgICAgIGNhc19leHRyYV9vcHRzID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfZXh0cmFfb3B0cyIpLmdldFZ
 hbHVlMigpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEiCiAgICAgICAgICAgIHRpY2tldF9hcnJheSA9IHJlcX
 Vlc3RQYXJhbWV0ZXJzLmdldCgidGlja2V0IikKICAgICAgICAgICAgaWYgQXJyYXlIZWxwZXIuaXNFbXB0eSh0aWNrZXRfYXJyYXkpOgogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlb
 nRpY2F0ZSBmb3Igc3RlcCAxLiB0aWNrZXQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHRpY2tldCA9IHRpY2tldF9hcnJheVswXQogICAgICAgICAg
 ICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHRpY2tldDogIiArIHRpY2tldAoKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc0VtcHR5U3RyaW5nKHRpY2tldCkpOgo
 gICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiB0aWNrZXQgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgIC
 AgIyBWYWxpZGF0ZSB0aWNrZXQKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKCiAgI
 CAgICAgICAgIHBhcmFtZXRlcnNNYXAgPSBIYXNoTWFwKCkKICAgICAgICAgICAgcGFyYW1ldGVyc01hcC5wdXQoInNlcnZpY2UiLCBodHRwU2VydmljZS5jb25zdHJ1Y3RTZXJ2ZXJVcmwocmVxdWVz
 dCkgKyAiL3Bvc3Rsb2dpbiIpCiAgICAgICAgICAgIGlmIChjYXNfcmVuZXdfb3B0KToKICAgICAgICAgICAgICAgIHBhcmFtZXRlcnNNYXAucHV0KCJyZW5ldyIsICJ0cnVlIikKICAgICAgICAgICA
 gcGFyYW1ldGVyc01hcC5wdXQoInRpY2tldCIsIHRpY2tldCkKICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UucGFyYW1ldGVyc0FzU3RyaW
 5nKHBhcmFtZXRlcnNNYXApCiAgICAgICAgICAgIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpID0gY2FzX2hvc3QgKyAiL3NlcnZpY2VWYWxpZGF0ZT8iICsgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkKI
 CAgICAgICAgICAgaWYgKGNhc19leHRyYV9vcHRzICE9IE5vbmUpOgogICAgICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkgPSBjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSArICImIiAr
 IGNhc19leHRyYV9vcHRzCgogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpOiAiICsgY2FzX3NlcnZpY2VfcmVxdWV
 zdF91cmkKCiAgICAgICAgICAgIGh0dHBfY2xpZW50ID0gaHR0cFNlcnZpY2UuZ2V0SHR0cHNDbGllbnQoKTsKICAgICAgICAgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlID0gaHR0cFNlcnZpY2UuZX
 hlY3V0ZUdldChodHRwX2NsaWVudCwgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkpCiAgICAgICAgICAgIAogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uX2NvbnRlbnQgP
 SBodHRwU2VydmljZS5jb252ZXJ0RW50aXR5VG9TdHJpbmcoaHR0cFNlcnZpY2UuZ2V0UmVzcG9uc2VDb250ZW50KGh0dHBfc2VydmljZV9yZXNwb25zZS5nZXRIdHRwUmVzcG9uc2UoKSkpCiAgICAg
 ICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UuY2xvc2VDb25uZWN0aW9uKCkKCiAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9
 yIHN0ZXAgMS4gdmFsaWRhdGlvbl9jb250ZW50OiAiICsgdmFsaWRhdGlvbl9jb250ZW50CiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHZhbGlkYXRpb25fY29udGVudCk6CiAgIC
 AgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFRpY2tldCB2YWxpZGF0aW9uIHJlc3BvbnNlIGlzIGludmFsaWQiCiAgICAgICAgICAgICAgICByZXR1cm4gR
 mFsc2UKCiAgICAgICAgICAgIGNhczJfYXV0aF9mYWlsdXJlID0gc2VsZi5wYXJzZV90YWcodmFsaWRhdGlvbl9jb250ZW50LCAiY2FzOmF1dGhlbnRpY2F0aW9uRmFpbHVyZSIpCiAgICAgICAgICAg
 IHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gY2FzMl9hdXRoX2ZhaWx1cmU6ICIsIGNhczJfYXV0aF9mYWlsdXJlCgogICAgICAgICAgICBjYXMyX3VzZXJfdWlkID0gc2VsZi5
 wYXJzZV90YWcodmFsaWRhdGlvbl9jb250ZW50LCAiY2FzOnVzZXIiKQogICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGNhczJfdXNlcl91aWQ6ICIsIGNhcz
 JfdXNlcl91aWQKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmICgoY2FzMl9hdXRoX2ZhaWx1cmUgIT0gTm9uZSkgb3IgKGNhczJfdXNlcl91aWQgPT0gTm9uZSkpOgogICAgICAgICAgICAgICAgc
 HJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBUaWNrZXQgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgKGNhc19tYXBfdXNl
 cik6CiAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQ6IGNhczI6IiArIGNhczJ
 fdXNlcl91aWQKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIGNhczJfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPS
 B1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiY2FzMjoiICsgY2FzMl91c2VyX3VpZCkKCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9P
 SBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQg
 IkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDIiCiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImNhczJfY291bnRfbG9naW5fc3RlcHM
 iLCAyKQogICAgICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXMyX3VzZXJfdWlkIiwgY2FzMl91c2VyX3VpZCkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgIC
 AgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfd
 XNlcl9uYW1lOiAiICsgZm91bmRfdXNlcl9uYW1lCgogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgICAg
 IGNyZWRlbnRpYWxzLnNldFVzZXJuYW1lKGZvdW5kX3VzZXJfbmFtZSkKICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxzLnNldFVzZXIoZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgCiAgICA
 gICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXMyX2NvdW
 50X2xvZ2luX3N0ZXBzIiwgMSkKCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlbnRpY2F0ZSBmb3Igc
 3RlcCAxLiBBdHRlbXB0aW5nIHRvIGZpbmQgdXNlciBieSB1aWQ6IiArIGNhczJfdXNlcl91aWQKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIGNh
 czJfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyKGNhczJfdXNlcl91aWQpCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J
 5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgIC
 AgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgZm91bmRfdXNlcl9uYW1lID0gZmluZF91c2VyX2J5X3VpZC5nZXRVc2VySWQoKQogICAgICAgICAgICAgICAgcHJpbnQgIkNBUzIuIEF1dGhlb
 nRpY2F0ZSBmb3Igc3RlcCAxLiBmb3VuZF91c2VyX25hbWU6ICIgKyBmb3VuZF91c2VyX25hbWUKCiAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3Jl
 ZGVudGlhbHMoKQogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMuc2V0VXNlcm5hbWUoZm91bmRfdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMuc2V0VXNlcihmaW5kX3VzZXJ
 fYnlfdWlkKQoKICAgICAgICAgICAgICAgIHByaW50ICJDQVMyLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBzdGVwcyB0byAxIgogICAgICAgICAgICAgICAgY29udGV4dC
 5zZXQoImNhczJfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkNBUzIuI
 EF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbkF0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQogICAgICAgICAgICBpZiAoc2Vzc2lv
 bkF0dHJpYnV0ZXMgPT0gTm9uZSkgb3Igbm90IHNlc3Npb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJjYXMyX3VzZXJfdWlkIik6CiAgICAgICAgICAgICAgICBwcmludCAiQ0FTMi4gQXV0aGVudGl
 jYXRlIGZvciBzdGVwIDIuIGNhczJfdXNlcl91aWQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNhczJfdXNlcl91aWQgPSBzZXNzaW9uQXR0cmlidX
 Rlcy5nZXQoImNhczJfdXNlcl91aWQiKQogICAgICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhjYXMyX3VzZXJfdWlkKQogICAgICAgICAgICBpZiAob
 m90IHBhc3NlZF9zdGVwMSk6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAg
 ICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICA
 gIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2
 VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICAgICAgaWYgKG5vd
 CBsb2dnZWRfaW4pOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIGNhczJfdXNlcl91aWQKICAgICAgICAg
 ICAgIyBBdm9pZCBtYXBwaW5nIENBUzIgYWNjb3VudCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyQnl
 BdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiY2FzMjoiICsgY2FzMl91c2VyX3VpZCkKCiAgICAgICAgICAgIGlmIChmaW5kX3VzZXJfYnlfdWlkID09IE5vbmUpOgogICAgICAgICAgICAgICAgIy
 BBZGQgY2FzMl91c2VyX3VpZCB0byB1c2VyIG9uZSBpZCBVSURzCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF0dHJpYnV0ZSh1c2VyX25hbWUsI
 CJveEV4dGVybmFsVWlkIiwgImNhczI6IiArIGNhczJfdXNlcl91aWQpCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmlu
 dCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIEZhaWxlZCB0byB1cGRhdGUgY3VycmVudCB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICA
 gIHJldHVybiBUcnVlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmb3VuZF91c2VyX25hbWUgPSBmaW5kX3VzZXJfYnlfdWlkLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBwcm
 ludCAiQ0FTMi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIGZvdW5kX3VzZXJfbmFtZTogIiArIGZvdW5kX3VzZXJfbmFtZQogICAgCiAgICAgICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1Y
 WxzKHVzZXJfbmFtZSwgZm91bmRfdXNlcl9uYW1lKToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIAogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBlbHNlOgog
 ICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICB
 jb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBhdXRoZW50aWNhdGlvblNlcnZpY2UgPSBBdXRoZW50aWNhdGlvblNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIGh0dH
 BTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKTsKCiAgICAgICAgY2FzX2hvc3QgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19ob3N0IikuZ2V0VmFsdWUyKCkKICAgICAgI
 CBjYXNfcmVuZXdfb3B0ID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImNhc19yZW5ld19vcHQiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAg
 IGNhc19leHRyYV9vcHRzID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY2FzX2V4dHJhX29wdHMiKSk6CiAgICAgICAgICAgIGNhc19leHRyYV9
 vcHRzID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjYXNfZXh0cmFfb3B0cyIpLmdldFZhbHVlMigpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQ0FTMi
 4gUHJlcGFyZSBmb3Igc3RlcCAxIgoKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKI
 CAgICAgICAgICAgcGFyYW1ldGVyc01hcCA9IEhhc2hNYXAoKQogICAgICAgICAgICBwYXJhbWV0ZXJzTWFwLnB1dCgic2VydmljZSIsIGh0dHBTZXJ2aWNlLmNvbnN0cnVjdFNlcnZlclVybChyZXF1
 ZXN0KSArICIvcG9zdGxvZ2luIikKICAgICAgICAgICAgaWYgKGNhc19yZW5ld19vcHQpOgogICAgICAgICAgICAgICAgcGFyYW1ldGVyc01hcC5wdXQoInJlbmV3IiwgInRydWUiKQogICAgICAgICA
 gICBjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5wYXJhbWV0ZXJzQXNTdHJpbmcocGFyYW1ldGVyc01hcCkKICAgICAgICAgICAgY2FzX3NlcnZpY2VfcmVxdW
 VzdF91cmkgPSBjYXNfaG9zdCArICIvbG9naW4/IiArIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpCiAgICAgICAgICAgIGlmIGNhc19leHRyYV9vcHRzICE9IE5vbmU6CiAgICAgICAgICAgICAgICBjY
 XNfc2VydmljZV9yZXF1ZXN0X3VyaSA9IGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpICsgIiYiICsgY2FzX2V4dHJhX29wdHMKCiAgICAgICAgICAgIHByaW50ICJDQVMyLiBQcmVwYXJlIGZvciBzdGVw
 IDEuIGNhc19zZXJ2aWNlX3JlcXVlc3RfdXJpOiAiICsgY2FzX3NlcnZpY2VfcmVxdWVzdF91cmkKCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJjYXNfc2VydmljZV9yZXF1ZXN0X3VyaSIsIGNhc19
 zZXJ2aWNlX3JlcXVlc3RfdXJpKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiQ0FTMi4gUHJlcGFyZSBmb3Igc3RlcC
 AyIgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25ma
 Wd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJjYXMyX3VzZXJfdWlkIikKICAgICAgICAKICAg
 ICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5
 nZXRFdmVudENvbnRleHQoKQogICAgICAgIGlmIChjb250ZXh0LmlzU2V0KCJjYXMyX2NvdW50X2xvZ2luX3N0ZXBzIikpOgogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoImNhczJfY291bn
 RfbG9naW5fc3RlcHMiKQogICAgICAgIAogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZ
 iAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9jYXMyL2NhczJsb2dpbi54aHRtbCIKICAgICAgICByZXR1cm4gIi9hdXRoL2NhczIvY2FzMnBvc3Rsb2dpbi54aHRtbCIKCiAg
 ICBkZWYgcGFyc2VfdGFnKHNlbGYsIHN0ciwgdGFnKToKICAgICAgICB0YWcxX3BvczEgPSBzdHIuZmluZCgiPCIgKyB0YWcpCiAgICAgICAgIyAgTm8gdGFnIGZvdW5kLCByZXR1cm4gZW1wdHkgc3R
 yaW5nLgogICAgICAgIGlmIHRhZzFfcG9zMSA9PSAtMTogcmV0dXJuIE5vbmUKICAgICAgICB0YWcxX3BvczIgPSBzdHIuZmluZCgiPiIsIHRhZzFfcG9zMSkKICAgICAgICBpZiB0YWcxX3BvczIgPT
 0gLTE6IHJldHVybiBOb25lCiAgICAgICAgdGFnMl9wb3MxID0gc3RyLmZpbmQoIjwvIiArIHRhZywgdGFnMV9wb3MyKQogICAgICAgIGlmIHRhZzJfcG9zMSA9PSAtMTogcmV0dXJuIE5vbmUKCiAgI
 CAgICAgcmV0dXJuIHN0clt0YWcxX3BvczIrMTp0YWcyX3BvczFdLnN0cmlwKCkKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6
 CiAgICAgICAgcmV0dXJuIFRydWUK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!24FD.B96E,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: oxCustomScript
objectClass: top
description: OTP Validation of passwords using Yubicloud authentication module
displayName: yubicloud
gluuStatus: false
inum: %(inumOrg)s!0011!24FD.B96E
oxConfigurationProperty: {"value1":"yubicloud_uri","value2":"api.yubico.com","description":""}
oxConfigurationProperty: {"value1":"yubicloud_api_key","value2":"","description":""}
oxConfigurationProperty: {"value1":"yubicloud_id","value2":"","description":""}
oxLevel: 90
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4sIEFydW5tb3poaQojCgpmcm9tIG9yZy5qYm9zcy5zZWFtLnNlY3VyaXR5IGltcG9ydCBJZGVudGl0eQpm
 cm9tIG9yZy54ZGkubW9kZWwuY3VzdG9tLnNjcmlwdC50eXBlLmF1dGggaW1wb3J0IFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UgaW1wb3J0IFVzZXJ
 TZXJ2aWNlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIKCmltcG9ydCBqYXZhCgppbXBvcnQgdXJsbGliMgppbXBvcnQgdXJsbGliCmltcG9ydCB1dWlkCgoKY2xhc3MgUGVyc2
 9uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pb
 GxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEluaXRpYWxpemF0aW9uIgoK
 ICAgICAgICBzZWxmLmFwaV9zZXJ2ZXIgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInl1YmljbG91ZF91cmkiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNlbGYuYXBpX2tleSA9IGNvbmZpZ3V
 yYXRpb25BdHRyaWJ1dGVzLmdldCgieXViaWNsb3VkX2FwaV9rZXkiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNlbGYuY2xpZW50X2lkID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJ5dWJpY2
 xvdWRfaWQiKS5nZXRWYWx1ZTIoKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiWXViaWNsb
 3VkLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1
 dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGl
 jYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYX
 Rpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEF1dGhlbnRpY2F0ZSBmb3Igc
 3RlcCAxIgoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcm5hbWUgPSBjcmVkZW50aWFscy5nZXRVc2Vy
 bmFtZSgpCiAgICAgICAgICAgIG90cCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgICMgVmFsaWRhdGUgb3RwIGxlbmd0aAogICAgICAgICAgICBpZiBsZW4ob3RwKSA8IDM
 yIG9yIGxlbihvdHApID4gNDg6CiAgICAgICAgICAgICAgICBwcmludCAiWXViaWNsb3VkLiBJbnZhbGlkIE9UUCBsZW5ndGgiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgIC
 AgIHVzZXJfc2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IHVzZXJfc2VydmljZS5nZXRVc2VyKHVzZXJuYW1lKQoKICAgICAgICAgICAgcHVibGljX2tle
 SA9IHVzZXIuZ2V0QXR0cmlidXRlKCd5dWJpa2V5SWQnKQoKICAgICAgICAgICAgIyBNYXRjaCB0aGUgdXNlciB3aXRoIHRoZSB5dWJpa2V5CiAgICAgICAgICAgIGlmIHB1YmxpY19rZXkgbm90IGlu
 IG90cDoKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIFB1YmxpYyBLZXkgbm90IG1hdGNoaW5nIE9UUCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgZGF
 0YSA9ICIiCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG5vbmNlID0gc3RyKHV1aWQudXVpZDQoKSkucmVwbGFjZSgiLSIsICIiKQogICAgICAgICAgICAgICAgcGFyYW1zID0gdXJsbG
 liLnVybGVuY29kZSh7ImlkIjogc2VsZi5jbGllbnRfaWQsICJvdHAiOiBvdHAsICJub25jZSI6IG5vbmNlfSkKICAgICAgICAgICAgICAgIHVybCA9ICJodHRwczovLyIgKyBzZWxmLmFwaV9zZXJ2Z
 XIgKyAiL3dzYXBpLzIuMC92ZXJpZnkvPyIgKyBwYXJhbXMKICAgICAgICAgICAgICAgIGYgPSB1cmxsaWIyLnVybG9wZW4odXJsKQogICAgICAgICAgICAgICAgZGF0YSA9IGYucmVhZCgpCiAgICAg
 ICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEV4Y2VwdGlvbiAiLCBlCgogICAgICAgICAgICBpZiAnc3RhdHVzPU9LJyBpbiBkYXR
 hOgogICAgICAgICAgICAgICAgdXNlcl9zZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VybmFtZSkKICAgICAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIEF1dGhlbnRpY2F0aW9uIFN1Y2Nlc3NmdW
 wiCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgcHJpbnQgIll1YmljbG91ZC4gRW5kIG9mIFN0ZXAgMS4gUmV0dXJuaW5nIEZhbHNlLiIKICAgICAgICAgICAgcmV0dXJuI
 EZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1l
 dGVycywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJZdWJpY2xvdWQuIFByZXBhcmUgZm9yIFN0ZXAgMSIKICAgICAgICAgICAgcmV0dXJuIFRydWUKICA
 gICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgIC
 AgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBnZ
 XRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgcmV0dXJuICIiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRl
 cywgcmVxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!2DAF.F995,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample UMA Authorization policy
displayName: uma_authorization_policy
gluuStatus: false
inum: %(inumOrg)s!0011!2DAF.F995
oxConfigurationProperty: {"value1":"allowed_clients","value2":"%(scim_rp_client_id)s, %(passport_rp_client_id)s","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: ZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51bWEgaW1wb3J0IEF1dGhvcml6YXRpb25Qb2xpY3lUeXBlDQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nS
 GVscGVyLCBBcnJheUhlbHBlcg0KZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cywgQXJyYXlMaXN0LCBIYXNoU2V0DQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UudW1hLmF1dGhvcml6YXRp
 b24gaW1wb3J0IEF1dGhvcml6YXRpb25Db250ZXh0DQoNCmltcG9ydCBqYXZhDQoNCmNsYXNzIEF1dGhvcml6YXRpb25Qb2xpY3koQXV0aG9yaXphdGlvblBvbGljeVR5cGUpOg0KICAgIGRlZiBfX2l
 uaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndX
 JhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiVU1BIGF1dGhvcml6YXRpb24gcG9saWN5LiBJbml0aWFsaXphdGlvbiINCg0KICAgICAgICBzZWxmLmNsaWVudHNTZXQgPSBzZWxmLnByZ
 XBhcmVDbGllbnRzU2V0KGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKQ0KICAgICAgICBwcmludCAiVU1BIGF1dGhvcml6YXRpb24gcG9saWN5LiBJbml0aWFsaXphdGlvbi4gQ291bnQgYXV0aG9yaXpl
 ZCBjbGllbnRzOiAlcyIgJSBzZWxmLmNsaWVudHNTZXQuc2l6ZSgpDQoNCiAgICAgICAgcHJpbnQgIlVNQSBhdXRob3JpemF0aW9uIHBvbGljeS4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Ig0KDQo
 gICAgICAgIHJldHVybiBUcnVlICAgDQoNCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJVTUEgYXV0aG9yaXphdGlvbiBwb2xpY3
 kuIERlc3Ryb3kiDQogICAgICAgIHByaW50ICJVTUEgYXV0aG9yaXphdGlvbiBwb2xpY3kuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiDQogICAgICAgIHJldHVybiBUcnVlICAgDQoNCiAgICBkZWYgZ
 2V0QXBpVmVyc2lvbihzZWxmKToNCiAgICAgICAgcmV0dXJuIDENCg0KICAgICMgUHJvY2VzcyBwb2xpY3kgcnVsZQ0KICAgICMgICBhdXRob3JpemF0aW9uQ29udGV4dCBpcyBvcmcueGRpLm94YXV0
 aC5zZXJ2aWNlLnVtYS5hdXRob3JpemF0aW9uLkF1dGhvcml6YXRpb25Db250ZXh0DQogICAgIyAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGV
 DdXN0b21Qcm9wZXJ0eT4NCiAgICBkZWYgYXV0aG9yaXplKHNlbGYsIGF1dGhvcml6YXRpb25Db250ZXh0LCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJVTUEgQXV0aG
 9yaXphdGlvbiBwb2xpY3kuIEF0dGVtcHRpbmcgdG8gYXV0aG9yaXplIGNsaWVudCINCiAgICAgICAgY2xpZW50X2lkID0gYXV0aG9yaXphdGlvbkNvbnRleHQuZ2V0R3JhbnQoKS5nZXRDbGllbnRJZ
 CgpDQoNCiAgICAgICAgcHJpbnQgIlVNQSBBdXRob3JpemF0aW9uIHBvbGljeS4gQ2xpZW50OiAiLCBjbGllbnRfaWQNCiAgICAgICAgaWYgKHNlbGYuY2xpZW50c1NldC5jb250YWlucyhjbGllbnRf
 aWQpKToNCiAgICAgICAgICAgIHByaW50ICJVTUEgQXV0aG9yaXphdGlvbiBwb2xpY3kuIEF1dGhvcml6aW5nIGNsaWVudCINCiAgICAgICAgICAgIHJldHVybiBUcnVlDQogICAgICAgIGVsc2U6DQo
 gICAgICAgICAgICBwcmludCAiVU1BIEF1dGhvcml6YXRpb24gcG9saWN5LiBDbGllbnQgaXNuJ3QgYXV0aG9yaXplZCINCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgIHByaW50IC
 JVTUEgQXV0aG9yaXphdGlvbiBwb2xpY3kuIEF1dGhvcml6aW5nIGNsaWVudCINCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBwcmVwYXJlQ2xpZW50c1NldChzZWxmLCBjb25maWd1cmF0a
 W9uQXR0cmlidXRlcyk6DQogICAgICAgIGNsaWVudHNTZXQgPSBIYXNoU2V0KCkNCiAgICAgICAgaWYgKG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiYWxsb3dlZF9jbGll
 bnRzIikpOg0KICAgICAgICAgICAgcmV0dXJuIGNsaWVudHNTZXQNCg0KICAgICAgICBhbGxvd2VkQ2xpZW50c0xpc3QgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImFsbG93ZWRfY2xpZW5
 0cyIpLmdldFZhbHVlMigpDQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShhbGxvd2VkQ2xpZW50c0xpc3QpKToNCiAgICAgICAgICAgIHByaW50ICJVTUEgYXV0aG9yaXphdGlvbiBwb2
 xpY3kuIEluaXRpYWxpemF0aW9uLiBUaGUgcHJvcGVydHkgYWxsb3dlZF9jbGllbnRzIGlzIGVtcHR5Ig0KICAgICAgICAgICAgcmV0dXJuIGNsaWVudHNTZXQgICAgDQoNCiAgICAgICAgYWxsb3dlZ
 ENsaWVudHNMaXN0QXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQoYWxsb3dlZENsaWVudHNMaXN0LCAiLCIpDQogICAgICAgIGlmIChBcnJheUhlbHBlci5pc0VtcHR5KGFsbG93ZWRDbGllbnRzTGlz
 dEFycmF5KSk6DQogICAgICAgICAgICBwcmludCAiVU1BIGF1dGhvcml6YXRpb24gcG9saWN5LiBJbml0aWFsaXphdGlvbi4gVGhlcmUgYXJlbid0IGNsaWVudHMgc3BlY2lmaWVkIGluIGFsbG93ZWR
 fY2xpZW50cyBwcm9wZXJ0eSINCiAgICAgICAgICAgIHJldHVybiBjbGllbnRzU2V0DQogICAgICAgIA0KICAgICAgICAjIENvbnZlcnQgdG8gSGFzaFNldCB0byBxdWljayBzZWFyY2gNCiAgICAgIC
 AgaSA9IDANCiAgICAgICAgY291bnQgPSBsZW4oYWxsb3dlZENsaWVudHNMaXN0QXJyYXkpDQogICAgICAgIHdoaWxlIChpIDwgY291bnQpOg0KICAgICAgICAgICAgY2xpZW50ID0gYWxsb3dlZENsa
 WVudHNMaXN0QXJyYXlbaV0NCiAgICAgICAgICAgIGNsaWVudHNTZXQuYWRkKGNsaWVudCkNCiAgICAgICAgICAgIGkgPSBpICsgMQ0KDQogICAgICAgIHJldHVybiBjbGllbnRzU2V0DQo=
oxScriptType: uma_authorization_policy
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!4BBE.C6A8,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Basic (with user locking) authentication module
displayName: basic_lock
gluuStatus: false
inum: %(inumOrg)s!0011!4BBE.C6A8
oxConfigurationProperty: {"value1":"invalid_login_count_attribute","value2":"oxCountInvalidLogin","description":""}
oxConfigurationProperty: {"value1":"maximum_invalid_login_attemps","value2":"3","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRp
 Lm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9
 tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLmdsdXUuc2l0ZS5sZGFwLnBlcnNpc3RlbmNlLmV4Y2VwdGlvbiBpbXBvcnQgQXV0aGVudGljYXRpb25FeGNlcHRpb24KCm
 ltcG9ydCBqYXZhCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgI
 CAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2lj
 IChsb2NrIGFjY291bnQpLiBJbml0aWFsaXphdGlvbiIKCiAgICAgICAgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSA9ICJveENvdW50SW52YWxpZExvZ2luIgogICAgICAgIGlmIGNvbmZ
 pZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJpbnZhbGlkX2xvZ2luX2NvdW50X2F0dHJpYnV0ZSIpOgogICAgICAgICAgICBzZWxmLmludmFsaWRMb2dpbkNvdW50QXR0cmlidXRlID0gY2
 9uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJpbnZhbGlkX2xvZ2luX2NvdW50X2F0dHJpYnV0ZSIpLmdldFZhbHVlMigpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQgIkJhc2ljIChsb
 2NrIGFjY291bnQpLiBJbml0aWFsaXphdGlvbi4gVXNpbmcgZGVmYXVsdCBhdHRyaWJ1dGUiCgogICAgICAgIHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHMgPSAzCiAgICAgICAgaWYgY29u
 ZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm1heGltdW1faW52YWxpZF9sb2dpbl9hdHRlbXBzIik6CiAgICAgICAgICAgIHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHMgPSB
 TdHJpbmdIZWxwZXIudG9JbnRlZ2VyKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgibWF4aW11bV9pbnZhbGlkX2xvZ2luX2F0dGVtcHMiKS5nZXRWYWx1ZTIoKSkKICAgICAgICBlbHNlOgogIC
 AgICAgICAgICBwcmludCAiQmFzaWMgKGxvY2sgYWNjb3VudCkuIEluaXRpYWxpemF0aW9uLiBVc2luZyBkZWZhdWx0IG51bWJlciBhdHRlbXB0cyIKCiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrI
 GFjY291bnQpLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkuIGludmFsaWRfbG9naW5fY291bnRfYXR0cmlidXRlOiAnJXMnLCBtYXhpbXVtX2ludmFsaWRfbG9naW5fYXR0ZW1wczogJyVzJyIgJSAo
 c2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSwgc2VsZi5tYXhpbXVtSW52YWxpZExvZ2luQXR0ZW1wcykKCiAgICAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCB
 jb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBEZXN0cm95IgogICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gRGVzdH
 JveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhd
 Glvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0
 aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cml
 idXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBBdXRoZW50aWNhdGUgZm9yIH
 N0ZXAgMSIKCiAgICAgICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZ
 XJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJp
 bmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICB1c2VyU2Vydml
 jZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW
 1lLCB1c2VyX3Bhc3N3b3JkKQogICAgICAgICAgICAgICAgZXhjZXB0IEF1dGhlbnRpY2F0aW9uRXhjZXB0aW9uOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50K
 S4gQXV0aGVudGljYXRlLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIgJyVzJyIgJSB1c2VyX25hbWUKCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIGNv
 dW50SW52YWxpZExvZ2luQXJyaWJ1dGVWYWx1ZSA9IHNlbGYuZ2V0VXNlckF0dHJpYnV0ZVZhbHVlKHVzZXJfbmFtZSwgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSkKICAgICAgICAgICA
 gICAgIGNvdW50SW52YWxpZExvZ2luID0gU3RyaW5nSGVscGVyLnRvSW50ZWdlcihjb3VudEludmFsaWRMb2dpbkFycmlidXRlVmFsdWUsIDApCgogICAgICAgICAgICAgICAgaWYgY291bnRJbnZhbG
 lkTG9naW4gPCBzZWxmLm1heGltdW1JbnZhbGlkTG9naW5BdHRlbXBzOgogICAgICAgICAgICAgICAgICAgIGNvdW50SW52YWxpZExvZ2luID0gY291bnRJbnZhbGlkTG9naW4gKyAxCiAgICAgICAgI
 CAgICAgICAgICAgc2VsZi5zZXRVc2VyQXR0cmlidXRlVmFsdWUodXNlcl9uYW1lLCBzZWxmLmludmFsaWRMb2dpbkNvdW50QXR0cmlidXRlLCBTdHJpbmdIZWxwZXIudG9TdHJpbmcoY291bnRJbnZh
 bGlkTG9naW4pKQoKICAgICAgICAgICAgICAgIGlmIGNvdW50SW52YWxpZExvZ2luID49IHNlbGYubWF4aW11bUludmFsaWRMb2dpbkF0dGVtcHM6CiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2N
 rVXNlcih1c2VyX25hbWUpCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHNlbGYuc2V0VXNlckF0dHJpYnV0ZVZhbHVlKHVzZXJfbm
 FtZSwgc2VsZi5pbnZhbGlkTG9naW5Db3VudEF0dHJpYnV0ZSwgU3RyaW5nSGVscGVyLnRvU3RyaW5nKDApKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgI
 CByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBpZiBzdGVwID09
 IDE6CiAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gUHJlcGFyZSBmb3IgU3RlcCAxIgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICA
 gIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gTm9uZQoKICAgIG
 RlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvb
 mZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6
 CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0VXNlckF0dHJpYnV0ZVZhbHVlKHNlbGYsIHVzZXJfbmFtZSwgYXR0cmlidXRlX25hbWUpOgogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0V
 tcHR5KHVzZXJfbmFtZSk6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID
 0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX25hbWUsIGF0dHJpYnV0ZV9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgI
 CAgICAgY3VzdG9tX2F0dHJpYnV0ZV92YWx1ZSA9IHVzZXJTZXJ2aWNlLmdldEN1c3RvbUF0dHJpYnV0ZShmaW5kX3VzZXJfYnlfdWlkLCBhdHRyaWJ1dGVfbmFtZSkKICAgICAgICBpZiBjdXN0b21f
 YXR0cmlidXRlX3ZhbHVlID09IE5vbmU6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgYXR0cmlidXRlX3ZhbHVlID0gY3VzdG9tX2F0dHJpYnV0ZV92YWx1ZS5nZXRWYWx
 1ZSgpCgogICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gR2V0IHVzZXIgYXR0cmlidXRlLiBVc2VyJ3MgJyVzJyBhdHRyaWJ1dGUgJyVzJyB2YWx1ZSBpcyAnJXMnIiAlICh1c2VyX2
 5hbWUsIGF0dHJpYnV0ZV9uYW1lLCBhdHRyaWJ1dGVfdmFsdWUpCgogICAgICAgIHJldHVybiBhdHRyaWJ1dGVfdmFsdWUKCiAgICBkZWYgc2V0VXNlckF0dHJpYnV0ZVZhbHVlKHNlbGYsIHVzZXJfb
 mFtZSwgYXR0cmlidXRlX25hbWUsIGF0dHJpYnV0ZV92YWx1ZSk6CiAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkodXNlcl9uYW1lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAg
 ICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSkKICAgICAgICBpZiBmaW5
 kX3VzZXJfYnlfdWlkID09IE5vbmU6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgdXNlclNlcnZpY2Uuc2V0Q3VzdG9tQXR0cmlidXRlKGZpbmRfdXNlcl9ieV91aWQsIG
 F0dHJpYnV0ZV9uYW1lLCBhdHRyaWJ1dGVfdmFsdWUpCiAgICAgICAgdXBkYXRlZF91c2VyID0gdXNlclNlcnZpY2UudXBkYXRlVXNlcihmaW5kX3VzZXJfYnlfdWlkKQoKICAgICAgICBwcmludCAiQ
 mFzaWMgKGxvY2sgYWNjb3VudCkuIFNldCB1c2VyIGF0dHJpYnV0ZS4gVXNlcidzICclcycgYXR0cmlidXRlICclcycgdmFsdWUgaXMgJyVzJyIgJSAodXNlcl9uYW1lLCBhdHRyaWJ1dGVfbmFtZSwg
 YXR0cmlidXRlX3ZhbHVlKQoKICAgICAgICByZXR1cm4gdXBkYXRlZF91c2VyCgogICAgZGVmIGxvY2tVc2VyKHNlbGYsIHVzZXJfbmFtZSk6CiAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHk
 odXNlcl9uYW1lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2
 VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSkKICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgc3RhdHVzX2F0dHJpY
 nV0ZV92YWx1ZSA9IHVzZXJTZXJ2aWNlLmdldEN1c3RvbUF0dHJpYnV0ZShmaW5kX3VzZXJfYnlfdWlkLCAiZ2x1dVN0YXR1cyIpCiAgICAgICAgaWYgc3RhdHVzX2F0dHJpYnV0ZV92YWx1ZSAhPSBO
 b25lOgogICAgICAgICAgICB1c2VyX3N0YXR1cyA9IHN0YXR1c19hdHRyaWJ1dGVfdmFsdWUuZ2V0VmFsdWUoKQogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzKHVzZXJfc3RhdHVzLCA
 iaW5hY3RpdmUiKToKICAgICAgICAgICAgICAgIHByaW50ICJCYXNpYyAobG9jayBhY2NvdW50KS4gTG9jayB1c2VyLiBVc2VyICclcycgbG9ja2VkIGFscmVhZHkiICUgdXNlcl9uYW1lCiAgICAgIC
 AgICAgICAgICByZXR1cm4KICAgICAgICAKICAgICAgICB1c2VyU2VydmljZS5zZXRDdXN0b21BdHRyaWJ1dGUoZmluZF91c2VyX2J5X3VpZCwgImdsdXVTdGF0dXMiLCAiaW5hY3RpdmUiKQogICAgI
 CAgIHVwZGF0ZWRfdXNlciA9IHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoZmluZF91c2VyX2J5X3VpZCkKCiAgICAgICAgcHJpbnQgIkJhc2ljIChsb2NrIGFjY291bnQpLiBMb2NrIHVzZXIuIFVzZXIg
 JyVzJyBsb2NrZWQiICUgdXNlcl9uYW1lCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.AF9C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: UAF authentication module
displayName: uaf
gluuStatus: false
inum: %(inumOrg)s!0011!5018.AF9C
oxConfigurationProperty: {"value1":"uaf_server_uri","value2":"https://%(hostname)s","description":""}
oxConfigurationProperty: {"value1":"uaf_policy_name","value2":"default","description":""}
oxConfigurationProperty: {"value1":"qr_options","value2":"{ width: 400, height: 400 }","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxConfigurationProperty: {"value1":"send_push_notifaction","value2":"false","description":""}
oxLevel: 90
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKIyBSZXF1aXJlcyB0aGUgZm9sbG93aW5nIGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMg
 ICB1YWZfc2VydmVyX3VyaTogaHR0cHM6Ly9jZS1kZXYuZ2x1dS5vcmcKIwojIFRoZXNlIGFyZSBub24gbWFuZGF0b3J5IGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMgICB1YWZfcG9saWN
 5X25hbWU6IGRlZmF1bHQKIyAgIHNlbmRfcHVzaF9ub3RpZmFjdGlvbjogZmFsc2UKIyAgIHJlZ2lzdHJhdGlvbl91cmk6IGh0dHBzOi8vY2UtZGV2LmdsdXUub3JnL2lkZW50aXR5L3JlZ2lzdGVyCi
 MgICBxcl9vcHRpb25zOiB7IHdpZHRoOiA0MDAsIGhlaWdodDogNDAwIH0KCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb
 25UeXBlCmZyb20gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3JnLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gb3Jn
 LnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlclNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgU2Vzc2lvblN0YXRlU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5
 nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy54ZGkub3hhdXRoLnV0aWwgaW1wb3J0IFNlcnZlclV0aWwKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC
 5jb25maWcgaW1wb3J0IENvbnN0YW50cwpmcm9tIG9yZy5qYm9zcy5yZXN0ZWFzeS5jbGllbnQgaW1wb3J0IENsaWVudFJlc3BvbnNlRmFpbHVyZQpmcm9tIGphdmF4LndzLnJzLmNvcmUgaW1wb3J0I
 FJlc3BvbnNlCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlLm5ldCBpbXBvcnQgSHR0cFNlcnZpY2UKZnJvbSBvcmcuYXBhY2hlLmh0dHAucGFy
 YW1zIGltcG9ydCBDb3JlQ29ubmVjdGlvblBOYW1lcwoKaW1wb3J0IHN5cwppbXBvcnQgamF2YQoKdHJ5OgogICAgaW1wb3J0IGpzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXB
 sZWpzb24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6Ci
 AgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVQ
 UYuIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBpZiBub3QgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInVhZl9zZXJ2ZXJfdXJpIik6CiAgICAgICAgICAgIHByaW50ICJVQUYu
 IEluaXRpYWxpemF0aW9uLiBQcm9wZXJ0eSB1YWZfc2VydmVyX3VyaSBpcyBtYW5kYXRvcnkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzZWxmLnVhZl9zZXJ2ZXJfdXJpID0gY29
 uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJ1YWZfc2VydmVyX3VyaSIpLmdldFZhbHVlMigpCgogICAgICAgIHNlbGYudWFmX3BvbGljeV9uYW1lID0gImRlZmF1bHQiCiAgICAgICAgaWYgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInVhZl9wb2xpY3lfbmFtZSIpOgogICAgICAgICAgICBzZWxmLnVhZl9wb2xpY3lfbmFtZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdld
 CgidWFmX3BvbGljeV9uYW1lIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24gPSBGYWxzZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNv
 bnRhaW5zS2V5KCJzZW5kX3B1c2hfbm90aWZhY3Rpb24iKToKICAgICAgICAgICAgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24gPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb25
 BdHRyaWJ1dGVzLmdldCgic2VuZF9wdXNoX25vdGlmYWN0aW9uIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvbl91cmkgPSBOb25lCiAgICAgICAgaWYgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInJlZ2lzdHJhdGlvbl91cmkiKToKICAgICAgICAgICAgc2VsZi5yZWdpc3RyYXRpb25fdXJpID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ
 2V0KCJyZWdpc3RyYXRpb25fdXJpIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgc2VsZi5jdXN0b21Rck9wdGlvbnMgPSB7fQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5z
 S2V5KCJxcl9vcHRpb25zIik6CiAgICAgICAgICAgIHNlbGYuY3VzdG9tUXJPcHRpb25zID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJxcl9vcHRpb25zIikuZ2V0VmFsdWUyKCkKCiAgICA
 gICAgcHJpbnQgIlVBRi4gSW5pdGlhbGl6aW5nIEhUVFAgY2xpZW50IgogICAgICAgIGh0dHBTZXJ2aWNlID0gSHR0cFNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgIHNlbGYuaHR0cF9jbGllbnQgPS
 BodHRwU2VydmljZS5nZXRIdHRwc0NsaWVudCgpCiAgICAgICAgaHR0cF9jbGllbnRfcGFyYW1zID0gc2VsZi5odHRwX2NsaWVudC5nZXRQYXJhbXMoKQogICAgICAgIGh0dHBfY2xpZW50X3BhcmFtc
 y5zZXRJbnRQYXJhbWV0ZXIoQ29yZUNvbm5lY3Rpb25QTmFtZXMuQ09OTkVDVElPTl9USU1FT1VULCAxNSAqIDEwMDApCgogICAgICAgIHByaW50ICJVQUYuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxs
 eS4gdWFmX3NlcnZlcl91cmk6ICclcycsIHVhZl9wb2xpY3lfbmFtZTogJyVzJywgc2VuZF9wdXNoX25vdGlmYWN0aW9uOiAnJXMnLCByZWdpc3RyYXRpb25fdXJpOiAnJXMnLCBxcl9vcHRpb25zOiA
 nJXMnIiAlIChzZWxmLnVhZl9zZXJ2ZXJfdXJpLCBzZWxmLnVhZl9wb2xpY3lfbmFtZSwgc2VsZi5zZW5kX3B1c2hfbm90aWZhY3Rpb24sIHNlbGYucmVnaXN0cmF0aW9uX3VyaSwgc2VsZi5jdXN0b2
 1Rck9wdGlvbnMpCiAgICAgICAgCiAgICAgICAgcHJpbnQgIlVBRi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZ
 mlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVQUYuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIlVBRi4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1
 ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXR
 pb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dH
 JpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgI
 CAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICAgICAgICBjb250
 ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBzZWxmLnNldEV
 2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgogICAgICAgIC
 AgICAKICAgICAgICAgICAgYXV0aGVudGljYXRlZF91c2VyID0gc2VsZi5wcm9jZXNzQmFzaWNBdXRoZW50aWNhdGlvbihjcmVkZW50aWFscykKICAgICAgICAgICAgaWYgYXV0aGVudGljYXRlZF91c
 2VyID09IE5vbmU6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHVhZl9hdXRoX21ldGhvZCA9ICJhdXRoZW50aWNhdGUiCiAgICAgICAgICAgICMgVW5jb21tZW50IHRo
 aXMgYmxvY2sgaWYgeW91IG5lZWQgdG8gYWxsb3cgdXNlciBzZWNvbmQgZGV2aWNlIHJlZ2lzdHJhdGlvbgogICAgICAgICAgICAjZW5yb2xsbWVudF9tb2RlID0gU2VydmVyVXRpbC5nZXRGaXJzdFZ
 hbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAibG9naW5Gb3JtOnJlZ2lzdGVyQnV0dG9uIikKICAgICAgICAgICAgI2lmIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5KGVucm9sbG1lbnRfbW9kZSk6CiAgIC
 AgICAgICAgICMgICAgdWFmX2F1dGhfbWV0aG9kID0gImVucm9sbCIKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX21ldGhvZCA9PSAiYXV0aGVudGljYXRlIjoKICAgICAgICAgI
 CAgICAgIHVzZXJfZW5yb2xsbWVudHMgPSBzZWxmLmZpbmRFbnJvbGxtZW50cyhjcmVkZW50aWFscykKICAgICAgICAgICAgICAgIGlmIGxlbih1c2VyX2Vucm9sbG1lbnRzKSA9PSAwOgogICAgICAg
 ICAgICAgICAgICAgIHVhZl9hdXRoX21ldGhvZCA9ICJlbnJvbGwiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFRoZXJlIGlzIG5vIFVBRiB
 lbnJvbGxtZW50IGZvciB1c2VyICclcycuIENoYW5naW5nIHVhZl9hdXRoX21ldGhvZCB0byAnJXMnIiAlICh1c2VyX25hbWUsIHVhZl9hdXRoX21ldGhvZCkKCiAgICAgICAgICAgIHByaW50ICJVQU
 YuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiB1YWZfYXV0aF9tZXRob2Q6ICclcyciICUgdWFmX2F1dGhfbWV0aG9kCiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgidWFmX2F1d
 GhfbWV0aG9kIiwgdWFmX2F1dGhfbWV0aG9kKQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNh
 dGUgZm9yIHN0ZXAgMiIKCiAgICAgICAgICAgIHNlc3Npb25fc3RhdGUgPSBTZXNzaW9uU3RhdGVTZXJ2aWNlLmluc3RhbmNlKCkuZ2V0U2Vzc2lvblN0YXRlRnJvbUNvb2tpZSgpCiAgICAgICAgICA
 gIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHNlc3
 Npb25fc3RhdGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGlmIHVzZXJfbmFtZSA9PSBOb25lOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljY
 XRlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgdXNlciBuYW1lIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICB1YWZfYXV0aF9yZXN1bHQgPSBTZXJ2ZXJV
 dGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJhdXRoX3Jlc3VsdCIpCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX3Jlc3VsdCAhPSAic3VjY2VzcyI6CiAgICAgICAgICAgICAgICB
 wcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gYXV0aF9yZXN1bHQgaXMgJyVzJyIgJSB1YWZfYXV0aF9yZXN1bHQKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgIC
 AgICAgIyBSZXN0b3JlIHN0YXRlIGZyb20gc2Vzc2lvbgogICAgICAgICAgICB1YWZfYXV0aF9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJ1YWZfYXV0aF9tZXRob2QiKQoKICAgICAgI
 CAgICAgaWYgbm90IHVhZl9hdXRoX21ldGhvZCBpbiBbJ2Vucm9sbCcsICdhdXRoZW50aWNhdGUnXToKICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBG
 YWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIuIHVhZl9hdXRoX21ldGhvZDogJyVzJyIgJSB1YWZfYXV0aF9tZXRob2QKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyB
 SZXF1ZXN0IFNUQVRVU19PQkIKICAgICAgICAgICAgaWYgVHJ1ZToKICAgICAgICAgICAgICAgICNUT0RPOiBSZW1vdmUgdGhpcyBjb25kaXRpb24KICAgICAgICAgICAgICAgICMgSXQncyB3b3JrYX
 JvdW5kIGJlY3Vhc2UgaXQncyBub3QgcG9zc2libGUgdG8gY2FsbCBTVEFUVVNfT0JCIDIgdGltZXMuIEZpcnN0IHRpbWUgb24gYnJvd3NlciBhbmQgc2Vjb25kIGltZSBvbiBzZXJ2ZXIKICAgICAgI
 CAgICAgICAgIHVhZl91c2VyX2RldmljZV9oYW5kbGUgPSBTZXJ2ZXJVdGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJhdXRoX2hhbmRsZSIpCiAgICAgICAgICAgIGVsc2U6CiAg
 ICAgICAgICAgICAgICB1YWZfb2JiX2F1dGhfbWV0aG9kID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgidWFmX29iYl9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgICAgICB1YWZfb2JiX3NlcnZlcl9
 1cmkgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJ1YWZfb2JiX3NlcnZlcl91cmkiKQogICAgICAgICAgICAgICAgdWFmX29iYl9zdGFydF9yZXNwb25zZSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZX
 QoInVhZl9vYmJfc3RhcnRfcmVzcG9uc2UiKQoKICAgICAgICAgICAgICAgICMgUHJlcGFyZSBTVEFUVVNfT0JCCiAgICAgICAgICAgICAgICB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlX2pzb24gPSBqc
 29uLmxvYWRzKHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UpCiAgICAgICAgICAgICAgICB1YWZfb2JiX3N0YXR1c19yZXF1ZXN0X2RpY3Rpb25hcnkgPSB7ICJvcGVyYXRpb24iOiAiU1RBVFVTXyVzIiAl
 IHVhZl9vYmJfYXV0aF9tZXRob2QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ1c2VyTmFtZSI6IHVzZXJfbmFtZSwKICAgICAgICAgICAgICA
 gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5lZWREZXRhaWxzIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm
 9vYlN0YXR1c0hhbmRsZSI6IHVhZl9vYmJfc3RhcnRfcmVzcG9uc2VfanNvblsib29iU3RhdHVzSGFuZGxlIl0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI
 CAgICB9CiAgICAKICAgICAgICAgICAgICAgIHVhZl9vYmJfc3RhdHVzX3JlcXVlc3QgPSBqc29uLmR1bXBzKHVhZl9vYmJfc3RhdHVzX3JlcXVlc3RfZGljdGlvbmFyeSwgc2VwYXJhdG9ycz0oJywn
 LCc6JykpCiAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gUHJlcGFyZWQgU1RBVFVTIHJlcXVlc3Q6ICclcycgdG8gc2VuZCB0byAnJXMnIiAlICh1YWZ
 fb2JiX3N0YXR1c19yZXF1ZXN0LCB1YWZfb2JiX3NlcnZlcl91cmkpCgogICAgICAgICAgICAgICAgdWFmX3N0YXR1c19vYmJfcmVzcG9uc2UgPSBzZWxmLmV4ZWN1dGVQb3N0KHVhZl9vYmJfc2Vydm
 VyX3VyaSwgdWFmX29iYl9zdGF0dXNfcmVxdWVzdCkKICAgICAgICAgICAgICAgIGlmIHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhb
 HNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIEdldCBTVEFUVVMgcmVzcG9uc2U6ICclcyciICUgdWFmX3N0YXR1c19vYmJfcmVzcG9uc2UKICAg
 ICAgICAgICAgICAgIHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlX2pzb24gPSBqc29uLmxvYWRzKHVhZl9zdGF0dXNfb2JiX3Jlc3BvbnNlKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB
 pZiB1YWZfc3RhdHVzX29iYl9yZXNwb25zZV9qc29uWyJzdGF0dXNDb2RlIl0gIT0gNDAwMDoKICAgICAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVU
 FGIG9wZXJhdGlvbiBzdGF0dXMgaXMgaW52YWxpZC4gc3RhdHVzQ29kZTogJyVzJyIgJSB1YWZfc3RhdHVzX29iYl9yZXNwb25zZV9qc29uWyJzdGF0dXNDb2RlIl0KICAgICAgICAgICAgICAgICAgI
 CByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICB1YWZfdXNlcl9kZXZpY2VfaGFuZGxlID0gdWFmX3N0YXR1c19vYmJfcmVzcG9uc2VfanNvblsiYWRkaXRpb25hbEluZm8iXVsiYXV0aGVudGlj
 YXRvcnNSZXN1bHQiXVsiaGFuZGxlIl0KCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHVhZl91c2VyX2RldmljZV9oYW5kbGUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlVBRi4
 gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZ2V0IFVBRiBoYW5kbGUiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHVhZl91c2VyX2V4dGVybmFsX3VpZCA9IC
 J1YWY6JXMiICUgdWFmX3VzZXJfZGV2aWNlX2hhbmRsZQogICAgICAgICAgICBwcmludCAiVUFGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVUFGIGhhbmRsZTogJyVzJyIgJSB1YWZfdXNlcl9le
 HRlcm5hbF91aWQKCiAgICAgICAgICAgIGlmIHVhZl9hdXRoX21ldGhvZCA9PSAiYXV0aGVudGljYXRlIjoKICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgaWYgdXNlciB1c2VkIGRldmljZSB3aXRo
 IHNhbWUga2VZSGFuZGxlCiAgICAgICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRzID0gc2VsZi5maW5kRW5yb2xsbWVudHMoY3JlZGVudGlhbHMpCiAgICAgICAgICAgICAgICBpZiBsZW4odXNlcl9
 lbnJvbGxtZW50cykgPT0gMDoKICAgICAgICAgICAgICAgICAgICB1YWZfYXV0aF9tZXRob2QgPSAiZW5yb2xsIgogICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3
 Igc3RlcCAyLiBUaGVyZSBpcyBubyBVQUYgZW5yb2xsbWVudCBmb3IgdXNlciAnJXMnLiIgJSB1c2VyX25hbWUKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgICAgI
 AogICAgICAgICAgICAgICAgZm9yIHVzZXJfZW5yb2xsbWVudCBpbiB1c2VyX2Vucm9sbG1lbnRzOgogICAgICAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHVz
 ZXJfZW5yb2xsbWVudCwgdWFmX3VzZXJfZGV2aWNlX2hhbmRsZSk6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBUaGVyZSBpcyBVQUY
 gZW5yb2xsbWVudCBmb3IgdXNlciAnJXMnLiBVc2VyIGF1dGhlbnRpY2F0ZWQgc3VjY2Vzc2Z1bGx5IiAlIHVzZXJfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgIC
 AgICAgICBlbHNlOgogICAgICAgICAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgICAgICAgICAgIyBEb3VibGUgY2hlY2sganVzdCB0byBtYWtlIHN1c
 mUuIFdlIGRpZCBjaGVja2luZyBpbiBwcmV2aW91cyBzdGVwCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2hpY2ggaGFzIHVhZl91c2VyX2V4dGVybmFsX3VpZAogICAg
 ICAgICAgICAgICAgIyBBdm9pZCBtYXBwaW5nIHVzZXIgY2VydCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXN
 lclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgdWFmX3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3VpZC
 A9PSBOb25lOgogICAgICAgICAgICAgICAgICAgICMgQWRkIHVhZl91c2VyX2V4dGVybmFsX3VpZCB0byB1c2VyJ3MgZXh0ZXJuYWwgR1VJRCBsaXN0CiAgICAgICAgICAgICAgICAgICAgZmluZF91c
 2VyX2J5X2V4dGVybmFsX3VpZCA9IHVzZXJTZXJ2aWNlLmFkZFVzZXJBdHRyaWJ1dGUodXNlcl9uYW1lLCAib3hFeHRlcm5hbFVpZCIsIHVhZl91c2VyX2V4dGVybmFsX3VpZCkKICAgICAgICAgICAg
 ICAgICAgICBpZiBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJVQUYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQ
 gdG8gdXBkYXRlIGN1cnJlbnQgdXNlciIKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgcm
 V0dXJuIEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0U
 GFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRD
 b250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBzZWxmLnNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29
 udGV4dCkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZS
 Bmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZSA9IFNlc3Npb25TdGF0ZVNlcnZpY2UuaW5zdGFuY2UoKS5nZXRTZXNzaW9uU3RhdGVGcm9tQ29va2llKCkKICAgICAgICAgICAga
 WYgU3RyaW5nSGVscGVyLmlzRW1wdHkoc2Vzc2lvbl9zdGF0ZSk6CiAgICAgICAgICAgICAgICBwcmludCAiVUFGLiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgc2Vzc2lv
 bl9zdGF0ZSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICA
 gICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmICh1c2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIl
 VBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgdWFmX2F1dGhfbWV0aG9kI
 D0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgidWFmX2F1dGhfbWV0aG9kIikKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkodWFmX2F1dGhfbWV0aG9kKToKICAgICAgICAgICAgICAg
 IHByaW50ICJVQUYuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSBhdXRoX21ldGhvZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcHJpbnQ
 gIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiB1YWZfYXV0aF9tZXRob2Q6ICclcyciICUgdWFmX2F1dGhfbWV0aG9kCgogICAgICAgICAgICB1YWZfb2JiX2F1dGhfbWV0aG9kID0gIk9PQl9SRUciCi
 AgICAgICAgICAgIHVhZl9vYmJfc2VydmVyX3VyaSA9IHNlbGYudWFmX3NlcnZlcl91cmkgKyAiL25ubC92Mi9yZWciIAogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZ
 Sh1YWZfYXV0aF9tZXRob2QsICJhdXRoZW50aWNhdGUiKToKICAgICAgICAgICAgICAgIHVhZl9vYmJfYXV0aF9tZXRob2QgPSAiT09CX0FVVEgiCiAgICAgICAgICAgICAgICB1YWZfb2JiX3NlcnZl
 cl91cmkgPSBzZWxmLnVhZl9zZXJ2ZXJfdXJpICsgIi9ubmwvdjIvYXV0aCIgCgogICAgICAgICAgICAjIFByZXBhcmUgU1RBUlRfT0JCCiAgICAgICAgICAgIHVhZl9vYmJfc3RhcnRfcmVxdWVzdF9
 kaWN0aW9uYXJ5ID0geyAib3BlcmF0aW9uIjogIlNUQVJUXyVzIiAlIHVhZl9vYmJfYXV0aF9tZXRob2QsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidX
 Nlck5hbWUiOiB1c2VyLmdldFVzZXJJZCgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvbGljeU5hbWUiOiAiZGVmYXVsdCIsCiAgICAgICAgICAgI
 CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib29iTW9kZSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ICJxciI6ICJ0cnVl
 IiwgInJhd0RhdGEiOiAiZmFsc2UiLCAicHVzaCI6ICJmYWxzZSIgfSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB1YWZfb2JiX3N
 0YXJ0X3JlcXVlc3QgPSBqc29uLmR1bXBzKHVhZl9vYmJfc3RhcnRfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZS
 Bmb3Igc3RlcCAyLiBQcmVwYXJlZCBTVEFSVCByZXF1ZXN0OiAnJXMnIHRvIHNlbmQgdG8gJyVzJyIgJSAodWFmX29iYl9zdGFydF9yZXF1ZXN0LCB1YWZfb2JiX3NlcnZlcl91cmkpCgogICAgICAgI
 CAgICAjIFJlcXVlc3QgU1RBUlRfT0JCCiAgICAgICAgICAgIHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UgPSBzZWxmLmV4ZWN1dGVQb3N0KHVhZl9vYmJfc2VydmVyX3VyaSwgdWFmX29iYl9zdGFydF9y
 ZXF1ZXN0KQogICAgICAgICAgICBpZiB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlID09IE5vbmU6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHByaW50ICJVQUYuIFByZXB
 hcmUgZm9yIHN0ZXAgMi4gR2V0IFNUQVJUIHJlc3BvbnNlOiAnJXMnIiAlIHVhZl9vYmJfc3RhcnRfcmVzcG9uc2UKICAgICAgICAgICAgdWFmX29iYl9zdGFydF9yZXNwb25zZV9qc29uID0ganNvbi
 5sb2Fkcyh1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlKQoKICAgICAgICAgICAgIyBQcmVwYXJlIFNUQVRVU19PQkIKICAgICAgICAgICAgI1RPRE86IFJlbW92ZSBuZWVkRGV0YWlscyBwYXJhbWV0ZXIKI
 CAgICAgICAgICAgdWFmX29iYl9zdGF0dXNfcmVxdWVzdF9kaWN0aW9uYXJ5ID0geyAib3BlcmF0aW9uIjogIlNUQVRVU18lcyIgJSB1YWZfb2JiX2F1dGhfbWV0aG9kLAogICAgICAgICAgICAgICAg
 ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ1c2VyTmFtZSI6IHVzZXIuZ2V0VXNlcklkKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
 gIm5lZWREZXRhaWxzIjogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib29iU3RhdHVzSGFuZGxlIjogdWFmX29iYl9zdGFydF9yZXNwb25zZV9qc2
 9uWyJvb2JTdGF0dXNIYW5kbGUiXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgdWFmX29iYl9zdGF0dXNfcmVxdWVzdCA9IGpzb
 24uZHVtcHModWFmX29iYl9zdGF0dXNfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBQcmVw
 YXJlZCBTVEFUVVMgcmVxdWVzdDogJyVzJyB0byBzZW5kIHRvICclcyciICUgKHVhZl9vYmJfc3RhdHVzX3JlcXVlc3QsIHVhZl9vYmJfc2VydmVyX3VyaSkKCiAgICAgICAgICAgIGNvbnRleHQuc2V
 0KCJ1YWZfb2JiX2F1dGhfbWV0aG9kIiwgdWFmX29iYl9hdXRoX21ldGhvZCkKICAgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc2VydmVyX3VyaSIsIHVhZl9vYmJfc2VydmVyX3VyaSkKIC
 AgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc3RhcnRfcmVzcG9uc2UiLCB1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlKQogICAgICAgICAgICBjb250ZXh0LnNldCgicXJfaW1hZ2UiLCB1YWZfb
 2JiX3N0YXJ0X3Jlc3BvbnNlX2pzb25bIm1vZGVSZXN1bHQiXVsicXJDb2RlIl1bInFySW1hZ2UiXSkKICAgICAgICAgICAgY29udGV4dC5zZXQoInVhZl9vYmJfc3RhdHVzX3JlcXVlc3QiLCB1YWZf
 b2JiX3N0YXR1c19yZXF1ZXN0KQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9
 yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInVhZl9hdXRoX21ldGhvZCIsICJ1YWZfb2JiX2F1dGhfbWV0aG9kIi
 wgInVhZl9vYmJfc2VydmVyX3VyaSIsICJ1YWZfb2JiX3N0YXJ0X3Jlc3BvbnNlIikKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvblN0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1d
 GVzKToKICAgICAgICByZXR1cm4gMgoKICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAg
 ICAgICAgIHJldHVybiAiL2F1dGgvdWFmL2xvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGF
 yYW1ldGVycyk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgc2V0RXZlbnRDb250ZXh0UGFyYW1ldGVycyhzZWxmLCBjb250ZXh0KToKICAgICAgICBpZiBzZWxmLnJlZ2lzdHJhdGlvbl91cm
 kgIT0gTm9uZToKICAgICAgICAgICAgY29udGV4dC5zZXQoImV4dGVybmFsX3JlZ2lzdHJhdGlvbl91cmkiLCBzZWxmLnJlZ2lzdHJhdGlvbl91cmkpCiAgICAgICAgY29udGV4dC5zZXQoInFyX29wd
 GlvbnMiLCBzZWxmLmN1c3RvbVFyT3B0aW9ucykKCiAgICBkZWYgcHJvY2Vzc0Jhc2ljQXV0aGVudGljYXRpb24oc2VsZiwgY3JlZGVudGlhbHMpOgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNl
 cnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCk
 KCiAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICBpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZy
 h1c2VyX3Bhc3N3b3JkKToKICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgaWYgbm90IGxvZ2dlZ
 F9pbjoKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgZmluZF91c2VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXIodXNlcl9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91
 aWQgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gUHJvY2VzcyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICA
 gICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBmaW5kX3VzZXJfYnlfdWlkCgogICAgZGVmIGZpbmRFbnJvbGxtZW50cyhzZWxmLCBjcmVkZW50aWFscyk6CiAgICAgICAgcmVzdW
 x0ID0gW10KCiAgICAgICAgdXNlclNlcnZpY2UgPSBVc2VyU2VydmljZS5pbnN0YW5jZSgpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgIHVzZXIgP
 SB1c2VyU2VydmljZS5nZXRVc2VyKHVzZXJfbmFtZSwgIm94RXh0ZXJuYWxVaWQiKQogICAgICAgIGlmIHVzZXIgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlVBRi4gRmluZCBlbnJvbGxtZW50
 cy4gRmFpbGVkIHRvIGZpbmQgdXNlciIKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdAogICAgICAgIAogICAgICAgIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUgPSB1c2VyU2VydmljZS5nZXRDdXN
 0b21BdHRyaWJ1dGUodXNlciwgIm94RXh0ZXJuYWxVaWQiKQogICAgICAgIGlmIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUgPT0gTm9uZToKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdAogICAgIC
 AgIAogICAgICAgIHVhZl9wcmVmaXggPSAidWFmOiIKICAgICAgICB1YWZfcHJlZml4X2xlbmd0aCA9IGxlbih1YWZfcHJlZml4KSAKICAgICAgICBmb3IgdXNlcl9leHRlcm5hbF91aWQgaW4gdXNlc
 l9jdXN0b21fZXh0X2F0dHJpYnV0ZS5nZXRWYWx1ZXMoKToKICAgICAgICAgICAgaW5kZXggPSB1c2VyX2V4dGVybmFsX3VpZC5maW5kKHVhZl9wcmVmaXgpCiAgICAgICAgICAgIGlmIGluZGV4ICE9
 IC0xOgogICAgICAgICAgICAgICAgZW5yb2xsbWVudF91aWQgPSB1c2VyX2V4dGVybmFsX3VpZFt1YWZfcHJlZml4X2xlbmd0aDpdCiAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKGVucm9sbG1
 lbnRfdWlkKQogICAgICAgIAogICAgICAgIHJldHVybiByZXN1bHQKCiAgICBkZWYgZXhlY3V0ZVBvc3Qoc2VsZiwgcmVxdWVzdF91cmksIHJlcXVlc3RfZGF0YSk6CiAgICAgICAgaHR0cFNlcnZpY2
 UgPSBIdHRwU2VydmljZS5pbnN0YW5jZSgpCgogICAgICAgIHJlcXVlc3RfaGVhZGVycyA9IHsgIkNvbnRlbnQtdHlwZSIgOiAiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCIsICJBY2Nlc
 HQiIDogImFwcGxpY2F0aW9uL2pzb24iIH0KCiAgICAgICAgdHJ5OgogICAgICAgICAgICBodHRwX3NlcnZpY2VfcmVzcG9uc2UgPSBodHRwU2VydmljZS5leGVjdXRlUG9zdChzZWxmLmh0dHBfY2xp
 ZW50LCByZXF1ZXN0X3VyaSwgTm9uZSwgcmVxdWVzdF9oZWFkZXJzLCByZXF1ZXN0X2RhdGEpCiAgICAgICAgICAgIGh0dHBfcmVzcG9uc2UgPSBodHRwX3NlcnZpY2VfcmVzcG9uc2UuZ2V0SHR0cFJ
 lc3BvbnNlKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJVQUYuIFZhbGlkYXRlIFBPU1QgcmVzcG9uc2UuIEV4Y2VwdGlvbjogIiwgc3lzLmV4Y19pbmZvKClbMV0KICAgICAgIC
 AgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpZiBub3QgaHR0cFNlcnZpY2UuaXNSZXNwb25zZVN0YXN0dXNDb2RlT2soaHR0cF9yZXNwb25zZSk6CiAgICAgICAgICAgI
 CAgICBwcmludCAiVUFGLiBWYWxpZGF0ZSBQT1NUIHJlc3BvbnNlLiBHZXQgaW52YWxpZCByZXNwb25zZSBmcm9tICBzZXJ2ZXI6ICVzIiAlIHN0cihodHRwX3Jlc3BvbnNlLmdldFN0YXR1c0xpbmUo
 KS5nZXRTdGF0dXNDb2RlKCkpCiAgICAgICAgICAgICAgICBodHRwU2VydmljZS5jb25zdW1lKGh0dHBfcmVzcG9uc2UpCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQogICAgCiAgICAgICAgICA
 gIHJlc3BvbnNlX2J5dGVzID0gaHR0cFNlcnZpY2UuZ2V0UmVzcG9uc2VDb250ZW50KGh0dHBfcmVzcG9uc2UpCiAgICAgICAgICAgIHJlc3BvbnNlX3N0cmluZyA9IGh0dHBTZXJ2aWNlLmNvbnZlcn
 RFbnRpdHlUb1N0cmluZyhyZXNwb25zZV9ieXRlcykKICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQogICAgICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIHJlc
 3BvbnNlX3N0cmluZwogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZS5jbG9zZUNvbm5lY3Rpb24oKQogICAgICAgIHJldHVybiBOb25lCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.D4BF,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: HOTP/TOPT authentication module
displayName: otp
gluuStatus: false
inum: %(inumOrg)s!0011!5018.D4BF
oxConfigurationProperty: {"value1":"otp_type","value2":"totp","description":""}
oxConfigurationProperty: {"value1":"otp_conf_file","value2":"/etc/certs/otp_configuration.json","description":""}
oxConfigurationProperty: {"value1":"issuer","value2":"Gluu Inc","description":""}
oxConfigurationProperty: {"value1":"label","value2":"Gluu OTP","description":""}
oxConfigurationProperty: {"value1":"qr_options","value2":"{ size: 400, mSize: 0.05 }","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxLevel: 50
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKIyBSZXF1aXJlcyB0aGUgZm9sbG93aW5nIGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMg
 ICBvdHBfdHlwZTogdG90cC9odG9wCiMgICBpc3N1ZXI6IEdsdXUgSW5jCiMgICBvdHBfY29uZl9maWxlOiAvZXRjL2NlcnRzL290cF9jb25maWd1cmF0aW9uLmpzb24KIwojIFRoZXNlIGFyZSBub24
 gbWFuZGF0b3J5IGN1c3RvbSBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXM6CiMgICBsYWJlbDogR2x1dSBPVFAKIyAgIHFyX29wdGlvbnM6IHsgd2lkdGg6IDQwMCwgaGVpZ2h0OiA0MDAgfQojICAgcmVnaX
 N0cmF0aW9uX3VyaTogaHR0cHM6Ly9jZS1kZXYuZ2x1dS5vcmcvaWRlbnRpdHkvcmVnaXN0ZXIKCmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQ
 XV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLmpib3NzLnNlYW0uZmFjZXMgaW1wb3J0IEZhY2VzTWVzc2FnZXMKZnJvbSBqYXZheC5mYWNlcy5jb250ZXh0IGltcG9ydCBGYWNlc0NvbnRleHQKZnJv
 bSBvcmcuamJvc3Muc2VhbS5pbnRlcm5hdGlvbmFsIGltcG9ydCBTdGF0dXNNZXNzYWdlCmZyb20gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3J
 nLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlclNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgU2Vzc2
 lvblN0YXRlU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgpmcm9tIG9yZy54ZGkub3hhdXRoLnV0a
 WwgaW1wb3J0IFNlcnZlclV0aWwKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cwoKZnJvbSBqYXZhLnNlY3VyaXR5IGltcG9ydCBTZWN1cmVSYW5kb20KZnJvbSBqYXZhLnV0aWwuY29uY3VycmVu
 dCBpbXBvcnQgVGltZVVuaXQKCmZyb20gY29tLmdvb2dsZS5jb21tb24uaW8gaW1wb3J0IEJhc2VFbmNvZGluZwoKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cCBpbXBvcnQgVE9UUApmcm9tIGN
 vbS5sb2NoYnJpZGdlLm9hdGgub3RwIGltcG9ydCBIT1RQCmZyb20gY29tLmxvY2hicmlkZ2Uub2F0aC5vdHAgaW1wb3J0IEhPVFBWYWxpZGF0aW9uUmVzdWx0CmZyb20gY29tLmxvY2hicmlkZ2Uub2
 F0aC5vdHAgaW1wb3J0IEhPVFBWYWxpZGF0b3IKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cCBpbXBvcnQgSG1hY1NoYUFsZ29yaXRobQoKZnJvbSBjb20ubG9jaGJyaWRnZS5vYXRoLm90cC5rZ
 Xlwcm92aXNpb25pbmcgaW1wb3J0IE9UUEF1dGhVUklCdWlsZGVyOwpmcm9tIGNvbS5sb2NoYnJpZGdlLm9hdGgub3RwLmtleXByb3Zpc2lvbmluZyBpbXBvcnQgT1RQS2V5Owpmcm9tIGNvbS5sb2No
 YnJpZGdlLm9hdGgub3RwLmtleXByb3Zpc2lvbmluZy5PVFBLZXkgaW1wb3J0IE9UUFR5cGU7CgppbXBvcnQgc3lzCmltcG9ydCBqYXZhCmltcG9ydCBqYXJyYXkKCnRyeToKICAgIGltcG9ydCBqc29
 uCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KCmNsYXNzIFBlcnNvbkF1dGhlbnRpY2F0aW9uKFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZSk6CiAgICBkZW
 YgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ
 3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbiIKCiAgICAgICAgaWYgbm90IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJvdHBf
 dHlwZSIpOgogICAgICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgb3RwX3R5cGUgaXMgbWFuZGF0b3J5IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICB
 zZWxmLm90cFR5cGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoIm90cF90eXBlIikuZ2V0VmFsdWUyKCkKCiAgICAgICAgaWYgbm90IHNlbGYub3RwVHlwZSBpbiBbImhvdHAiLCAidG90cC
 JdOgogICAgICAgICAgICBwcmludCAiT1RQLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgdmFsdWUgb3RwX3R5cGUgaXMgaW52YWxpZCIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgI
 GlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiaXNzdWVyIik6CiAgICAgICAgICAgIHByaW50ICJPVFAuIEluaXRpYWxpemF0aW9uLiBQcm9wZXJ0eSBpc3N1ZXIgaXMg
 bWFuZGF0b3J5IgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBzZWxmLm90cElzc3VlciA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiaXNzdWVyIikuZ2V0VmFsdWUyKCkKCiA
 gICAgICAgc2VsZi5jdXN0b21MYWJlbCA9IE5vbmUKICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgibGFiZWwiKToKICAgICAgICAgICAgc2VsZi5jdXN0b21MYW
 JlbCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgibGFiZWwiKS5nZXRWYWx1ZTIoKQoKICAgICAgICBzZWxmLmN1c3RvbVFyT3B0aW9ucyA9IHt9CiAgICAgICAgaWYgY29uZmlndXJhdGlvb
 kF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInFyX29wdGlvbnMiKToKICAgICAgICAgICAgc2VsZi5jdXN0b21Rck9wdGlvbnMgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInFyX29wdGlvbnMi
 KS5nZXRWYWx1ZTIoKQoKICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvblVyaSA9IE5vbmUKICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgicmVnaXN0cmF0aW9uX3V
 yaSIpOgogICAgICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvblVyaSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgicmVnaXN0cmF0aW9uX3VyaSIpLmdldFZhbHVlMigpCgogICAgICAgIHZhbG
 lkT3RwQ29uZmlndXJhdGlvbiA9IHNlbGYubG9hZE90cENvbmZpZ3VyYXRpb24oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpCiAgICAgICAgaWYgbm90IHZhbGlkT3RwQ29uZmlndXJhdGlvbjoKICAgI
 CAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgCiAgICAgICAgcHJpbnQgIk9UUC4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGRlc3Ryb3ko
 c2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJPVFAuIERlc3Ryb3kiCiAgICAgICAgcHJpbnQgIk9UUC4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICB
 yZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIG
 NvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlnd
 XJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0
 ZXApOgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICA
 gICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgIC
 BzZWxmLnNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkKCiAgICAgICAgaWYgc3RlcCA9PSAxOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKI
 CAgICAgICAgICAgCiAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWRfdXNlciA9IHNlbGYucHJvY2Vzc0Jhc2ljQXV0aGVudGljYXRpb24oY3JlZGVudGlhbHMpCiAgICAgICAgICAgIGlmIGF1dGhlbnRp
 Y2F0ZWRfdXNlciA9PSBOb25lOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBvdHBfYXV0aF9tZXRob2QgPSAiYXV0aGVudGljYXRlIgogICAgICAgICAgICAjIFVuY29
 tbWVudCB0aGlzIGJsb2NrIGlmIHlvdSBuZWVkIHRvIGFsbG93IHVzZXIgc2Vjb25kIE9UUCByZWdpc3RyYXRpb24KICAgICAgICAgICAgI2Vucm9sbG1lbnRfbW9kZSA9IFNlcnZlclV0aWwuZ2V0Rm
 lyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgImxvZ2luRm9ybTpyZWdpc3RlckJ1dHRvbiIpCiAgICAgICAgICAgICNpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShlbnJvbGxtZW50X21vZGUpO
 gogICAgICAgICAgICAjICAgIG90cF9hdXRoX21ldGhvZCA9ICJlbnJvbGwiCiAgICAgICAgICAgIAogICAgICAgICAgICBpZiBvdHBfYXV0aF9tZXRob2QgPT0gImF1dGhlbnRpY2F0ZSI6CiAgICAg
 ICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRzID0gc2VsZi5maW5kRW5yb2xsbWVudHModXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgbGVuKHVzZXJfZW5yb2xsbWVudHMpID09IDA6CiAgICA
 gICAgICAgICAgICAgICAgb3RwX2F1dGhfbWV0aG9kID0gImVucm9sbCIKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVGhlcmUgaXMgbm8gT1
 RQIGVucm9sbG1lbnQgZm9yIHVzZXIgJyVzJy4gQ2hhbmdpbmcgb3RwX2F1dGhfbWV0aG9kIHRvICclcyciICUgKHVzZXJfbmFtZSwgb3RwX2F1dGhfbWV0aG9kKQogICAgICAgICAgICAgICAgICAgI
 AogICAgICAgICAgICBpZiBvdHBfYXV0aF9tZXRob2QgPT0gImVucm9sbCI6CiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBz
 dGVwczogJyVzJyIgJSAzCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgib3RwX2NvdW50X2xvZ2luX3N0ZXBzIiwgMykKCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3I
 gc3RlcCAxLiBvdHBfYXV0aF9tZXRob2Q6ICclcyciICUgb3RwX2F1dGhfbWV0aG9kCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJvdHBfYXV0aF9tZXRob2QiLCBvdHBfYXV0aF9tZXRob2QpCgogIC
 AgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMiIKCiAgICAgICAgICAgIHNlc3Npb
 25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF0ZV92YWxpZGF0aW9uOgog
 ICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIFJlc3RvcmUgc3RhdGUgZnJvbSBzZXNzaW9uCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZCA9IHNlc3Npb25fYXR0cml
 idXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIGF1dGhfcmVzdWx0ID0gU2VydmVyVXRpbC
 5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAiYXV0aF9yZXN1bHQiKQogICAgICAgICAgICAgICAgaWYgbm90IFN0cmluZ0hlbHBlci5pc0VtcHR5KGF1dGhfcmVzdWx0KToKICAgICAgI
 CAgICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gVXNlciBub3QgZW5yb2xsZWQgT1RQIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAg
 ICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBTa2lwcGluZyB0aGlzIHN0ZXAgZHVyaW5nIGVucm9sbG1lbnQiCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQo
 KICAgICAgICAgICAgb3RwX2F1dGhfcmVzdWx0ID0gc2VsZi5wcm9jZXNzT3RwQXV0aGVudGljYXRpb24ocmVxdWVzdFBhcmFtZXRlcnMsIHVzZXJfbmFtZSwgc2Vzc2lvbl9hdHRyaWJ1dGVzLCBvdH
 BfYXV0aF9tZXRob2QpCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBPVFAgYXV0aGVudGljYXRpb24gcmVzdWx0OiAnJXMnIiAlIG90cF9hdXRoX3Jlc3Vsd
 AoKICAgICAgICAgICAgcmV0dXJuIG90cF9hdXRoX3Jlc3VsdAogICAgICAgIGVsaWYgc3RlcCA9PSAzOgogICAgICAgICAgICBwcmludCAiT1RQLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMyIKCiAg
 ICAgICAgICAgIHNlc3Npb25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2Vzc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF
 0ZV92YWxpZGF0aW9uOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIFJlc3RvcmUgc3RhdGUgZnJvbSBzZXNzaW9uCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZC
 A9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCAhPSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIHJldHVybiBGY
 WxzZQoKICAgICAgICAgICAgb3RwX2F1dGhfcmVzdWx0ID0gc2VsZi5wcm9jZXNzT3RwQXV0aGVudGljYXRpb24ocmVxdWVzdFBhcmFtZXRlcnMsIHVzZXJfbmFtZSwgc2Vzc2lvbl9hdHRyaWJ1dGVz
 LCBvdHBfYXV0aF9tZXRob2QpCiAgICAgICAgICAgIHByaW50ICJPVFAuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAzLiBPVFAgYXV0aGVudGljYXRpb24gcmVzdWx0OiAnJXMnIiAlIG90cF9hdXRoX3J
 lc3VsdAoKICAgICAgICAgICAgcmV0dXJuIG90cF9hdXRoX3Jlc3VsdAogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb2
 5maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgI
 CAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikKCiAgICAgICAgc2Vs
 Zi5zZXRFdmVudENvbnRleHRQYXJhbWV0ZXJzKGNvbnRleHQpCgogICAgICAgIGlmIHN0ZXAgPT0gMToKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJlcGFyZSBmb3Igc3RlcCAxIgoKICAgICAgICA
 gICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJlcGFyZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbl9zdGF0ZV92YW
 xpZGF0aW9uID0gc2VsZi52YWxpZGF0ZVNlc3Npb25TdGF0ZShzZXNzaW9uX2F0dHJpYnV0ZXMpCiAgICAgICAgICAgIGlmIG5vdCBzZXNzaW9uX3N0YXRlX3ZhbGlkYXRpb246CiAgICAgICAgICAgI
 CAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIG90cF9hdXRoX21ldGhvZCA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm90cF9hdXRoX21ldGhvZCIpCiAgICAgICAgICAgIHByaW50ICJPVFAu
 IFByZXBhcmUgZm9yIHN0ZXAgMi4gb3RwX2F1dGhfbWV0aG9kOiAnJXMnIiAlIG90cF9hdXRoX21ldGhvZAoKICAgICAgICAgICAgaWYgb3RwX2F1dGhfbWV0aG9kID09ICdlbnJvbGwnOgogICAgICA
 gICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgIHVzZXIgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuZ2
 V0QXV0aGVudGljYXRlZFVzZXIoKQogICAgICAgICAgICAgICAgaWYgdXNlciA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkI
 HRvIGxvYWQgdXNlciBlbnR5IgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIGlmIHNlbGYub3RwVHlwZSA9PSAiaG90cCI6CiAgICAgICAgICAgICAgICAg
 ICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmdlbmVyYXRlU2VjcmV0SG90cEtleSgpCiAgICAgICAgICAgICAgICAgICAgb3RwX2Vucm9sbG1lbnRfcmVxdWVzdCA9IHNlbGYuZ2VuZXJhdGVIb3RwU2V
 jcmV0S2V5VXJpKG90cF9zZWNyZXRfa2V5LCBzZWxmLm90cElzc3VlciwgdXNlci5nZXRBdHRyaWJ1dGUoImRpc3BsYXlOYW1lIikpCiAgICAgICAgICAgICAgICBlbGlmIHNlbGYub3RwVHlwZSA9PS
 AidG90cCI6CiAgICAgICAgICAgICAgICAgICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmdlbmVyYXRlU2VjcmV0VG90cEtleSgpCiAgICAgICAgICAgICAgICAgICAgb3RwX2Vucm9sbG1lbnRfcmVxd
 WVzdCA9IHNlbGYuZ2VuZXJhdGVUb3RwU2VjcmV0S2V5VXJpKG90cF9zZWNyZXRfa2V5LCBzZWxmLm90cElzc3VlciwgdXNlci5nZXRBdHRyaWJ1dGUoImRpc3BsYXlOYW1lIikpCiAgICAgICAgICAg
 ICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMi4gVW5rbm93biBPVFAgdHlwZTogJyVzJyIgJSBzZWxmLm90cFR5cGUKICAgICAgICAgICA
 gICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcmVwYXJlIGZvciBzdGVwIDIuIFByZXBhcmVkIGVucm9sbG1lbnQgcmVxdWVzdCBmb3IgdXNlcjogJyVzJy
 IgJSB1c2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgib3RwX3NlY3JldF9rZXkiLCBzZWxmLnRvQmFzZTY0VXJsKG90cF9zZWNyZXRfa2V5KSkKICAgICAgICAgICAgI
 CAgIGNvbnRleHQuc2V0KCJvdHBfZW5yb2xsbWVudF9yZXF1ZXN0Iiwgb3RwX2Vucm9sbG1lbnRfcmVxdWVzdCkKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiBzdGVwID09IDM6
 CiAgICAgICAgICAgIHByaW50ICJPVFAuIFByZXBhcmUgZm9yIHN0ZXAgMyIKCiAgICAgICAgICAgIHNlc3Npb25fc3RhdGVfdmFsaWRhdGlvbiA9IHNlbGYudmFsaWRhdGVTZXNzaW9uU3RhdGUoc2V
 zc2lvbl9hdHRyaWJ1dGVzKQogICAgICAgICAgICBpZiBub3Qgc2Vzc2lvbl9zdGF0ZV92YWxpZGF0aW9uOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBvdHBfYXV0aF
 9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRob2QiKQogICAgICAgICAgICBwcmludCAiT1RQLiBQcmVwYXJlIGZvciBzdGVwIDMuIG90cF9hdXRoX21ldGhvZDogJ
 yVzJyIgJSBvdHBfYXV0aF9tZXRob2QKCiAgICAgICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAnZW5yb2xsJzoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgIHJldHVybiBG
 YWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1cm4gQXJyYXlzLmFzTGlzdCgib3RwX2F
 1dGhfbWV0aG9kIiwgIm90cF9jb3VudF9sb2dpbl9zdGVwcyIsICJvdHBfc2VjcmV0X2tleSIsICJvdHBfZW5yb2xsbWVudF9yZXF1ZXN0IikKCiAgICBkZWYgZ2V0Q291bnRBdXRoZW50aWNhdGlvbl
 N0ZXBzKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICBzZXNzaW9uX2F0dHJpYnV0ZXMgPSBjb
 250ZXh0LmdldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQoKICAgICAgICBpZiBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoIm90cF9jb3VudF9sb2dpbl9zdGVwcyIpOgogICAgICAgICAgICBy
 ZXR1cm4gU3RyaW5nSGVscGVyLnRvSW50ZWdlcihzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfY291bnRfbG9naW5fc3RlcHMiKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gMgo
 KICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgc3RlcCA9PSAyOgogICAgICAgICAgICBjb250ZXh0ID0gQ29udGV4dH
 MuZ2V0RXZlbnRDb250ZXh0KCkKICAgICAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikKICAgIAogICAgICAgICAgICBvdHBfYXV0aF9tZ
 XRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRob2QiKQogICAgICAgICAgICBwcmludCAiT1RQLiBHZXAgcGFnZSBmb3Igc3RlcCAyLiBvdHBfYXV0aF9tZXRob2Q6ICcl
 cyciICUgb3RwX2F1dGhfbWV0aG9kCiAgICAKICAgICAgICAgICAgaWYgb3RwX2F1dGhfbWV0aG9kID09ICdlbnJvbGwnOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9vdHAvZW5yb2xsLnh
 odG1sIgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuICIvYXV0aC9vdHAvb3RwbG9naW4ueGh0bWwiCiAgICAgICAgZWxpZiBzdGVwID09IDM6CiAgICAgICAgICAgIHJldH
 VybiAiL2F1dGgvb3RwL290cGxvZ2luLnhodG1sIgoKICAgICAgICByZXR1cm4gIiIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVyc
 yk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgc2V0RXZlbnRDb250ZXh0UGFyYW1ldGVycyhzZWxmLCBjb250ZXh0KToKICAgICAgICBpZiBzZWxmLnJlZ2lzdHJhdGlvblVyaSAhPSBOb25l
 OgogICAgICAgICAgICBjb250ZXh0LnNldCgiZXh0ZXJuYWxfcmVnaXN0cmF0aW9uX3VyaSIsIHNlbGYucmVnaXN0cmF0aW9uVXJpKQoKICAgICAgICBpZiBzZWxmLmN1c3RvbUxhYmVsICE9IE5vbmU
 6CiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJxcl9sYWJlbCIsIHNlbGYuY3VzdG9tTGFiZWwpCgogICAgICAgIGNvbnRleHQuc2V0KCJxcl9vcHRpb25zIiwgc2VsZi5jdXN0b21Rck9wdGlvbnMpCg
 ogICAgZGVmIGxvYWRPdHBDb25maWd1cmF0aW9uKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiT1RQLiBMb2FkIE9UUCBjb25maWd1cmF0aW9uIgogICAgICAgI
 GlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgib3RwX2NvbmZfZmlsZSIpOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgb3RwX2NvbmZfZmlsZSA9IGNv
 bmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgib3RwX2NvbmZfZmlsZSIpLmdldFZhbHVlMigpCgogICAgICAgICMgTG9hZCBjb25maWd1cmF0aW9uIGZyb20gZmlsZQogICAgICAgIGYgPSBvcGVuKG9
 0cF9jb25mX2ZpbGUsICdyJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIG90cENvbmZpZ3VyYXRpb24gPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcH
 JpbnQgIk9UUC4gTG9hZCBPVFAgY29uZmlndXJhdGlvbi4gRmFpbGVkIHRvIGxvYWQgY29uZmlndXJhdGlvbiBmcm9tIGZpbGU6Iiwgb3RwX2NvbmZfZmlsZQogICAgICAgICAgICByZXR1cm4gRmFsc
 2UKICAgICAgICBmaW5hbGx5OgogICAgICAgICAgICBmLmNsb3NlKCkKICAgICAgICAKICAgICAgICAjIENoZWNrIGNvbmZpZ3VyYXRpb24gZmlsZSBzZXR0aW5ncwogICAgICAgIHRyeToKICAgICAg
 ICAgICAgc2VsZi5ob3RwQ29uZmlndXJhdGlvbiA9IG90cENvbmZpZ3VyYXRpb25bImh0b3AiXQogICAgICAgICAgICBzZWxmLnRvdHBDb25maWd1cmF0aW9uID0gb3RwQ29uZmlndXJhdGlvblsidG9
 0cCJdCiAgICAgICAgICAgIAogICAgICAgICAgICBobWFjU2hhQWxnb3JpdGhtID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsiaG1hY1NoYUFsZ29yaXRobSJdCiAgICAgICAgICAgIGhtYWNTaGFBbG
 dvcml0aG1UeXBlID0gTm9uZQoKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoaG1hY1NoYUFsZ29yaXRobSwgInNoYTEiKToKICAgICAgICAgICAgICAgIGhtYWNTa
 GFBbGdvcml0aG1UeXBlID0gSG1hY1NoYUFsZ29yaXRobS5ITUFDX1NIQV8xCiAgICAgICAgICAgIGVsaWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UoaG1hY1NoYUFsZ29yaXRobSwgInNo
 YTI1NiIpOgogICAgICAgICAgICAgICAgaG1hY1NoYUFsZ29yaXRobVR5cGUgPSBIbWFjU2hhQWxnb3JpdGhtLkhNQUNfU0hBXzI1NgogICAgICAgICAgICBlbGlmIFN0cmluZ0hlbHBlci5lcXVhbHN
 JZ25vcmVDYXNlKGhtYWNTaGFBbGdvcml0aG0sICJzaGE1MTIiKToKICAgICAgICAgICAgICAgIGhtYWNTaGFBbGdvcml0aG1UeXBlID0gSG1hY1NoYUFsZ29yaXRobS5ITUFDX1NIQV81MTIKICAgIC
 AgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIExvYWQgT1RQIGNvbmZpZ3VyYXRpb24uIEludmFsaWQgVE9UUCBITUFDIFNIQSBhbGdvcml0aG06ICclcyciICUgaG1hY1NoY
 UFsZ29yaXRobQogICAgICAgICAgICAgICAgIAogICAgICAgICAgICBzZWxmLnRvdHBDb25maWd1cmF0aW9uWyJobWFjU2hhQWxnb3JpdGhtVHlwZSJdID0gaG1hY1NoYUFsZ29yaXRobVR5cGUKICAg
 ICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50ICJPVFAuIExvYWQgT1RQIGNvbmZpZ3VyYXRpb24uIEludmFsaWQgY29uZmlndXJhdGlvbiBmaWxlICclcycgZm9ybWF0LiBFeGNlcHRpb246ICc
 lcyciICUgKG90cF9jb25mX2ZpbGUsIHN5cy5leGNfaW5mbygpWzFdKQogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAKCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgcHJvY2Vzc0
 Jhc2ljQXV0aGVudGljYXRpb24oc2VsZiwgY3JlZGVudGlhbHMpOgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50a
 WFscy5nZXRVc2VybmFtZSgpCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICBpZiBTdHJpbmdI
 ZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKToKICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclN
 lcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgaWYgbm90IGxvZ2dlZF9pbjoKICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgZmluZF91c2
 VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXIodXNlcl9uYW1lKQogICAgICAgIGlmIGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBiY
 XNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBmaW5kX3Vz
 ZXJfYnlfdWlkCgogICAgZGVmIGZpbmRFbnJvbGxtZW50cyhzZWxmLCB1c2VyX25hbWUsIHNraXBQcmVmaXggPSBUcnVlKToKICAgICAgICByZXN1bHQgPSBbXQoKICAgICAgICB1c2VyU2VydmljZSA
 9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICB1c2VyID0gdXNlclNlcnZpY2UuZ2V0VXNlcih1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIikKICAgICAgICBpZiB1c2VyID09IE5vbmU6Ci
 AgICAgICAgICAgIHByaW50ICJPVFAuIEZpbmQgZW5yb2xsbWVudHMuIEZhaWxlZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgIHJldHVybiByZXN1bHQKICAgICAgICAKICAgICAgICB1c2VyX2N1c
 3RvbV9leHRfYXR0cmlidXRlID0gdXNlclNlcnZpY2UuZ2V0Q3VzdG9tQXR0cmlidXRlKHVzZXIsICJveEV4dGVybmFsVWlkIikKICAgICAgICBpZiB1c2VyX2N1c3RvbV9leHRfYXR0cmlidXRlID09
 IE5vbmU6CiAgICAgICAgICAgIHJldHVybiByZXN1bHQKCiAgICAgICAgb3RwX3ByZWZpeCA9ICIlczoiICUgc2VsZi5vdHBUeXBlCiAgICAgICAgCiAgICAgICAgb3RwX3ByZWZpeF9sZW5ndGggPSB
 sZW4ob3RwX3ByZWZpeCkgCiAgICAgICAgZm9yIHVzZXJfZXh0ZXJuYWxfdWlkIGluIHVzZXJfY3VzdG9tX2V4dF9hdHRyaWJ1dGUuZ2V0VmFsdWVzKCk6CiAgICAgICAgICAgIGluZGV4ID0gdXNlcl
 9leHRlcm5hbF91aWQuZmluZChvdHBfcHJlZml4KQogICAgICAgICAgICBpZiBpbmRleCAhPSAtMToKICAgICAgICAgICAgICAgIGlmIHNraXBQcmVmaXg6CiAgICAgICAgICAgICAgICAgICAgZW5yb
 2xsbWVudF91aWQgPSB1c2VyX2V4dGVybmFsX3VpZFtvdHBfcHJlZml4X2xlbmd0aDpdCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGVucm9sbG1lbnRfdWlkID0gdXNl
 cl9leHRlcm5hbF91aWQKCiAgICAgICAgICAgICAgICByZXN1bHQuYXBwZW5kKGVucm9sbG1lbnRfdWlkKQogICAgICAgIAogICAgICAgIHJldHVybiByZXN1bHQKCiAgICBkZWYgdmFsaWRhdGVTZXN
 zaW9uU3RhdGUoc2VsZiwgc2Vzc2lvbl9hdHRyaWJ1dGVzKToKICAgICAgICBzZXNzaW9uX3N0YXRlID0gU2Vzc2lvblN0YXRlU2VydmljZS5pbnN0YW5jZSgpLmdldFNlc3Npb25TdGF0ZUZyb21Db2
 9raWUoKQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KHNlc3Npb25fc3RhdGUpOgogICAgICAgICAgICBwcmludCAiT1RQLiBWYWxpZGF0ZSBzZXNzaW9uIHN0YXRlLiBGYWlsZWQgdG8gZ
 GV0ZXJtaW5lIHNlc3Npb25fc3RhdGUiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBvdHBfYXV0aF9tZXRob2QgPSBzZXNzaW9uX2F0dHJpYnV0ZXMuZ2V0KCJvdHBfYXV0aF9tZXRo
 b2QiKQogICAgICAgIGlmIG5vdCBvdHBfYXV0aF9tZXRob2QgaW4gWydlbnJvbGwnLCAnYXV0aGVudGljYXRlJ106CiAgICAgICAgICAgIHByaW50ICJPVFAuIFZhbGlkYXRlIHNlc3Npb24gc3RhdGU
 uIEZhaWxlZCB0byBhdXRoZW50aWNhdGUgdXNlci4gb3RwX2F1dGhfbWV0aG9kOiAnJXMnIiAlIG90cF9hdXRoX21ldGhvZAogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgcmV0dXJuIF
 RydWUKCiAgICBkZWYgcHJvY2Vzc090cEF1dGhlbnRpY2F0aW9uKHNlbGYsIHJlcXVlc3RQYXJhbWV0ZXJzLCB1c2VyX25hbWUsIHNlc3Npb25fYXR0cmlidXRlcywgb3RwX2F1dGhfbWV0aG9kKToKI
 CAgICAgICBmYWNlc01lc3NhZ2VzID0gRmFjZXNNZXNzYWdlcy5pbnN0YW5jZSgpCiAgICAgICAgRmFjZXNDb250ZXh0LmdldEN1cnJlbnRJbnN0YW5jZSgpLmdldEV4dGVybmFsQ29udGV4dCgpLmdl
 dEZsYXNoKCkuc2V0S2VlcE1lc3NhZ2VzKFRydWUpCgogICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQoKICAgICAgICBvdHBDb2RlID0gU2VydmVyVXRpbC5nZXRGaXJ
 zdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAibG9naW5Gb3JtOm90cENvZGUiKQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KG90cENvZGUpOgogICAgICAgICAgICBmYWNlc01lc3NhZ2
 VzLmFkZChTdGF0dXNNZXNzYWdlLlNldmVyaXR5LkVSUk9SLCAiRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZS4gT1RQIGNvZGUgaXMgZW1wdHkiKQogICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzI
 E9UUCBhdXRoZW50aWNhdGlvbi4gb3RwQ29kZSBpcyBlbXB0eSIKCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIAogICAgICAgIGlmIG90cF9hdXRoX21ldGhvZCA9PSAiZW5yb2xsIjoK
 ICAgICAgICAgICAgIyBHZXQga2V5IGZyb20gc2Vzc2lvbgogICAgICAgICAgICBvdHBfc2VjcmV0X2tleV9lbmNvZGVkID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgib3RwX3NlY3JldF9rZXkiKQo
 gICAgICAgICAgICBpZiBvdHBfc2VjcmV0X2tleV9lbmNvZGVkID09IE5vbmU6CiAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIE9UUCBhdXRoZW50aWNhdGlvbi4gT1RQIHNlY3JldC
 BrZXkgaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgb3RwX3NlY3JldF9rZXkgPSBzZWxmLmZyb21CYXNlNjRVcmwob3RwX3NlY
 3JldF9rZXlfZW5jb2RlZCkKCiAgICAgICAgICAgIGlmIHNlbGYub3RwVHlwZSA9PSAiaG90cCI6CiAgICAgICAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3VsdCA9IHNlbGYudmFsaWRhdGVIb3RwS2V5
 KG90cF9zZWNyZXRfa2V5LCAxLCBvdHBDb2RlKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGlvbl9yZXN1bHQgIT0gTm9uZSkgYW5kIHZhbGlkYXRpb25fcmVzdWx
 0WyJyZXN1bHQiXToKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV0aGVudGljYXRpb24gZHVyaW5nIGVucm9sbG1lbnQuIG90cENvZGUgaXMgdmFsaWQiCiAgIC
 AgICAgICAgICAgICAgICAgIyBTdG9yZSBIT1RQIFNlY3JldCBLZXkgYW5kIG1vdmluZyBmYWN0b3IgaW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgIG90cF91c2VyX2V4dGVybmFsX3VpZ
 CA9ICJob3RwOiVzOyVzIiAlICggb3RwX3NlY3JldF9rZXlfZW5jb2RlZCwgdmFsaWRhdGlvbl9yZXN1bHRbIm1vdmluZ0ZhY3RvciJdICkKCiAgICAgICAgICAgICAgICAgICAgIyBBZGQgb3RwX3Vz
 ZXJfZXh0ZXJuYWxfdWlkIHRvIHVzZXIncyBleHRlcm5hbCBHVUlEIGxpc3QKICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF
 0dHJpYnV0ZSh1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIiwgb3RwX3VzZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgICAgIGlmIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgIT0gTm
 9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBIT1RQIGF1dGhlbnRpY2F0aW9uIGR1cmluZyBlbnJvb
 GxtZW50LiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgICAgICAgIGVsaWYgc2VsZi5vdHBUeXBlID09ICJ0b3RwIjoKICAgICAgICAgICAgICAgIHZhbGlkYXRpb25fcmVzdWx0ID0g
 c2VsZi52YWxpZGF0ZVRvdHBLZXkob3RwX3NlY3JldF9rZXksIG90cENvZGUpCiAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGlvbl9yZXN1bHQgIT0gTm9uZSkgYW5kIHZhbGlkYXRpb25fcmVzdWx
 0WyJyZXN1bHQiXToKICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIFRPVFAgYXV0aGVudGljYXRpb24gZHVyaW5nIGVucm9sbG1lbnQuIG90cENvZGUgaXMgdmFsaWQiCiAgIC
 AgICAgICAgICAgICAgICAgIyBTdG9yZSBUT1RQIFNlY3JldCBLZXkgYW5kIG1vdmluZyBmYWN0b3IgaW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgIG90cF91c2VyX2V4dGVybmFsX3VpZ
 CA9ICJ0b3RwOiVzIiAlIG90cF9zZWNyZXRfa2V5X2VuY29kZWQKCiAgICAgICAgICAgICAgICAgICAgIyBBZGQgb3RwX3VzZXJfZXh0ZXJuYWxfdWlkIHRvIHVzZXIncyBleHRlcm5hbCBHVUlEIGxp
 c3QKICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UuYWRkVXNlckF0dHJpYnV0ZSh1c2VyX25hbWUsICJveEV4dGVybmFsVWlkIiwgb3RwX3V
 zZXJfZXh0ZXJuYWxfdWlkKQogICAgICAgICAgICAgICAgICAgIGlmIGZpbmRfdXNlcl9ieV9leHRlcm5hbF91aWQgIT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCi
 AgICAgICAgICAgICAgICAgICAgcHJpbnQgIk9UUC4gUHJvY2VzcyBUT1RQIGF1dGhlbnRpY2F0aW9uIGR1cmluZyBlbnJvbGxtZW50LiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgI
 CAgZWxpZiBvdHBfYXV0aF9tZXRob2QgPT0gImF1dGhlbnRpY2F0ZSI6CiAgICAgICAgICAgIHVzZXJfZW5yb2xsbWVudHMgPSBzZWxmLmZpbmRFbnJvbGxtZW50cyh1c2VyX25hbWUpCgogICAgICAg
 ICAgICBpZiBsZW4odXNlcl9lbnJvbGxtZW50cykgPT0gMDoKICAgICAgICAgICAgICAgIHByaW50ICJPVFAuIFByb2Nlc3MgT1RQIGF1dGhlbnRpY2F0aW9uLiBUaGVyZSBpcyBubyBPVFAgZW5yb2x
 sbWVudCBmb3IgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQogICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdlcy5hZGQoU3RhdHVzTWVzc2FnZS5TZXZlcml0eS5FUlJPUiwgIlRoZXJlIGlzIG5vIHZhbG
 lkIE9UUCB1c2VyIGVucm9sbG1lbnRzIikKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgc2VsZi5vdHBUeXBlID09ICJob3RwIjoKICAgICAgICAgICAgICAgIGZvc
 iB1c2VyX2Vucm9sbG1lbnQgaW4gdXNlcl9lbnJvbGxtZW50czoKICAgICAgICAgICAgICAgICAgICB1c2VyX2Vucm9sbG1lbnRfZGF0YSA9IHVzZXJfZW5yb2xsbWVudC5zcGxpdCgiOyIpCiAgICAg
 ICAgICAgICAgICAgICAgb3RwX3NlY3JldF9rZXlfZW5jb2RlZCA9IHVzZXJfZW5yb2xsbWVudF9kYXRhWzBdCgogICAgICAgICAgICAgICAgICAgICMgR2V0IGN1cnJlbnQgbW92aW5nIGZhY3RvciB
 mcm9tIHVzZXIgZW50cnkKICAgICAgICAgICAgICAgICAgICBtb3ZpbmdfZmFjdG9yID0gU3RyaW5nSGVscGVyLnRvSW50ZWdlcih1c2VyX2Vucm9sbG1lbnRfZGF0YVsxXSkKICAgICAgICAgICAgIC
 AgICAgICBvdHBfc2VjcmV0X2tleSA9IHNlbGYuZnJvbUJhc2U2NFVybChvdHBfc2VjcmV0X2tleV9lbmNvZGVkKQoKICAgICAgICAgICAgICAgICAgICAjIFZhbGlkYXRlIFRPVFAKICAgICAgICAgI
 CAgICAgICAgICB2YWxpZGF0aW9uX3Jlc3VsdCA9IHNlbGYudmFsaWRhdGVIb3RwS2V5KG90cF9zZWNyZXRfa2V5LCBtb3ZpbmdfZmFjdG9yLCBvdHBDb2RlKQogICAgICAgICAgICAgICAgICAgIGlm
 ICh2YWxpZGF0aW9uX3Jlc3VsdCAhPSBOb25lKSBhbmQgdmFsaWRhdGlvbl9yZXN1bHRbInJlc3VsdCJdOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV
 0aGVudGljYXRpb24gZHVyaW5nIGF1dGhlbnRpY2F0aW9uLiBvdHBDb2RlIGlzIHZhbGlkIgogICAgICAgICAgICAgICAgICAgICAgICBvdHBfdXNlcl9leHRlcm5hbF91aWQgPSAiaG90cDolczslcy
 IgJSAoIG90cF9zZWNyZXRfa2V5X2VuY29kZWQsIG1vdmluZ19mYWN0b3IgKQogICAgICAgICAgICAgICAgICAgICAgICBuZXdfb3RwX3VzZXJfZXh0ZXJuYWxfdWlkID0gImhvdHA6JXM7JXMiICUgK
 CBvdHBfc2VjcmV0X2tleV9lbmNvZGVkLCB2YWxpZGF0aW9uX3Jlc3VsdFsibW92aW5nRmFjdG9yIl0gKQogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICMgVXBkYXRlIG1vdmluZyBmYWN0b3Ig
 aW4gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfZXh0ZXJuYWxfdWlkID0gdXNlclNlcnZpY2UucmVwbGFjZVVzZXJBdHRyaWJ1dGUodXNlcl9uYW1lLCAib3h
 FeHRlcm5hbFVpZCIsIG90cF91c2VyX2V4dGVybmFsX3VpZCwgbmV3X290cF91c2VyX2V4dGVybmFsX3VpZCkKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZmluZF91c2VyX2J5X2V4dGVybmFsX3
 VpZCAhPSBOb25lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgIAogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIEhPVFAgYXV0aGVud
 GljYXRpb24gZHVyaW5nIGF1dGhlbnRpY2F0aW9uLiBGYWlsZWQgdG8gdXBkYXRlIHVzZXIgZW50cnkiCiAgICAgICAgICAgIGVsaWYgc2VsZi5vdHBUeXBlID09ICJ0b3RwIjoKICAgICAgICAgICAg
 ICAgIGZvciB1c2VyX2Vucm9sbG1lbnQgaW4gdXNlcl9lbnJvbGxtZW50czoKICAgICAgICAgICAgICAgICAgICBvdHBfc2VjcmV0X2tleSA9IHNlbGYuZnJvbUJhc2U2NFVybCh1c2VyX2Vucm9sbG1
 lbnQpCgogICAgICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgVE9UUAogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRpb25fcmVzdWx0ID0gc2VsZi52YWxpZGF0ZVRvdHBLZXkob3RwX3NlY3JldF
 9rZXksIG90cENvZGUpCiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRpb25fcmVzdWx0ICE9IE5vbmUpIGFuZCB2YWxpZGF0aW9uX3Jlc3VsdFsicmVzdWx0Il06CiAgICAgICAgICAgICAgI
 CAgICAgICAgIHByaW50ICJPVFAuIFByb2Nlc3MgVE9UUCBhdXRoZW50aWNhdGlvbiBkdXJpbmcgYXV0aGVudGljYXRpb24uIG90cENvZGUgaXMgdmFsaWQiCiAgICAgICAgICAgICAgICAgICAgICAg
 IHJldHVybiBUcnVlCgogICAgICAgIGZhY2VzTWVzc2FnZXMuYWRkKFN0YXR1c01lc3NhZ2UuU2V2ZXJpdHkuRVJST1IsICJGYWlsZWQgdG8gYXV0aGVudGljYXRlLiBPVFAgY29kZSBpcyBpbnZhbGl
 kIikKICAgICAgICBwcmludCAiT1RQLiBQcm9jZXNzIE9UUCBhdXRoZW50aWNhdGlvbi4gT1RQIGNvZGUgaXMgaW52YWxpZCIKCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgIyBTaGFyZWQgSE9UUC
 9UT1RQIG1ldGhvZHMKICAgIGRlZiBnZW5lcmF0ZVNlY3JldEtleShzZWxmLCBrZXlMZW5ndGgpOgogICAgICAgIGJ5dGVzID0gamFycmF5Lnplcm9zKGtleUxlbmd0aCwgImIiKQogICAgICAgIHNlY
 3VyZVJhbmRvbSA9IFNlY3VyZVJhbmRvbSgpCiAgICAgICAgc2VjdXJlUmFuZG9tLm5leHRCeXRlcyhieXRlcykKICAgICAgICAKICAgICAgICByZXR1cm4gYnl0ZXMKICAgIAogICAgIyBIT1RQIG1l
 dGhvZHMKICAgIGRlZiBnZW5lcmF0ZVNlY3JldEhvdHBLZXkoc2VsZik6CiAgICAgICAga2V5TGVuZ3RoID0gc2VsZi5ob3RwQ29uZmlndXJhdGlvblsia2V5TGVuZ3RoIl0KICAgICAgICAKICAgICA
 gICByZXR1cm4gc2VsZi5nZW5lcmF0ZVNlY3JldEtleShrZXlMZW5ndGgpCgogICAgZGVmIGdlbmVyYXRlSG90cEtleShzZWxmLCBzZWNyZXRLZXksIG1vdmluZ0ZhY3Rvcik6CiAgICAgICAgZGlnaX
 RzID0gc2VsZi5ob3RwQ29uZmlndXJhdGlvblsiZGlnaXRzIl0KCiAgICAgICAgaG90cCA9IEhPVFAua2V5KHNlY3JldEtleSkuZGlnaXRzKGRpZ2l0cykubW92aW5nRmFjdG9yKG1vdmluZ0ZhY3Rvc
 ikuYnVpbGQoKQogICAgICAgIAogICAgICAgIHJldHVybiBob3RwLnZhbHVlKCkKCiAgICBkZWYgdmFsaWRhdGVIb3RwS2V5KHNlbGYsIHNlY3JldEtleSwgbW92aW5nRmFjdG9yLCB0b3RwS2V5KToK
 ICAgICAgICBkaWdpdHMgPSBzZWxmLmhvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQoKICAgICAgICBodG9wVmFsaWRhdGlvblJlc3VsdCA9IEhPVFBWYWxpZGF0b3IubG9va0FoZWFkV2luZG93KDE
 pLnZhbGlkYXRlKHNlY3JldEtleSwgbW92aW5nRmFjdG9yLCBkaWdpdHMsIHRvdHBLZXkpCiAgICAgICAgaWYgaHRvcFZhbGlkYXRpb25SZXN1bHQuaXNWYWxpZCgpOgogICAgICAgICAgICByZXR1cm
 4geyAicmVzdWx0IjogVHJ1ZSwgIm1vdmluZ0ZhY3RvciI6IGh0b3BWYWxpZGF0aW9uUmVzdWx0LmdldE5ld01vdmluZ0ZhY3RvcigpIH0KCiAgICAgICAgcmV0dXJuIHsgInJlc3VsdCI6IEZhbHNlL
 CAibW92aW5nRmFjdG9yIjogTm9uZSB9CgogICAgZGVmIGdlbmVyYXRlSG90cFNlY3JldEtleVVyaShzZWxmLCBzZWNyZXRLZXksIGlzc3VlciwgdXNlckRpc3BsYXlOYW1lKToKICAgICAgICBkaWdp
 dHMgPSBzZWxmLmhvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQoKICAgICAgICBzZWNyZXRLZXlCYXNlMzIgPSBzZWxmLnRvQmFzZTMyKHNlY3JldEtleSkKICAgICAgICBvdHBLZXkgPSBPVFBLZXk
 oc2VjcmV0S2V5QmFzZTMyLCBPVFBUeXBlLkhPVFApCiAgICAgICAgbGFiZWwgPSBpc3N1ZXIgKyAiOiVzIiAlIHVzZXJEaXNwbGF5TmFtZTsKCiAgICAgICAgb3RwQXV0aFVSSSA9IE9UUEF1dGhVUk
 lCdWlsZGVyLmZyb21LZXkob3RwS2V5KS5sYWJlbChsYWJlbCkuaXNzdWVyKGlzc3VlcikuZGlnaXRzKGRpZ2l0cykuYnVpbGQoKTsKCiAgICAgICAgcmV0dXJuIG90cEF1dGhVUkkudG9VcmlTdHJpb
 mcoKQoKICAgICMgVE9UUCBtZXRob2RzCiAgICBkZWYgZ2VuZXJhdGVTZWNyZXRUb3RwS2V5KHNlbGYpOgogICAgICAgIGtleUxlbmd0aCA9IHNlbGYudG90cENvbmZpZ3VyYXRpb25bImtleUxlbmd0
 aCJdCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHNlbGYuZ2VuZXJhdGVTZWNyZXRLZXkoa2V5TGVuZ3RoKQoKICAgIGRlZiBnZW5lcmF0ZVRvdHBLZXkoc2VsZiwgc2VjcmV0S2V5KToKICAgICAgICB
 kaWdpdHMgPSBzZWxmLnRvdHBDb25maWd1cmF0aW9uWyJkaWdpdHMiXQogICAgICAgIHRpbWVTdGVwID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsidGltZVN0ZXAiXQogICAgICAgIGhtYWNTaGFBbG
 dvcml0aG1UeXBlID0gc2VsZi50b3RwQ29uZmlndXJhdGlvblsiaG1hY1NoYUFsZ29yaXRobVR5cGUiXQoKICAgICAgICB0b3RwID0gVE9UUC5rZXkoc2VjcmV0S2V5KS5kaWdpdHMoZGlnaXRzKS50a
 W1lU3RlcChUaW1lVW5pdC5TRUNPTkRTLnRvTWlsbGlzKHRpbWVTdGVwKSkuaG1hY1NoYShobWFjU2hhQWxnb3JpdGhtVHlwZSkuYnVpbGQoKQogICAgICAgIAogICAgICAgIHJldHVybiB0b3RwLnZh
 bHVlKCkKCiAgICBkZWYgdmFsaWRhdGVUb3RwS2V5KHNlbGYsIHNlY3JldEtleSwgdG90cEtleSk6CiAgICAgICAgbG9jYWxUb3RwS2V5ID0gc2VsZi5nZW5lcmF0ZVRvdHBLZXkoc2VjcmV0S2V5KQo
 gICAgICAgIGlmIFN0cmluZ0hlbHBlci5lcXVhbHMobG9jYWxUb3RwS2V5LCB0b3RwS2V5KToKICAgICAgICAgICAgcmV0dXJuIHsgInJlc3VsdCI6IFRydWUgfQoKICAgICAgICByZXR1cm4geyAicm
 VzdWx0IjogRmFsc2UgfQoKICAgIGRlZiBnZW5lcmF0ZVRvdHBTZWNyZXRLZXlVcmkoc2VsZiwgc2VjcmV0S2V5LCBpc3N1ZXIsIHVzZXJEaXNwbGF5TmFtZSk6CiAgICAgICAgZGlnaXRzID0gc2VsZ
 i50b3RwQ29uZmlndXJhdGlvblsiZGlnaXRzIl0KICAgICAgICB0aW1lU3RlcCA9IHNlbGYudG90cENvbmZpZ3VyYXRpb25bInRpbWVTdGVwIl0KCiAgICAgICAgc2VjcmV0S2V5QmFzZTMyID0gc2Vs
 Zi50b0Jhc2UzMihzZWNyZXRLZXkpCiAgICAgICAgb3RwS2V5ID0gT1RQS2V5KHNlY3JldEtleUJhc2UzMiwgT1RQVHlwZS5UT1RQKQogICAgICAgIGxhYmVsID0gaXNzdWVyICsgIjolcyIgJSB1c2V
 yRGlzcGxheU5hbWU7CgogICAgICAgIG90cEF1dGhVUkkgPSBPVFBBdXRoVVJJQnVpbGRlci5mcm9tS2V5KG90cEtleSkubGFiZWwobGFiZWwpLmlzc3Vlcihpc3N1ZXIpLmRpZ2l0cyhkaWdpdHMpLn
 RpbWVTdGVwKFRpbWVVbml0LlNFQ09ORFMudG9NaWxsaXModGltZVN0ZXApKS5idWlsZCgpOwoKICAgICAgICByZXR1cm4gb3RwQXV0aFVSSS50b1VyaVN0cmluZygpCgogICAgIyBVdGlsaXR5IG1ld
 GhvZHMKICAgIGRlZiB0b0Jhc2UzMihzZWxmLCBieXRlcyk6CiAgICAgICAgcmV0dXJuIEJhc2VFbmNvZGluZy5iYXNlMzIoKS5lbmNvZGUoYnl0ZXMpCgogICAgZGVmIHRvQmFzZTY0VXJsKHNlbGYs
 IGJ5dGVzKToKICAgICAgICByZXR1cm4gQmFzZUVuY29kaW5nLmJhc2U2NFVybCgpLmVuY29kZShieXRlcykKCiAgICBkZWYgZnJvbUJhc2U2NFVybChzZWxmLCBjaGFycyk6CiAgICAgICAgcmV0dXJ
 uIEJhc2VFbmNvZGluZy5iYXNlNjRVcmwoKS5kZWNvZGUoY2hhcnMpCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!5018.F9CF,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: DUO authentication module
displayName: duo
gluuStatus: false
inum: %(inumOrg)s!0011!5018.F9CF
oxConfigurationProperty: {"value1":"duo_creds_file","value2":"/etc/certs/duo_creds.json","description":""}
oxConfigurationProperty: {"value1":"duo_host","value2":"api-random.duosecurity.com","description":""}
oxLevel: 20
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJv
 bSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR
 5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgVXNlckdyb3VwU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlCmZyb20gb3JnLnhkaS5zZXJ2aWNlIG
 ltcG9ydCBNYWlsU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBBcnJheUhlbHBlcgoKaW1wb3J0IGphdmEKaW1wb3J0I
 GR1b193ZWIKdHJ5OgogICAgaW1wb3J0IGpzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXBsZWpzb24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29u
 QXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGl
 zCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBkdW9fY3JlZHNfZmlsZSA9IGNvbm
 ZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZHVvX2NyZWRzX2ZpbGUiKS5nZXRWYWx1ZTIoKQogICAgICAgICMgTG9hZCBjcmVkZW50aWFscyBmcm9tIGZpbGUKICAgICAgICBmID0gb3BlbihkdW9fY
 3JlZHNfZmlsZSwgJ3InKQogICAgICAgIHRyeToKICAgICAgICAgICAgY3JlZHMgPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQgIkR1by4gSW5p
 dGlhbGl6YXRpb24uIEZhaWxlZCB0byBsb2FkIGNyZWRzIGZyb20gZmlsZToiLCBkdW9fY3JlZHNfZmlsZQogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBmaW5hbGx5OgogICAgICAgICA
 gICBmLmNsb3NlKCkKCiAgICAgICAgc2VsZi5pa2V5ID0gc3RyKGNyZWRzWyJpa2V5Il0pCiAgICAgICAgc2VsZi5za2V5ID0gc3RyKGNyZWRzWyJza2V5Il0pCiAgICAgICAgc2VsZi5ha2V5ID0gc3
 RyKGNyZWRzWyJha2V5Il0pCgogICAgICAgIHNlbGYudXNlX2R1b19ncm91cCA9IEZhbHNlCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJkdW9fZ3JvdXAiK
 Sk6CiAgICAgICAgICAgIHNlbGYuZHVvX2dyb3VwID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJkdW9fZ3JvdXAiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBzZWxmLnVzZV9kdW9fZ3Jv
 dXAgPSBUcnVlCiAgICAgICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uLiBVc2luZyBEdW8gb25seSBpZiB1c2VyIGJlbG9uZyB0byBncm91cDoiLCBzZWxmLmR1b19ncm91cAoKICAgICA
 gICBzZWxmLnVzZV9hdWRpdF9ncm91cCA9IEZhbHNlCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJhdWRpdF9ncm91cCIpKToKICAgICAgICAgICAgc2VsZi
 5hdWRpdF9ncm91cCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfZ3JvdXAiKS5nZXRWYWx1ZTIoKQoKICAgICAgICAgICAgaWYgKG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlc
 y5jb250YWluc0tleSgiYXVkaXRfZ3JvdXBfZW1haWwiKSk6CiAgICAgICAgICAgICAgICBwcmludCAiRHVvLiBJbml0aWFsaXphdGlvbi4gUHJvcGVydHkgYXVkaXRfZ3JvdXBfZW1haWwgaXMgbm90
 IHNwZWNpZmllZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2VsZi5hdWRpdF9lbWFpbCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfZ3JvdXB
 fZW1haWwiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBzZWxmLnVzZV9hdWRpdF9ncm91cCA9IFRydWUKCiAgICAgICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemF0aW9uLiBVc2luZyBhdWRpdG
 8gZ3JvdXA6Iiwgc2VsZi5hdWRpdF9ncm91cAogICAgICAgICAgICAKICAgICAgICBpZiAoc2VsZi51c2VfZHVvX2dyb3VwIG9yIHNlbGYudXNlX2F1ZGl0X2dyb3VwKToKICAgICAgICAgICAgaWYgK
 G5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiYXVkaXRfYXR0cmlidXRlIikpOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gSW5pdGlhbGl6YXRpb24uIFByb3BlcnR5
 IGF1ZGl0X2F0dHJpYnV0ZSBpcyBub3Qgc3BlY2lmaWVkIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLmF1ZGl0X2F0dHJ
 pYnV0ZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXVkaXRfYXR0cmlidXRlIikuZ2V0VmFsdWUyKCkKCgogICAgICAgIHByaW50ICJEdW8uIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseS
 IKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiRHVvLiBEZXN0cm95IgogICAgICAgIHBya
 W50ICJEdW8uIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QXBpVmVyc2lvbihzZWxmKToKICAgICAgICByZXR1cm4gMQoKICAgIGRlZiBpc1Zh
 bGlkQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIFRydWUKCiAgICBkZWYgZ2V0QWx0ZXJuYXRpdmVBdXR
 oZW50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBhdXRoZW50aWNhdGUoc2VsZiwgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBkdW9faG9zdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZHVvX2hvc3QiKS5nZXRWYWx1Z
 TIoKQoKICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKCiAg
 ICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgoKICAgICAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmd
 ldFBhc3N3b3JkKCkKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbH
 Blci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNlclNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgbG9nZ2VkX
 2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBG
 YWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2Vydml
 jZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmIChzZWxmLnVzZV9kdW9fZ3JvdXApOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRlIGZvciBzdGVwID
 EuIENoZWNraW5nIGlmIHVzZXIgYmVsb25nIHRvIER1byBncm91cCIKICAgICAgICAgICAgICAgIGlzX21lbWJlcl9kdW9fZ3JvdXAgPSBzZWxmLmlzVXNlck1lbWJlck9mR3JvdXAodXNlciwgc2VsZ
 i5hdWRpdF9hdHRyaWJ1dGUsIHNlbGYuZHVvX2dyb3VwKQogICAgICAgICAgICAgICAgaWYgKGlzX21lbWJlcl9kdW9fZ3JvdXApOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhl
 bnRpY2F0ZSBmb3Igc3RlcCAxLiBVc2VyICciICsgdXNlci5nZXRVc2VySWQoKSArICInIG1lbWJlciBvZiBEdW8gZ3JvdXAiCiAgICAgICAgICAgICAgICAgICAgZHVvX2NvdW50X2xvZ2luX3N0ZXB
 zID0gMgogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBzZWxmLnByb2Nlc3NBdWRpdEdyb3VwKHVzZXIpCiAgICAgICAgICAgICAgICAgICAgZHVvX2NvdW50X2xvZ2luX3
 N0ZXBzID0gMQoKICAgICAgICAgICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImR1b19jb3VudF9sb2dpbl9zdGVwc
 yIsIGR1b19jb3VudF9sb2dpbl9zdGVwcykKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRl
 IGZvciBzdGVwIDIiCgogICAgICAgICAgICBzaWdfcmVzcG9uc2VfYXJyYXkgPSByZXF1ZXN0UGFyYW1ldGVycy5nZXQoInNpZ19yZXNwb25zZSIpCiAgICAgICAgICAgIGlmIEFycmF5SGVscGVyLml
 zRW1wdHkoc2lnX3Jlc3BvbnNlX2FycmF5KToKICAgICAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBzaWdfcmVzcG9uc2UgaXMgZW1wdHkiCiAgICAgICAgIC
 AgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGR1b19zaWdfcmVzcG9uc2UgPSBzaWdfcmVzcG9uc2VfYXJyYXlbMF0KCiAgICAgICAgICAgIHByaW50ICJEdW8uIEF1dGhlbnRpY2F0ZSBmb
 3Igc3RlcCAyLiBkdW9fc2lnX3Jlc3BvbnNlOiAiICsgZHVvX3NpZ19yZXNwb25zZQoKICAgICAgICAgICAgYXV0aGVudGljYXRlZF91c2VybmFtZSA9IGR1b193ZWIudmVyaWZ5X3Jlc3BvbnNlKHNl
 bGYuaWtleSwgc2VsZi5za2V5LCBzZWxmLmFrZXksIGR1b19zaWdfcmVzcG9uc2UpCgogICAgICAgICAgICBwcmludCAiRHVvLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gYXV0aGVudGljYXRlZF9
 1c2VybmFtZTogIiArIGF1dGhlbnRpY2F0ZWRfdXNlcm5hbWUgKyAiLCBleHBlY3RlZCB1c2VyX25hbWU6ICIgKyB1c2VyX25hbWUKCiAgICAgICAgICAgIGlmIChub3QgU3RyaW5nSGVscGVyLmVxdW
 Fscyh1c2VyX25hbWUsIGF1dGhlbnRpY2F0ZWRfdXNlcm5hbWUpKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVud
 GljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIHNlbGYucHJvY2Vz
 c0F1ZGl0R3JvdXAodXNlcikKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGN
 vbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCgogICAgICAgIGR1b19ob3N0ID
 0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJkdW9faG9zdCIpLmdldFZhbHVlMigpCgogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpC
 iAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQoKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgcHJpbnQgIkR1by4gUHJlcGFyZSBmb3Igc3RlcCAx
 IgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDIpOgogICAgICAgICAgICBwcmludCAiRHVvLiBQcmVwYXJlIGZvciBzdGVwIDIiCgogICAgICAgICAgICBkdW9
 fc2lnX3JlcXVlc3QgPSBkdW9fd2ViLnNpZ25fcmVxdWVzdChzZWxmLmlrZXksIHNlbGYuc2tleSwgc2VsZi5ha2V5LCB1c2VyX25hbWUpCiAgICAgICAgICAgIHByaW50ICJEdW8uIFByZXBhcmUgZm
 9yIHN0ZXAgMi4gZHVvX3NpZ19yZXF1ZXN0OiAiICsgZHVvX3NpZ19yZXF1ZXN0CiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgiZHVvX2hvc3QiLCBkdW9faG9zdCkKICAgICAgI
 CAgICAgY29udGV4dC5zZXQoImR1b19zaWdfcmVxdWVzdCIsIGR1b19zaWdfcmVxdWVzdCkKCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZh
 bHNlCgogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldENvdW5
 0QXV0aGVudGljYXRpb25TdGVwcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgaWYgKGNvbn
 RleHQuaXNTZXQoImR1b19jb3VudF9sb2dpbl9zdGVwcyIpKToKICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQuZ2V0KCJkdW9fY291bnRfbG9naW5fc3RlcHMiKQoKICAgICAgICByZXR1cm4gMgoKI
 CAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiAiL2F1dGgvZHVv
 L2R1b2xvZ2luLnhodG1sIgogICAgICAgIHJldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR
 1cm4gVHJ1ZQoKICAgIGRlZiBpc1VzZXJNZW1iZXJPZkdyb3VwKHNlbGYsIHVzZXIsIGF0dHJpYnV0ZSwgZ3JvdXApOgogICAgICAgIGlzX21lbWJlciA9IEZhbHNlCiAgICAgICAgbWVtYmVyX29mX2
 xpc3QgPSB1c2VyLmdldEF0dHJpYnV0ZVZhbHVlcyhhdHRyaWJ1dGUpCiAgICAgICAgaWYgKG1lbWJlcl9vZl9saXN0ICE9IE5vbmUpOgogICAgICAgICAgICBmb3IgbWVtYmVyX29mIGluIG1lbWJlc
 l9vZl9saXN0OgogICAgICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGdyb3VwLCBtZW1iZXJfb2YpKToKICAgICAgICAgICAgICAgICAgICBpc19tZW1iZXIgPSBU
 cnVlCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgcmV0dXJuIGlzX21lbWJlcgoKICAgIGRlZiBwcm9jZXNzQXVkaXRHcm91cChzZWxmLCB1c2VyKToKICAgICAgICBpZiAoc2VsZi5
 1c2VfYXVkaXRfZ3JvdXApOgogICAgICAgICAgICBpc19tZW1iZXIgPSBzZWxmLmlzVXNlck1lbWJlck9mR3JvdXAodXNlciwgc2VsZi5hdWRpdF9hdHRyaWJ1dGUsIHNlbGYuYXVkaXRfZ3JvdXApCi
 AgICAgICAgICAgIGlmIChpc19tZW1iZXIpOgogICAgICAgICAgICAgICAgcHJpbnQgIkR1by4gQXV0aGVudGljYXRlIGZvciBwcm9jZXNzQXVkaXRHcm91cC4gVXNlciAnIiArIHVzZXIuZ2V0VXNlc
 klkKCkgKyAiJyBtZW1iZXIgb2YgYXVkaXQgZ3JvdXAiCiAgICAgICAgICAgICAgICBwcmludCAiRHVvLiBBdXRoZW50aWNhdGUgZm9yIHByb2Nlc3NBdWRpdEdyb3VwLiBTZW5kaW5nIGUtbWFpbCBh
 Ym91dCB1c2VyICciICsgdXNlci5nZXRVc2VySWQoKSArICInIGxvZ2luIHRvIiwgc2VsZi5hdWRpdF9lbWFpbAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAjIFNlbmQgZS1tYWlsIHR
 vIGFkbWluaXN0cmF0b3IKICAgICAgICAgICAgICAgIHVzZXJfaWQgPSB1c2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBtYWlsU2VydmljZSA9IE1haWxTZXJ2aWNlLmluc3RhbmNlKCkKIC
 AgICAgICAgICAgICAgIHN1YmplY3QgPSAiVXNlciBsb2cgaW46ICIgKyB1c2VyX2lkCiAgICAgICAgICAgICAgICBib2R5ID0gIlVzZXIgbG9nIGluOiAiICsgdXNlcl9pZAogICAgICAgICAgICAgI
 CAgbWFpbFNlcnZpY2Uuc2VuZE1haWwoc2VsZi5hdWRpdF9lbWFpbCwgc3ViamVjdCwgYm9keSkK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!522F.CDC5,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Update User script
displayName: update_user
gluuStatus: false
inum: %(inumOrg)s!0011!522F.CDC5
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBVcGRhdGVV
 c2VyVHlwZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcgpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QKCmltcG9ydCBqYXZhCgp
 jbGFzcyBVcGRhdGVVc2VyKFVwZGF0ZVVzZXJUeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cn
 JlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgc
 HJpbnQgIlVwZGF0ZSB1c2VyLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgZGVmIGRlc3Ryb3koc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0
 ZXMpOgogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gRGVzdHJveSIKICAgICAgICBwcmludCAiVXBkYXRlIHVzZXIuIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWU
 gICAKCiAgICAjIFVwZGF0ZSB1c2VyIGVudHJ5IGJlZm9yZSBwZXJzaXN0ZW50IGl0CiAgICAjICAgdXNlciBpcyBvcmcuZ2x1dS5veHRydXN0Lm1vZGVsLkdsdXVDdXN0b21QZXJzb24KICAgICMgIC
 BwZXJzaXN0ZWQgaXMgYm9vbGVhbiB2YWx1ZSB0byBzcGVjaWZ5IGlmIG9wZXJhdGlvbiB0eXBlOiBhZGQvbW9kaWZ5CiAgICAjICAgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51dGlsL
 k1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5PgogICAgZGVmIHVwZGF0ZVVzZXIoc2VsZiwgdXNlciwgcGVyc2lzdGVkLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJp
 bnQgIlVwZGF0ZSB1c2VyLiBVcGRhdGVVc2VyIG1ldGhvZCIKCiAgICAgICAgdWlkID0gdXNlci5nZXRVaWQoKQogICAgICAgIHByaW50ICJVcGRhdGUgdXNlci4gVXNlciBVaWQ6IiwgdWlkCiAgICA
 gICAgCiAgICAgICAgbWFpbCA9IHVpZCArICJAZXhhbXBsZS5vcmciCiAgICAgICAgdXNlci5zZXRNYWlsKG1haWwpCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2
 VsZik6CiAgICAgICAgcmV0dXJuIDEK
oxScriptType: update_user
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!6EA0.8F0C,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample User Registration script
displayName: user_registration
gluuStatus: false
inum: %(inumOrg)s!0011!6EA0.8F0C
oxConfigurationProperty: {"value1":"enable_user","value2":"false","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS51c2VyIGltcG9ydCBVc2VyUmVn
 aXN0cmF0aW9uVHlwZQpmcm9tIG9yZy54ZGkubGRhcC5tb2RlbCBpbXBvcnQgR2x1dVN0YXR1cwpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcgpmcm9tIGp
 hdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QKCmltcG9ydCBqYXZhCgpjbGFzcyBVc2VyUmVnaXN0cmF0aW9uKFVzZXJSZWdpc3RyYXRpb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZW
 xmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpY
 nV0ZXMpOgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIHNlbGYuZW5hYmxlX3VzZXIgPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZp
 Z3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZW5hYmxlX3VzZXIiKS5nZXRWYWx1ZTIoKSwgRmFsc2UpCgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z
 1bGx5IgoKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiVXNlciByZWdpc3RyYXRpb24uIE
 Rlc3Ryb3kiCiAgICAgICAgcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlICAgCgogICAgIyBVc2VyIHJlZ2lzdHJhdGlvb
 iBpbml0IG1ldGhvZAogICAgIyAgIHVzZXIgaXMgb3JnLmdsdXUub3h0cnVzdC5tb2RlbC5HbHV1Q3VzdG9tUGVyc29uCiAgICAjICAgcmVxdWVzdFBhcmFtZXRlcnMgaXMgamF2YS51dGlsLk1hcDxT
 dHJpbmcsIFN0cmluZ1tdPgogICAgIyAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4KICAgIGRlZiBpbml0UmVnaXN
 0cmF0aW9uKHNlbGYsIHVzZXIsIHJlcXVlc3RQYXJhbWV0ZXJzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBJbml0IG1ldGhvZCIKCi
 AgICAgICAgcmV0dXJuIFRydWUKCiAgICAjIFVzZXIgcmVnaXN0cmF0aW9uIHByZSBtZXRob2QKICAgICMgICB1c2VyIGlzIG9yZy5nbHV1Lm94dHJ1c3QubW9kZWwuR2x1dUN1c3RvbVBlcnNvbgogI
 CAgIyAgIHJlcXVlc3RQYXJhbWV0ZXJzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTdHJpbmdbXT4KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWwuTWFwPFN0cmlu
 ZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgcHJlUmVnaXN0cmF0aW9uKHNlbGYsIHVzZXIsIHJlcXVlc3RQYXJhbWV0ZXJzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICA
 gcHJpbnQgIlVzZXIgcmVnaXN0cmF0aW9uLiBQcmUgbWV0aG9kIgoKICAgICAgICB1c2VyU3RhdHVzID0gR2x1dVN0YXR1cy5BQ1RJVkUKICAgICAgICBpZiBub3Qgc2VsZi5lbmFibGVfdXNlcjoKIC
 AgICAgICAgICAgdXNlclN0YXR1cyA9IEdsdXVTdGF0dXMuSU5BQ1RJVkUKCiAgICAgICAgIyBEaXNhYmxlL0VuYWJsZSByZWdpc3RlcmVkIHVzZXIKICAgICAgICB1c2VyLnNldFN0YXR1cyh1c2VyU
 3RhdHVzKQoKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICMgVXNlciByZWdpc3RyYXRpb24gcG9zdCBtZXRob2QKICAgICMgICB1c2VyIGlzIG9yZy5nbHV1Lm94dHJ1c3QubW9kZWwuR2x1dUN1c3Rv
 bVBlcnNvbgogICAgIyAgIHJlcXVlc3RQYXJhbWV0ZXJzIGlzIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTdHJpbmdbXT4KICAgICMgICBjb25maWd1cmF0aW9uQXR0cmlidXRlcyBpcyBqYXZhLnV0aWw
 uTWFwPFN0cmluZywgU2ltcGxlQ3VzdG9tUHJvcGVydHk+CiAgICBkZWYgcG9zdFJlZ2lzdHJhdGlvbihzZWxmLCB1c2VyLCByZXF1ZXN0UGFyYW1ldGVycywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZX
 MpOgogICAgICAgIHByaW50ICJVc2VyIHJlZ2lzdHJhdGlvbi4gUG9zdCBtZXRob2QiCgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0d
 XJuIDEK
oxScriptType: user_registration
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!7523.8F2D,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Google+ authentication module
displayName: gplus
gluuStatus: false
inum: %(inumOrg)s!0011!7523.8F2D
oxConfigurationProperty: {"value1":"gplus_client_secrets_file","value2":"/etc/certs/gplus_client_secrets.json","description":""}
oxConfigurationProperty: {"value1":"gplus_deployment_type","value2":"enroll","description":""}
oxConfigurationProperty: {"value1":"gplus_remote_attributes_list","value2":"email, email, name, family_name, given_name, locale","description":""}
oxConfigurationProperty: {"value1":"gplus_local_attributes_list","value2":"uid, mail, givenName, sn, cn, preferredLanguage","description":""}
oxLevel: 40
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbSBpbXBvcnQgQ29tcG9uZW50CmZyb20gb3JnLmpib3NzLnNlYW0u
 Y29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3JnLmpib3NzLnNlYW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gamF2YXguZmFjZXMuY29udGV4dCBpbXBvcnQgRmF
 jZXNDb250ZXh0CmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZS
 BpbXBvcnQgVXNlclNlcnZpY2UsIENsaWVudFNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlcgpmcm9tI
 GphdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QsIEhhc2hNYXAsIElkZW50aXR5SGFzaE1hcApmcm9tIG9yZy54ZGkub3hhdXRoLm1vZGVsLmNvbW1vbiBpbXBvcnQgVXNlcgpmcm9tIG9y
 Zy54ZGkub3hhdXRoLmNsaWVudCBpbXBvcnQgVG9rZW5DbGllbnQsIFRva2VuUmVxdWVzdCwgVXNlckluZm9DbGllbnQKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24gaW1wb3J0IEdyYW5
 0VHlwZSwgQXV0aGVudGljYXRpb25NZXRob2QKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5qd3QgaW1wb3J0IEp3dCwgSnd0Q2xhaW1OYW1lCgppbXBvcnQgamF2YQoKdHJ5OgogICAgaW1wb3J0IG
 pzb24KZXhjZXB0IEltcG9ydEVycm9yOgogICAgaW1wb3J0IHNpbXBsZWpzb24gYXMganNvbgoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgI
 GRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29u
 ZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uIgoKICAgICAgICBpZiAobm90IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V
 5KCJncGx1c19jbGllbnRfc2VjcmV0c19maWxlIikpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gVGhlIHByb3BlcnR5IGdwbHVzX2NsaWVudF9zZWNyZXRzX2ZpbG
 UgaXMgZW1wdHkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICBjbGllbnRTZWNyZXRzRmlsZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZ3BsdXNfY
 2xpZW50X3NlY3JldHNfZmlsZSIpLmdldFZhbHVlMigpCiAgICAgICAgc2VsZi5jbGllbnRTZWNyZXRzID0gc2VsZi5sb2FkQ2xpZW50U2VjcmV0cyhjbGllbnRTZWNyZXRzRmlsZSkKICAgICAgICBp
 ZiAoc2VsZi5jbGllbnRTZWNyZXRzID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gRmlsZSB3aXRoIEdvb2dsZSsgY2xpZW50IHNlY3JldHMgc2hvdWx
 kIGJlIG5vdCBlbXB0eSIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPSBOb25lCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dG
 VzLmNvbnRhaW5zS2V5KCJncGx1c19yZW1vdGVfYXR0cmlidXRlc19saXN0IikgYW5kCiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJncGx1c19sb2NhbF9hd
 HRyaWJ1dGVzX2xpc3QiKSk6CgogICAgICAgICAgICByZW1vdGVBdHRyaWJ1dGVzTGlzdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZ3BsdXNfcmVtb3RlX2F0dHJpYnV0ZXNfbGlzdCIp
 LmdldFZhbHVlMigpCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShyZW1vdGVBdHRyaWJ1dGVzTGlzdCkpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgSW5pdGlhbGl
 6YXRpb24uIFRoZSBwcm9wZXJ0eSBncGx1c19yZW1vdGVfYXR0cmlidXRlc19saXN0IGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAgIAoKICAgICAgICAgICAgbG9jYWxBdH
 RyaWJ1dGVzTGlzdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZ3BsdXNfbG9jYWxfYXR0cmlidXRlc19saXN0IikuZ2V0VmFsdWUyKCkKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlc
 i5pc0VtcHR5KGxvY2FsQXR0cmlidXRlc0xpc3QpKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemF0aW9uLiBUaGUgcHJvcGVydHkgZ3BsdXNfbG9jYWxfYXR0cmlidXRl
 c19saXN0IGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICBzZWxmLmF0dHJpYnV0ZXNNYXBwaW5nID0gc2VsZi5wcmVwYXJlQXR0cmlidXRlc01hcHBpbmc
 ocmVtb3RlQXR0cmlidXRlc0xpc3QsIGxvY2FsQXR0cmlidXRlc0xpc3QpCiAgICAgICAgICAgIGlmIChzZWxmLmF0dHJpYnV0ZXNNYXBwaW5nID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbn
 QgIkdvb2dsZSsgSW5pdGlhbGl6YXRpb24uIFRoZSBhdHRyaWJ1dGVzIG1hcHBpbmcgaXNuJ3QgdmFsaWQiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgc2VsZi5leHRlbnNpb
 25Nb2R1bGUgPSBOb25lCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJleHRlbnNpb25fbW9kdWxlIikpOgogICAgICAgICAgICBleHRlbnNpb25Nb2R1bGVO
 YW1lID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJleHRlbnNpb25fbW9kdWxlIikuZ2V0VmFsdWUyKCkKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5leHRlbnNpb25
 Nb2R1bGUgPSBfX2ltcG9ydF9fKGV4dGVuc2lvbk1vZHVsZU5hbWUpCiAgICAgICAgICAgICAgICBleHRlbnNpb25Nb2R1bGVJbml0UmVzdWx0ID0gc2VsZi5leHRlbnNpb25Nb2R1bGUuaW5pdChjb2
 5maWd1cmF0aW9uQXR0cmlidXRlcykKICAgICAgICAgICAgICAgIGlmIChub3QgZXh0ZW5zaW9uTW9kdWxlSW5pdFJlc3VsdCk6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgI
 CAgICAgIGV4Y2VwdCBJbXBvcnRFcnJvciwgZXg6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gRmFpbGVkIHRvIGxvYWQgZ3BsdXNfZXh0ZW5zaW9uX21vZHVs
 ZToiLCBleHRlbnNpb25Nb2R1bGVOYW1lCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBJbml0aWFsaXphdGlvbi4gVW5leHBlY3RlZCBlcnJvcjoiLCBleAogICAgICAgICAgICAgICAgcmV
 0dXJuIEZhbHNlCgogICAgICAgIHByaW50ICJHb29nbGUrIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGF1dGhDb2
 5maWd1cmF0aW9uKToKICAgICAgICBwcmludCAiR29vZ2xlKyBEZXN0cm95IgogICAgICAgIHByaW50ICJHb29nbGUrIERlc3Ryb3llZCBzdWNjZXNzZnVsbHkiCgogICAgZGVmIGdldEFwaVZlcnNpb
 24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAg
 IHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJ
 uIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLm
 dldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKEF1dGhlbnRpY2F0aW9uU2VydmljZSkKICAgICAgICB1c2VyU2VydmljZ
 SA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShVc2VyU2VydmljZSkKCiAgICAgICAgbWFwVXNlckRlcGxveW1lbnQgPSBGYWxzZQogICAgICAgIGVucm9sbFVzZXJEZXBsb3ltZW50ID0gRmFsc2UKICAg
 ICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX2RlcGxveW1lbnRfdHlwZSIpKToKICAgICAgICAgICAgZGVwbG95bWVudFR5cGUgPSBTdHJpbmdIZWxwZXI
 udG9Mb3dlckNhc2UoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJncGx1c19kZXBsb3ltZW50X3R5cGUiKS5nZXRWYWx1ZTIoKSkKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChTdHJpbm
 dIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShkZXBsb3ltZW50VHlwZSwgIm1hcCIpKToKICAgICAgICAgICAgICAgIG1hcFVzZXJEZXBsb3ltZW50ID0gVHJ1ZQogICAgICAgICAgICBpZiAoU3RyaW5nS
 GVscGVyLmVxdWFsc0lnbm9yZUNhc2UoZGVwbG95bWVudFR5cGUsICJlbnJvbGwiKSk6CiAgICAgICAgICAgICAgICBlbnJvbGxVc2VyRGVwbG95bWVudCA9IFRydWUKCiAgICAgICAgaWYgKHN0ZXAg
 PT0gMSk6CiAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgogCiAgICAgICAgICAgIGdwbHVzQXV0aENvZGVBcnJheSA9IHJlcXVlc3RQYXJhbWV0ZXJzLmd
 ldCgiZ3BsdXNfYXV0aF9jb2RlIikKICAgICAgICAgICAgZ3BsdXNBdXRoQ29kZSA9IGdwbHVzQXV0aENvZGVBcnJheVswXQoKICAgICAgICAgICAgIyBDaGVjayBpZiB1c2VyIHVzZXMgYmFzaWMgbW
 V0aG9kIHRvIGxvZyBpbgogICAgICAgICAgICB1c2VCYXNpY0F1dGggPSBGYWxzZQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdHlTdHJpbmcoZ3BsdXNBdXRoQ29kZSkpOgogICAgI
 CAgICAgICAgICAgdXNlQmFzaWNBdXRoID0gVHJ1ZQoKICAgICAgICAgICAgIyBVc2UgYmFzaWMgbWV0aG9kIHRvIGxvZyBpbgogICAgICAgICAgICBpZiAodXNlQmFzaWNBdXRoKToKICAgICAgICAg
 ICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBCYXNpYyBhdXRoZW50aWNhdGlvbiIKICAgICAgICAKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJncGx1c19
 jb3VudF9sb2dpbl9zdGVwcyIsIDEpCiAgICAgICAgCiAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgICAgICAgIC
 AgdXNlck5hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpCiAgICAgICAgICAgICAgICB1c2VyUGFzc3dvcmQgPSBjcmVkZW50aWFscy5nZXRQYXNzd29yZCgpCiAgICAgICAgCiAgICAgICAgI
 CAgICAgICBsb2dnZWRJbiA9IEZhbHNlCiAgICAgICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlck5hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0
 cmluZyh1c2VyUGFzc3dvcmQpKToKICAgICAgICAgICAgICAgICAgICB1c2VyU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShVc2VyU2VydmljZSkKICAgICAgICAgICAgICAgICAgICBsb2d
 nZWRJbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyTmFtZSwgdXNlclBhc3N3b3JkKQogICAgICAgIAogICAgICAgICAgICAgICAgaWYgKG5vdCBsb2dnZWRJbik6CiAgICAgICAgICAgIC
 AgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgIyBVc2UgR29vZ2xlKyBtZXRob2QgdG8gbG9nIGluCiAgICAgICAgICAgI
 HByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBncGx1c0F1dGhDb2RlOiIsIGdwbHVzQXV0aENvZGUKCiAgICAgICAgICAgIGN1cnJlbnRDbGllbnRTZWNyZXRzID0gc2VsZi5n
 ZXRDdXJyZW50Q2xpZW50U2VjcmV0cyhzZWxmLmNsaWVudFNlY3JldHMsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICAgICAgaWYgKGN1cnJlbnRDbGl
 lbnRTZWNyZXRzID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIENsaWVudCBzZWNyZXRzIGNvbmZpZ3VyYXRpb24gaXMgaW52YW
 xpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZ
 2V0cyB0b2tlbnMiCiAgICAgICAgICAgIHRva2VuUmVzcG9uc2UgPSBzZWxmLmdldFRva2Vuc0J5Q29kZShzZWxmLmNsaWVudFNlY3JldHMsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBncGx1c0F1
 dGhDb2RlKTsKICAgICAgICAgICAgaWYgKCh0b2tlblJlc3BvbnNlID09IE5vbmUpIG9yICh0b2tlblJlc3BvbnNlLmdldElkVG9rZW4oKSA9PSBOb25lKSBvciAodG9rZW5SZXNwb25zZS5nZXRBY2N
 lc3NUb2tlbigpID09IE5vbmUpKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gZ2V0IHRva2VucyIKICAgICAgICAgICAgIC
 AgIHJldHVybiBGYWxzZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFN1Y2Nlc3NmdWxseSBnZXRzIHRva2Vuc
 yIKCiAgICAgICAgICAgIGp3dCA9IEp3dC5wYXJzZSh0b2tlblJlc3BvbnNlLmdldElkVG9rZW4oKSkKICAgICAgICAgICAgIyBUT0RPOiBWYWxpZGF0ZSBJRCBUb2tlbiBTaWduYXR1cmUgIAoKICAg
 ICAgICAgICAgZ3BsdXNVc2VyVWlkID0gand0LmdldENsYWltcygpLmdldENsYWltQXNTdHJpbmcoSnd0Q2xhaW1OYW1lLlNVQkpFQ1RfSURFTlRJRklFUik7CiAgICAgICAgICAgIHByaW50ICJHb29
 nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGb3VuZCBHb29nbGUgdXNlciBJRCBpbiB0aGUgSUQgdG9rZW46ICIsIGdwbHVzVXNlclVpZAogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKG
 1hcFVzZXJEZXBsb3ltZW50KToKICAgICAgICAgICAgICAgICMgVXNlIG1hcHBpbmcgdG8gbG9jYWwgSURQIHVzZXIKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb
 3Igc3RlcCAxLiBBdHRlbXB0aW5nIHRvIGZpbmQgdXNlciBieSBveEV4dGVybmFsVWlkOiBncGx1czoiLCBncGx1c1VzZXJVaWQKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVz
 ZXIgd2l0aCBzcGVjaWZpZWQgZ3BsdXNVc2VyVWlkCiAgICAgICAgICAgICAgICBmb3VuZFVzZXIgPSB1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiZ3BsdXM
 6IiArIGdwbHVzVXNlclVpZCkKCiAgICAgICAgICAgICAgICBpZiAoZm91bmRVc2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3
 RlcCAxLiBGYWlsZWQgdG8gZmluZCB1c2VyIgogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDIiC
 iAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImdwbHVzX2NvdW50X2xvZ2luX3N0ZXBzIiwgMikKICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfdXNlcl91aWQiLCBn
 cGx1c1VzZXJVaWQpCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgICAgICAgICBmb3VuZFVzZXJOYW1lID0gZm91bmRVc2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICA
 gICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRVc2VyTmFtZToiLCBmb3VuZFVzZXJOYW1lCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHVzZXJBdX
 RoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQogICAgICAgICAgICAgICAgaWYgKHVzZXJBdXRoZW50aWNhdGVkID09IEZhbHNlKToKI
 CAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVy
 biBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICAgICA
 gICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHBvc3RMb2dpblJlc3VsdCA9IHNlbGYuZXh0ZW5zaW9uUG9zdExvZ2luKGNvbmZpZ3
 VyYXRpb25BdHRyaWJ1dGVzLCBmb3VuZFVzZXIpCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gcG9zdExvZ2luUmVzdWx0OiIsIHBvc3RMb2dpb
 lJlc3VsdAoKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TG9naW5SZXN1bHQKICAgICAgICAgICAgZWxpZiAoZW5yb2xsVXNlckRlcGxveW1lbnQpOgogICAgICAgICAgICAgICAgIyBVc2UgYXV0
 byBlbnJvbGxtZW50IHRvIGxvY2FsIElEUAogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZmluZCB1c2VyIGJ5IG94RXh
 0ZXJuYWxVaWQ6IGdwbHVzOiIsIGdwbHVzVXNlclVpZAogCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZXJlIGlzIHVzZXIgd2l0aCBzcGVjaWZpZWQgZ3BsdXNVc2VyVWlkCiAgICAgICAgIC
 AgICAgICBmb3VuZFVzZXIgPSB1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiZ3BsdXM6IiArIGdwbHVzVXNlclVpZCkKIAogICAgICAgICAgICAgICAgaWYgK
 GZvdW5kVXNlciA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICAjIEF1dG8gdXNlciBlbnJvbGxlbW50CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZv
 ciBzdGVwIDEuIFRoZXJlIGlzIG5vIHVzZXIgaW4gTERBUC4gQWRkaW5nIHVzZXIgdG8gbG9jYWwgTERBUCIKCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZ
 vciBzdGVwIDEuIEF0dGVtcHRpbmcgdG8gZ2V0cyB1c2VyIGluZm8iCiAgICAgICAgICAgICAgICAgICAgdXNlckluZm9SZXNwb25zZSA9IHNlbGYuZ2V0VXNlckluZm8oY3VycmVudENsaWVudFNlY3
 JldHMsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCB0b2tlblJlc3BvbnNlLmdldEFjY2Vzc1Rva2VuKCkpCiAgICAgICAgICAgICAgICAgICAgaWYgKCh1c2VySW5mb1Jlc3BvbnNlID09IE5vbmUpI
 G9yICh1c2VySW5mb1Jlc3BvbnNlLmdldENsYWltcygpLnNpemUoKSA9PSAwKSk6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBG
 YWlsZWQgdG8gZ2V0IHVzZXIgaW5mbyIKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgcHJ
 pbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFN1Y2Nlc3NmdWxseSBnZXRzIHVzZXIgaW5mbyIKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBncGx1c1
 Jlc3BvbnNlQXR0cmlidXRlcyA9IHVzZXJJbmZvUmVzcG9uc2UuZ2V0Q2xhaW1zKCkKIAogICAgICAgICAgICAgICAgICAgICMgQ29udmVydCBHb29nbGUrIHVzZXIgY2xhaW1zIHRvIGxvdmVyIGNhc
 2UKICAgICAgICAgICAgICAgICAgICBncGx1c1Jlc3BvbnNlTm9ybWFsaXplZEF0dHJpYnV0ZXMgPSBIYXNoTWFwKCkKICAgICAgICAgICAgICAgICAgICBmb3IgZ3BsdXNSZXNwb25zZUF0dHJpYnV0
 ZUVudHJ5IGluIGdwbHVzUmVzcG9uc2VBdHRyaWJ1dGVzLmVudHJ5U2V0KCk6CiAgICAgICAgICAgICAgICAgICAgICAgIGdwbHVzUmVzcG9uc2VOb3JtYWxpemVkQXR0cmlidXRlcy5wdXQoCiAgICA
 gICAgICAgICAgICAgICAgICAgICAgICBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UoZ3BsdXNSZXNwb25zZUF0dHJpYnV0ZUVudHJ5LmdldEtleSgpKSwgZ3BsdXNSZXNwb25zZUF0dHJpYnV0ZUVudH
 J5LmdldFZhbHVlKCkpCiAKICAgICAgICAgICAgICAgICAgICBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLmdldEN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZyhzZWxmLmF0dHJpYnV0ZXNNY
 XBwaW5nLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFVz
 aW5nIG5leHQgYXR0cmlidXRlcyBtYXBwaW5nIiwgY3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nCiAKICAgICAgICAgICAgICAgICAgICBuZXdVc2VyID0gVXNlcigpCiAgICAgICAgICAgICAgICAgICA
 gZm9yIGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkgaW4gY3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nLmVudHJ5U2V0KCk6CiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZUF0dHJpYnV0ZSA9IGF0dH
 JpYnV0ZXNNYXBwaW5nRW50cnkuZ2V0S2V5KCkKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGUgPSBhdHRyaWJ1dGVzTWFwcGluZ0VudHJ5LmdldFZhbHVlKCkKIAogICAgICAgI
 CAgICAgICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZVZhbHVlID0gZ3BsdXNSZXNwb25zZU5vcm1hbGl6ZWRBdHRyaWJ1dGVzLmdldChyZW1vdGVBdHRyaWJ1dGUpCiAgICAgICAgICAgICAgICAgICAg
 ICAgIGlmIChsb2NhbEF0dHJpYnV0ZSAhPSBOb25lKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1VzZXIuc2V0QXR0cmlidXRlKGxvY2FsQXR0cmlidXRlLCBsb2NhbEF0dHJpYnV0ZVZ
 hbHVlKQogCiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1VzZXIuZ2V0QXR0cmlidXRlKCJzbiIpID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgICAgICBuZXdVc2VyLnNldEF0dHJpYnV0ZS
 gic24iLCBncGx1c1VzZXJVaWQpCiAKICAgICAgICAgICAgICAgICAgICBpZiAobmV3VXNlci5nZXRBdHRyaWJ1dGUoImNuIikgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1VzZ
 XIuc2V0QXR0cmlidXRlKCJjbiIsIGdwbHVzVXNlclVpZCkKCiAgICAgICAgICAgICAgICAgICAgbmV3VXNlci5zZXRBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAiZ3BsdXM6IiArIGdwbHVzVXNl
 clVpZCkKICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBhZGQgdXNlciIsIGdwbHVzVXNlclVpZCwgIiB3aXRoIG5
 leHQgYXR0cmlidXRlcyIsIG5ld1VzZXIuZ2V0Q3VzdG9tQXR0cmlidXRlcygpCiAKICAgICAgICAgICAgICAgICAgICBmb3VuZFVzZXIgPSB1c2VyU2VydmljZS5hZGRVc2VyKG5ld1VzZXIsIFRydW
 UpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEFkZGVkIG5ldyB1c2VyIHdpdGggVUlEIiwgZm91bmRVc2VyLmdldFVzZXJJZCgpCgogI
 CAgICAgICAgICAgICAgZm91bmRVc2VyTmFtZSA9IGZvdW5kVXNlci5nZXRVc2VySWQoKQogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIGZvdW5k
 VXNlck5hbWU6IiwgZm91bmRVc2VyTmFtZQoKICAgICAgICAgICAgICAgIHVzZXJBdXRoZW50aWNhdGVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZFVzZXJOYW1lKQo
 gICAgICAgICAgICAgICAgaWYgKHVzZXJBdXRoZW50aWNhdGVkID09IEZhbHNlKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbG
 VkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxL
 iBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHBvc3RMb2dpblJl
 c3VsdCA9IHNlbGYuZXh0ZW5zaW9uUG9zdExvZ2luKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBmb3VuZFVzZXIpCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9
 yIHN0ZXAgMS4gcG9zdExvZ2luUmVzdWx0OiIsIHBvc3RMb2dpblJlc3VsdAoKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TG9naW5SZXN1bHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgIC
 AgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXNlciB3aXRoIHNwZWNpZmllZCBncGx1c1VzZXJVaWQKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxL
 iBBdHRlbXB0aW5nIHRvIGZpbmQgdXNlciBieSB1aWQ6IiwgZ3BsdXNVc2VyVWlkCgogICAgICAgICAgICAgICAgZm91bmRVc2VyID0gdXNlclNlcnZpY2UuZ2V0VXNlcihncGx1c1VzZXJVaWQpCiAg
 ICAgICAgICAgICAgICBpZiAoZm91bmRVc2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gZmluZCB
 1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIGZvdW5kVXNlck5hbWUgPSBmb3VuZFVzZXIuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW
 50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBmb3VuZFVzZXJOYW1lOiIsIGZvdW5kVXNlck5hbWUKCiAgICAgICAgICAgICAgICB1c2VyQXV0aGVudGljYXRlZCA9IGF1dGhlbnRpY
 2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRVc2VyTmFtZSkKICAgICAgICAgICAgICAgIGlmICh1c2VyQXV0aGVudGljYXRlZCA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICAgICAgcHJp
 bnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBhdXRoZW50aWNhdGUgdXNlciIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICA
 gICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBzdGVwcyB0byAxIgogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImdwbHVzX2NvdW50X2xvZ2
 luX3N0ZXBzIiwgMSkKCiAgICAgICAgICAgICAgICBwb3N0TG9naW5SZXN1bHQgPSBzZWxmLmV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgZm91bmRVc2VyKQogICAgI
 CAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHBvc3RMb2dpblJlc3VsdDoiLCBwb3N0TG9naW5SZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1cm4gcG9z
 dExvZ2luUmVzdWx0CiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDIiCiAgICAgICAgICAgIAogICAgICAgICA
 gICBzZXNzaW9uQXR0cmlidXRlcyA9IGNvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpCiAgICAgICAgICAgIGlmIChzZXNzaW9uQXR0cmlidXRlcyA9PSBOb25lKSBvciBub3Qgc2Vzc2lvbk
 F0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX3VzZXJfdWlkIik6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZ3BsdXNfdXNlcl91aWQga
 XMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGdwbHVzVXNlclVpZCA9IHNlc3Npb25BdHRyaWJ1dGVzLmdldCgiZ3BsdXNfdXNlcl91aWQiKQogICAgICAg
 ICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhncGx1c1VzZXJVaWQpCiAgICAgICAgICAgIGlmIChub3QgcGFzc2VkX3N0ZXAxKToKICAgICAgICAgICAgICA
 gIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlck5hbWUgPSBjcmVkZW50aWFscy
 5nZXRVc2VybmFtZSgpCiAgICAgICAgICAgIHVzZXJQYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgIGxvZ2dlZEluID0gRmFsc2UKICAgICAgICAgICAgaWYgK
 FN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJOYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlclBhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICBsb2dnZWRJ
 biA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyTmFtZSwgdXNlclBhc3N3b3JkKQoKICAgICAgICAgICAgaWYgKG5vdCBsb2dnZWRJbik6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2U
 KCiAgICAgICAgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXNlciB3aGljaCBoYXMgZ3BsdXNVc2VyVWlkCiAgICAgICAgICAgICMgQXZvaWQgbWFwcGluZyBHb29nbGUgYWNjb3VudCB0byBtb3JlIH
 RoYW4gb25lIElEUCBhY2NvdW50CiAgICAgICAgICAgIGZvdW5kVXNlciA9IHVzZXJTZXJ2aWNlLmdldFVzZXJCeUF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsICJncGx1czoiICsgZ3BsdXNVc2VyV
 WlkKQoKICAgICAgICAgICAgaWYgKGZvdW5kVXNlciA9PSBOb25lKToKICAgICAgICAgICAgICAgICMgQWRkIGdwbHVzVXNlclVpZCB0byB1c2VyIG9uZSBpZCBVSURzCiAgICAgICAgICAgICAgICBm
 b3VuZFVzZXIgPSB1c2VyU2VydmljZS5hZGRVc2VyQXR0cmlidXRlKHVzZXJOYW1lLCAib3hFeHRlcm5hbFVpZCIsICJncGx1czoiICsgZ3BsdXNVc2VyVWlkKQogICAgICAgICAgICAgICAgaWYgKGZ
 vdW5kVXNlciA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIHVwZGF0ZSBjdXJyZW50IHVzZXIiCiAgIC
 AgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcG9zdExvZ2luUmVzdWx0ID0gc2VsZi5leHRlbnNpb25Qb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsI
 GZvdW5kVXNlcikKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBwb3N0TG9naW5SZXN1bHQ6IiwgcG9zdExvZ2luUmVzdWx0CgogICAgICAgICAg
 ICAgICAgcmV0dXJuIHBvc3RMb2dpblJlc3VsdAogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZm91bmRVc2VyTmFtZSA9IGZvdW5kVXNlci5nZXRVc2VySWQoKQogICAgICAgICAgICA
 gICAgcHJpbnQgIkdvb2dsZSsgQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIGZvdW5kVXNlck5hbWU6IiwgZm91bmRVc2VyTmFtZQogICAgCiAgICAgICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZX
 F1YWxzKHVzZXJOYW1lLCBmb3VuZFVzZXJOYW1lKToKICAgICAgICAgICAgICAgICAgICBwb3N0TG9naW5SZXN1bHQgPSBzZWxmLmV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlid
 XRlcywgZm91bmRVc2VyKQogICAgICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBwb3N0TG9naW5SZXN1bHQ6IiwgcG9zdExvZ2luUmVzdWx0CiAg
 ICAKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9zdExvZ2luUmVzdWx0CiAgICAgICAgCiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiB
 GYWxzZQoKICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy
 5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShBdXRoZW50aWNhdGlvblNlcnZpY2UpCgogICAgICAgIGlmIChzdGVwI
 D09IDEpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQcmVwYXJlIGZvciBzdGVwIDEiCiAgICAgICAgICAgIAogICAgICAgICAgICBjdXJyZW50Q2xpZW50U2VjcmV0cyA9IHNlbGYuZ2V0Q3Vy
 cmVudENsaWVudFNlY3JldHMoc2VsZi5jbGllbnRTZWNyZXRzLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpCiAgICAgICAgICAgIGlmIChjdXJyZW50Q2xpZW50U2V
 jcmV0cyA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIFByZXBhcmUgZm9yIHN0ZXAgMS4gR29vZ2xlKyBjbGllbnQgY29uZmlndXJhdGlvbiBpcyBpbnZhbGlkIgogICAgIC
 AgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgiZ3BsdXNfY2xpZW50X2lkIiwgY3VycmVudENsaWVudFNlY3JldHNbIndlYiJdWyJjbGllb
 nRfaWQiXSkKICAgICAgICAgICAgY29udGV4dC5zZXQoImdwbHVzX2NsaWVudF9zZWNyZXQiLCBjdXJyZW50Q2xpZW50U2VjcmV0c1sid2ViIl1bImNsaWVudF9zZWNyZXQiXSkKCiAgICAgICAgICAg
 IHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgUHJlcGFyZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICA
 gICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgZ2V0RXh0cmFQYXJhbWV0ZXJzRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgIC
 AgICAgaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJncGx1c191c2VyX3VpZCIpCgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldENvdW50QXV0a
 GVudGljYXRpb25TdGVwcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgaWYgKGNvbnRleHQu
 aXNTZXQoImdwbHVzX2NvdW50X2xvZ2luX3N0ZXBzIikpOgogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoImdwbHVzX2NvdW50X2xvZ2luX3N0ZXBzIikKICAgICAgICAKICAgICAgICByZXR
 1cm4gMgoKICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6CiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHJldHVybiAiL2
 F1dGgvZ3BsdXMvZ3BsdXNsb2dpbi54aHRtbCIKCiAgICAgICAgcmV0dXJuICIvYXV0aC9ncGx1cy9ncGx1c3Bvc3Rsb2dpbi54aHRtbCIKCiAgICBkZWYgbG9nb3V0KHNlbGYsIGNvbmZpZ3VyYXRpb
 25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgIyBUT0RPIFJldm9rZSB0b2tlbgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGxvYWRDbGllbnRTZWNyZXRzKHNlbGYs
 IGNsaWVudFNlY3JldHNGaWxlKToKICAgICAgICBjbGllbnRTZWNyZXRzID0gTm9uZQoKICAgICAgICAjIExvYWQgY2VydGlmaWNhdGUgZnJvbSBmaWxlCiAgICAgICAgZiA9IG9wZW4oY2xpZW50U2V
 jcmV0c0ZpbGUsICdyJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNsaWVudFNlY3JldHMgPSBqc29uLmxvYWRzKGYucmVhZCgpKQogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgcHJpbnQgIk
 ZhaWxlZCB0byBsb2FkIEdvb2dsZSsgY2xpZW50IHNlY3JldHMgZnJvbSBmaWxlOiIsIGNsaWVudFNlY3JldHMKICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgICAgICBmaW5hbGx5OgogICAgICAgI
 CAgICBmLmNsb3NlKCkKICAgICAgICAKICAgICAgICByZXR1cm4gY2xpZW50U2VjcmV0cwoKICAgIGRlZiBnZXRDbGllbnRDb25maWd1cmF0aW9uKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVz
 LCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgIyBHZXQgY2xpZW50IGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoImdwbHVzX2N
 saWVudF9jb25maWd1cmF0aW9uX2F0dHJpYnV0ZSIpKToKICAgICAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvbkF0dHJpYnV0ZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZ3BsdXNfY2
 xpZW50X2NvbmZpZ3VyYXRpb25fYXR0cmlidXRlIikuZ2V0VmFsdWUyKCkKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gVXNpbmcgY2xpZW50IGF0dHJpY
 nV0ZToiLCBjbGllbnRDb25maWd1cmF0aW9uQXR0cmlidXRlCgogICAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtZXRlcnMgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQoKICAg
 ICAgICAgICAgY2xpZW50SWQgPSBOb25lCiAgICAgICAgICAgIAogICAgICAgICAgICAjIEF0dGVtcHQgdG8gZGV0ZXJtaW5lIGNsaWVudF9pZCBmcm9tIHJlcXVlc3QKICAgICAgICAgICAgY2xpZW5
 0SWRBcnJheSA9IHJlcXVlc3RQYXJhbWV0ZXJzLmdldCgiY2xpZW50X2lkIikKICAgICAgICAgICAgaWYgKEFycmF5SGVscGVyLmlzTm90RW1wdHkoY2xpZW50SWRBcnJheSkgYW5kIFN0cmluZ0hlbH
 Blci5pc05vdEVtcHR5U3RyaW5nKGNsaWVudElkQXJyYXlbMF0pKToKICAgICAgICAgICAgICAgIGNsaWVudElkID0gY2xpZW50SWRBcnJheVswXQoKICAgICAgICAgICAgIyBBdHRlbXB0IHRvIGRld
 GVybWluZSBjbGllbnRfaWQgZnJvbSBldmVudCBjb250ZXh0CiAgICAgICAgICAgIGlmIChjbGllbnRJZCA9PSBOb25lKToKICAgICAgICAgICAgICAgIGV2ZW50Q29udGV4dCA9IENvbnRleHRzLmdl
 dEV2ZW50Q29udGV4dCgpCiAgICAgICAgICAgICAgICBpZiAoZXZlbnRDb250ZXh0LmlzU2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpKToKICAgICAgICAgICAgICAgICAgICBjbGllbnRJZCA9IGV2ZW5
 0Q29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikuZ2V0KCJjbGllbnRfaWQiKQoKICAgICAgICAgICAgaWYgKGNsaWVudElkID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIkdvb2
 dsZSsgR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gY2xpZW50X2lkIGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgICAgIGNsaWVudFNlcnZpY2UgPSBDb21wb25lb
 nQuZ2V0SW5zdGFuY2UoQ2xpZW50U2VydmljZSkKICAgICAgICAgICAgY2xpZW50ID0gY2xpZW50U2VydmljZS5nZXRDbGllbnQoY2xpZW50SWQpCiAgICAgICAgICAgIGlmIChjbGllbnQgPT0gTm9u
 ZSk6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBHZXRDbGllbnRDb25maWd1cmF0aW9uLiBGYWlsZWQgdG8gZmluZCBjbGllbnQiLCBjbGllbnRJZCwgIiBpbiBsb2NhbCBMREFQIgogICA
 gICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgICAgIGNsaWVudENvbmZpZ3VyYXRpb24gPSBjbGllbnRTZXJ2aWNlLmdldEN1c3RvbUF0dHJpYnV0ZShjbGllbnQsIGNsaWVudENvbmZpZ3
 VyYXRpb25BdHRyaWJ1dGUpCiAgICAgICAgICAgIGlmICgoY2xpZW50Q29uZmlndXJhdGlvbiA9PSBOb25lKSBvciBTdHJpbmdIZWxwZXIuaXNFbXB0eShjbGllbnRDb25maWd1cmF0aW9uLmdldFZhb
 HVlKCkpKToKICAgICAgICAgICAgICAgIHByaW50ICJHb29nbGUrIEdldENsaWVudENvbmZpZ3VyYXRpb24uIENsaWVudCIsIGNsaWVudElkLCAiIGF0dHJpYnV0ZSIsIGNsaWVudENvbmZpZ3VyYXRp
 b25BdHRyaWJ1dGUsICIgaXMgZW1wdHkiCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBHZXRDbGllbnRDb25maWd1cmF0aW9uLiBDbGllbnQiLCBjbGllbnR
 JZCwgIiBhdHRyaWJ1dGUiLCBjbGllbnRDb25maWd1cmF0aW9uQXR0cmlidXRlLCAiIGlzIiwgY2xpZW50Q29uZmlndXJhdGlvbgogICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudENvbmZpZ3VyYX
 Rpb24KCiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgZ2V0Q3VycmVudENsaWVudFNlY3JldHMoc2VsZiwgY3VycmVudENsaWVudFNlY3JldHMsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZ
 XF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q2xpZW50Q29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFt
 ZXRlcnMpCiAgICAgICAgaWYgKGNsaWVudENvbmZpZ3VyYXRpb24gPT0gTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBjdXJyZW50Q2xpZW50U2VjcmV0cwogICAgICAgIAogICAgICAgIGNsaWVudEN
 vbmZpZ3VyYXRpb25WYWx1ZSA9IGpzb24ubG9hZHMoY2xpZW50Q29uZmlndXJhdGlvbi5nZXRWYWx1ZSgpKQoKICAgICAgICByZXR1cm4gY2xpZW50Q29uZmlndXJhdGlvblZhbHVlWyJncGx1cyJdCg
 ogICAgZGVmIGdldEN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZyhzZWxmLCBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6C
 iAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q2xpZW50Q29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpCiAgICAgICAgaWYg
 KGNsaWVudENvbmZpZ3VyYXRpb24gPT0gTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcKCiAgICAgICAgY2xpZW50Q29uZmlndXJhdGlvblZhbHVlID0ganN
 vbi5sb2FkcyhjbGllbnRDb25maWd1cmF0aW9uLmdldFZhbHVlKCkpCgogICAgICAgIGNsaWVudEF0dHJpYnV0ZXNNYXBwaW5nID0gc2VsZi5wcmVwYXJlQXR0cmlidXRlc01hcHBpbmcoY2xpZW50Q2
 9uZmlndXJhdGlvblZhbHVlWyJncGx1c19yZW1vdGVfYXR0cmlidXRlc19saXN0Il0sIGNsaWVudENvbmZpZ3VyYXRpb25WYWx1ZVsiZ3BsdXNfbG9jYWxfYXR0cmlidXRlc19saXN0Il0pCiAgICAgI
 CAgaWYgKGNsaWVudEF0dHJpYnV0ZXNNYXBwaW5nID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBHZXRDdXJyZW50QXR0cmlidXRlc01hcHBpbmcuIENsaWVudCBhdHRyaWJ1dGVz
 IG1hcHBpbmcgaXMgaW52YWxpZC4gVXNpbmcgZGVmYXVsdCBvbmUiCiAgICAgICAgICAgIHJldHVybiBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcKCiAgICAgICAgcmV0dXJuIGNsaWVudEF0dHJpYnV
 0ZXNNYXBwaW5nCgogICAgZGVmIHByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZyhzZWxmLCByZW1vdGVBdHRyaWJ1dGVzTGlzdCwgbG9jYWxBdHRyaWJ1dGVzTGlzdCk6CiAgICAgICAgcmVtb3RlQXR0cm
 lidXRlc0xpc3RBcnJheSA9IFN0cmluZ0hlbHBlci5zcGxpdChyZW1vdGVBdHRyaWJ1dGVzTGlzdCwgIiwiKQogICAgICAgIGlmIChBcnJheUhlbHBlci5pc0VtcHR5KHJlbW90ZUF0dHJpYnV0ZXNMa
 XN0QXJyYXkpKToKICAgICAgICAgICAgcHJpbnQgIkdvb2dsZSsgUHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nLiBUaGVyZSBpcyBubyBhdHRyaWJ1dGVzIHNwZWNpZmllZCBpbiByZW1vdGVBdHRyaWJ1
 dGVzTGlzdCBwcm9wZXJ0eSIKICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgICAgICAKICAgICAgICBsb2NhbEF0dHJpYnV0ZXNMaXN0QXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQobG9jYWxBdHR
 yaWJ1dGVzTGlzdCwgIiwiKQogICAgICAgIGlmIChBcnJheUhlbHBlci5pc0VtcHR5KGxvY2FsQXR0cmlidXRlc0xpc3RBcnJheSkpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQcmVwYXJlQX
 R0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgc3BlY2lmaWVkIGluIGxvY2FsQXR0cmlidXRlc0xpc3QgcHJvcGVydHkiCiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgI
 CAgIGlmIChsZW4ocmVtb3RlQXR0cmlidXRlc0xpc3RBcnJheSkgIT0gbGVuKGxvY2FsQXR0cmlidXRlc0xpc3RBcnJheSkpOgogICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQcmVwYXJlQXR0cmli
 dXRlc01hcHBpbmcuIFRoZSBudW1iZXIgb2YgYXR0cmlidXRlcyBpbiByZW1vdGVBdHRyaWJ1dGVzTGlzdCBhbmQgbG9jYWxBdHRyaWJ1dGVzTGlzdCBpc24ndCBlcXVhbCIKICAgICAgICAgICAgcmV
 0dXJuIE5vbmUKICAgICAgICAKICAgICAgICBhdHRyaWJ1dGVNYXBwaW5nID0gSWRlbnRpdHlIYXNoTWFwKCkKICAgICAgICBjb250YWluc1VpZCA9IEZhbHNlCiAgICAgICAgaSA9IDAKICAgICAgIC
 Bjb3VudCA9IGxlbihyZW1vdGVBdHRyaWJ1dGVzTGlzdEFycmF5KQogICAgICAgIHdoaWxlIChpIDwgY291bnQpOgogICAgICAgICAgICByZW1vdGVBdHRyaWJ1dGUgPSBTdHJpbmdIZWxwZXIudG9Mb
 3dlckNhc2UocmVtb3RlQXR0cmlidXRlc0xpc3RBcnJheVtpXSkKICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGUgPSBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UobG9jYWxBdHRyaWJ1dGVzTGlzdEFy
 cmF5W2ldKQogICAgICAgICAgICBhdHRyaWJ1dGVNYXBwaW5nLnB1dChyZW1vdGVBdHRyaWJ1dGUsIGxvY2FsQXR0cmlidXRlKQoKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25
 vcmVDYXNlKGxvY2FsQXR0cmlidXRlLCAidWlkIikpOgogICAgICAgICAgICAgICAgY29udGFpbnNVaWQgPSBUcnVlCgogICAgICAgICAgICBpID0gaSArIDEKCiAgICAgICAgaWYgKG5vdCBjb250YW
 luc1VpZCk6CiAgICAgICAgICAgIHByaW50ICJHb29nbGUrIFByZXBhcmVBdHRyaWJ1dGVzTWFwcGluZy4gVGhlcmUgaXMgbm8gbWFwcGluZyB0byBtYW5kYXRvcnkgJ3VpZCcgYXR0cmlidXRlIgogI
 CAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIAogICAgICAgIHJldHVybiBhdHRyaWJ1dGVNYXBwaW5nCgogICAgZGVmIGdldFRva2Vuc0J5Q29kZShzZWxmLCBjdXJyZW50Q2xpZW50U2VjcmV0
 cywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGNvZGUpOgogICAgICAgIHRva2VuUmVxdWVzdCA9IFRva2VuUmVxdWVzdChHcmFudFR5cGUuQ0xJRU5UX0NSRURFTlRJQUxTKQogICAgICAgIHRva2V
 uUmVxdWVzdC5zZXRBdXRoZW50aWNhdGlvbk1ldGhvZChBdXRoZW50aWNhdGlvbk1ldGhvZC5DTElFTlRfU0VDUkVUX1BPU1QpCiAgICAgICAgdG9rZW5SZXF1ZXN0LnNldENvZGUoY29kZSkKICAgIC
 AgICB0b2tlblJlcXVlc3Quc2V0QXV0aFVzZXJuYW1lKGN1cnJlbnRDbGllbnRTZWNyZXRzWyJ3ZWIiXVsiY2xpZW50X2lkIl0pCiAgICAgICAgdG9rZW5SZXF1ZXN0LnNldEF1dGhQYXNzd29yZChjd
 XJyZW50Q2xpZW50U2VjcmV0c1sid2ViIl1bImNsaWVudF9zZWNyZXQiXSkKICAgICAgICB0b2tlblJlcXVlc3Quc2V0UmVkaXJlY3RVcmkoInBvc3RtZXNzYWdlIikKICAgICAgICB0b2tlblJlcXVl
 c3Quc2V0R3JhbnRUeXBlKEdyYW50VHlwZS5BVVRIT1JJWkFUSU9OX0NPREUpCgogICAgICAgIHRva2VuQ2xpZW50ID0gVG9rZW5DbGllbnQoY3VycmVudENsaWVudFNlY3JldHNbIndlYiJdWyJ0b2t
 lbl91cmkiXSkKICAgICAgICB0b2tlbkNsaWVudC5zZXRSZXF1ZXN0KHRva2VuUmVxdWVzdCkKICAgICAgICAKICAgICAgICB0b2tlblJlc3BvbnNlID0gdG9rZW5DbGllbnQuZXhlYygpCiAgICAgIC
 AgaWYgKCh0b2tlblJlc3BvbnNlID09IE5vbmUpIG9yICh0b2tlblJlc3BvbnNlLmdldFN0YXR1cygpICE9IDIwMCkpOgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICByZXR1cm4gdG9rZ
 W5SZXNwb25zZQoKICAgIGRlZiBnZXRVc2VySW5mbyhzZWxmLCBjdXJyZW50Q2xpZW50U2VjcmV0cywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGFjY2Vzc1Rva2VuKToKICAgICAgICB1c2VySW5m
 b0NsaWVudCA9IFVzZXJJbmZvQ2xpZW50KCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9wbHVzL3YxL3Blb3BsZS9tZS9vcGVuSWRDb25uZWN0IikKCiAgICAgICAgdXNlckluZm9SZXNwb25zZSA
 9IHVzZXJJbmZvQ2xpZW50LmV4ZWNVc2VySW5mbyhhY2Nlc3NUb2tlbikKICAgICAgICBpZiAoKHVzZXJJbmZvUmVzcG9uc2UgPT0gTm9uZSkgb3IgKHVzZXJJbmZvUmVzcG9uc2UuZ2V0U3RhdHVzKC
 kgIT0gMjAwKSk6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgIHJldHVybiB1c2VySW5mb1Jlc3BvbnNlCgogICAgZGVmIGV4dGVuc2lvblBvc3RMb2dpbihzZWxmLCBjb25maWd1cmF0a
 W9uQXR0cmlidXRlcywgdXNlcik6CiAgICAgICAgaWYgKHNlbGYuZXh0ZW5zaW9uTW9kdWxlICE9IE5vbmUpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBwb3N0TG9naW5SZXN1bHQg
 PSBzZWxmLmV4dGVuc2lvbk1vZHVsZS5wb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHVzZXIpCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQb3N0TG9naW4gcmVzdWx0OiI
 sIHBvc3RMb2dpblJlc3VsdAoKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TG9naW5SZXN1bHQKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiwgZXg6CiAgICAgICAgICAgICAgICBwcmludC
 AiR29vZ2xlKyBQb3N0TG9naW4uIEZhaWxlZCB0byBleGVjdXRlIHBvc3RMb2dpbiBtZXRob2QiCiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQb3N0TG9naW4uIFVuZXhwZWN0ZWQgZXJyb
 3I6IiwgZXgKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBleGNlcHQgamF2YS5sYW5nLlRocm93YWJsZSwgZXg6CiAgICAgICAgICAgICAgICBwcmludCAiR29vZ2xlKyBQ
 b3N0TG9naW4uIEZhaWxlZCB0byBleGVjdXRlIHBvc3RMb2dpbiBtZXRob2QiCiAgICAgICAgICAgICAgICBleC5wcmludFN0YWNrVHJhY2UoKSAKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQo
 gICAgICAgICAgICAgICAgICAgIAogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!8BAF.80D6,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Fido U2F authentication module
displayName: u2f
gluuStatus: false
inum: %(inumOrg)s!0011!8BAF.80D6
oxConfigurationProperty: {"value1":"u2f_application_id","value2":"https://%(hostname)s","description":""}
oxConfigurationProperty: {"value1":"u2f_server_uri","value2":"https://%(hostname)s","description":""}
oxLevel: 10
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25B
 dXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnR
 pdHkKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlLCBTZXNzaW9uU3RhdGVTZXJ2aWNlCmZyb20gb3JnLnhkaS51dGlsIG
 ltcG9ydCBTdHJpbmdIZWxwZXIKZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IEFycmF5SGVscGVyCmZyb20gb3JnLnhkaS5veGF1dGguY2xpZW50LmZpZG8udTJmIGltcG9ydCBGaWRvVTJmQ2xpZW50R
 mFjdG9yeQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UuZmlkby51MmYgaW1wb3J0IERldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UKZnJvbSBvcmcueGRpLm94YXV0aC51dGlsIGltcG9ydCBTZXJ2
 ZXJVdGlsCmZyb20gb3JnLnhkaS5veGF1dGgubW9kZWwuY29uZmlnIGltcG9ydCBDb25zdGFudHMKZnJvbSBvcmcuamJvc3MucmVzdGVhc3kuY2xpZW50IGltcG9ydCBDbGllbnRSZXNwb25zZUZhaWx
 1cmUKZnJvbSBvcmcuamJvc3MucmVzdGVhc3kuY2xpZW50LmV4Y2VwdGlvbiBpbXBvcnQgUmVzdGVhc3lDbGllbnRFeGNlcHRpb24KZnJvbSBqYXZheC53cy5ycy5jb3JlIGltcG9ydCBSZXNwb25zZQ
 pmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzCgppbXBvcnQgc3lzCmltcG9ydCBqYXZhCgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZ
 GVmIF9faW5pdF9fKHNlbGYsIGN1cnJlbnRUaW1lTWlsbGlzKToKICAgICAgICBzZWxmLmN1cnJlbnRUaW1lTWlsbGlzID0gY3VycmVudFRpbWVNaWxsaXMKCiAgICBkZWYgaW5pdChzZWxmLCBjb25m
 aWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIlUyRi4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIHByaW50ICJVMkYuIEluaXRpYWxpemF0aW9uLiBEb3dubG9hZGluZyBVMkYgbWV
 0YWRhdGEiCiAgICAgICAgdTJmX3NlcnZlcl91cmkgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInUyZl9zZXJ2ZXJfdXJpIikuZ2V0VmFsdWUyKCkKICAgICAgICB1MmZfc2VydmVyX21ldG
 FkYXRhX3VyaSA9IHUyZl9zZXJ2ZXJfdXJpICsgIi8ud2VsbC1rbm93bi9maWRvLXUyZi1jb25maWd1cmF0aW9uIgoKICAgICAgICBtZXRhRGF0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlID0gRmlkb1UyZ
 kNsaWVudEZhY3RvcnkuaW5zdGFuY2UoKS5jcmVhdGVNZXRhRGF0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlKHUyZl9zZXJ2ZXJfbWV0YWRhdGFfdXJpKQoKICAgICAgICBtYXhfYXR0ZW1wdHMgPSA1CiAg
 ICAgICAgZm9yIGF0dGVtcHQgaW4gcmFuZ2UoMSwgbWF4X2F0dGVtcHRzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5tZXRhRGF0YUNvbmZpZ3VyYXRpb24gPSBtZXRhRGF
 0YUNvbmZpZ3VyYXRpb25TZXJ2aWNlLmdldE1ldGFkYXRhQ29uZmlndXJhdGlvbigpCiAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBleGNlcHQgQ2xpZW50UmVzcG9uc2VGYWlsdXJlLC
 BleDoKICAgICAgICAgICAgICAgICMgRGV0ZWN0IGlmIGxhc3QgdHJ5IG9yIHdlIHN0aWxsIGdldCBTZXJ2aWNlIFVuYXZhaWxhYmxlIEhUVFAgZXJyb3IKICAgICAgICAgICAgICAgIGlmIChhdHRlb
 XB0ID09IG1heF9hdHRlbXB0cykgb3IgKGV4LmdldFJlc3BvbnNlKCkuZ2V0UmVzcG9uc2VTdGF0dXMoKSAhPSBSZXNwb25zZS5TdGF0dXMuU0VSVklDRV9VTkFWQUlMQUJMRSk6CiAgICAgICAgICAg
 ICAgICAgICAgcmFpc2UgZXgKCiAgICAgICAgICAgICAgICBqYXZhLmxhbmcuVGhyZWFkLnNsZWVwKDMwMDApCiAgICAgICAgICAgICAgICBwcmludCAiQXR0ZW1wdGluZyB0byBsb2FkIG1ldGFkYXR
 hOiAlZCIgJSBhdHRlbXB0CiAgICAgICAgICAgIGV4Y2VwdCBSZXN0ZWFzeUNsaWVudEV4Y2VwdGlvbiwgZXg6CiAgICAgICAgICAgICAgICAjIERldGVjdCBpZiBsYXN0IHRyeSBvciB3ZSBzdGlsbC
 BnZXQgU2VydmljZSBVbmF2YWlsYWJsZSBIVFRQIGVycm9yCiAgICAgICAgICAgICAgICBpZiBhdHRlbXB0ID09IG1heF9hdHRlbXB0czoKICAgICAgICAgICAgICAgICAgICByYWlzZSBleAoKICAgI
 CAgICAgICAgICAgIGphdmEubGFuZy5UaHJlYWQuc2xlZXAoMzAwMCkKICAgICAgICAgICAgICAgIHByaW50ICJBdHRlbXB0aW5nIHRvIGxvYWQgbWV0YWRhdGE6ICVkIiAlIGF0dGVtcHQKICAgICAg
 ICAKICAgICAgICBwcmludCAiVTJGLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cml
 idXRlcyk6CiAgICAgICAgcHJpbnQgIlUyRi4gRGVzdHJveSIKICAgICAgICBwcmludCAiVTJGLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldE
 FwaVZlcnNpb24oc2VsZik6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpO
 gogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAg
 ICAgcmV0dXJuIE5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY3JlZGVudGlhbHM
 gPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICB1c2VyX25hbWUgPSBjcmVkZW50aWFscy5nZXRVc2VybmFtZSgpCgogICAgICAgIGlmIChzdGVwID09IDEpOgogIC
 AgICAgICAgICBwcmludCAiVTJGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKCiAgICAgICAgICAgIHVzZXJfcGFzc3dvcmQgPSBjcmVkZW50aWFscy5nZXRQYXNzd29yZCgpCiAgICAgICAgICAgI
 GxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2Vy
 X3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICB1c2VyU2VydmljZSA9IFVzZXJTZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgICAgIGxvZ2dlZF9pbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnR
 pY2F0ZSh1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQpCgogICAgICAgICAgICBpZiAobm90IGxvZ2dlZF9pbik6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIHJldHVybi
 BUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIlUyRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIiCgogICAgICAgICAgICB0b2tlbl9yZXNwb25zZSA9IFNlc
 nZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgInRva2VuUmVzcG9uc2UiKQogICAgICAgICAgICBpZiB0b2tlbl9yZXNwb25zZSA9PSBOb25lOgogICAgICAgICAgICAgICAg
 cHJpbnQgIlUyRi4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIHRva2VuUmVzcG9uc2UgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGF1dGhfbWV0aG9
 kID0gU2VydmVyVXRpbC5nZXRGaXJzdFZhbHVlKHJlcXVlc3RQYXJhbWV0ZXJzLCAiYXV0aE1ldGhvZCIpCiAgICAgICAgICAgIGlmIGF1dGhfbWV0aG9kID09IE5vbmU6CiAgICAgICAgICAgICAgIC
 BwcmludCAiVTJGLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gYXV0aE1ldGhvZCBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb
 25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAg
 ICAgICAgIGlmICh1c2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSIKICAgICAgICA
 gICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgKGF1dGhfbWV0aG9kID09ICdhdXRoZW50aWNhdGUnKToKICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIFByZXBhcmUgZm9yIHN0ZX
 AgMi4gQ2FsbCBGSURPIFUyRiBpbiBvcmRlciB0byBmaW5pc2ggYXV0aGVudGljYXRpb24gd29ya2Zsb3ciCiAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlID0gRmlkb
 1UyZkNsaWVudEZhY3RvcnkuaW5zdGFuY2UoKS5jcmVhdGVBdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlKHNlbGYubWV0YURhdGFDb25maWd1cmF0aW9uKQogICAgICAgICAgICAgICAgYXV0aGVu
 dGljYXRpb25TdGF0dXMgPSBhdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlLmZpbmlzaEF1dGhlbnRpY2F0aW9uKHVzZXIuZ2V0VXNlcklkKCksIHRva2VuX3Jlc3BvbnNlKQoKICAgICAgICAgICA
 gICAgIGlmIChhdXRoZW50aWNhdGlvblN0YXR1cy5nZXRTdGF0dXMoKSAhPSBDb25zdGFudHMuUkVTVUxUX1NVQ0NFU1MpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIEF1dGhlbnRpY2
 F0ZSBmb3Igc3RlcCAyLiBHZXQgaW52YWxpZCBhdXRoZW50aWNhdGlvbiBzdGF0dXMgZnJvbSBGSURPIFUyRiBzZXJ2ZXIiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgI
 CAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICAgICAgZWxpZiAoYXV0aF9tZXRob2QgPT0gJ2Vucm9sbCcpOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBD
 YWxsIEZJRE8gVTJGIGluIG9yZGVyIHRvIGZpbmlzaCByZWdpc3RyYXRpb24gd29ya2Zsb3ciCiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25SZXF1ZXN0U2VydmljZSA9IEZpZG9VMmZDbGllbnR
 GYWN0b3J5Lmluc3RhbmNlKCkuY3JlYXRlUmVnaXN0cmF0aW9uUmVxdWVzdFNlcnZpY2Uoc2VsZi5tZXRhRGF0YUNvbmZpZ3VyYXRpb24pCiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25TdGF0dX
 MgPSByZWdpc3RyYXRpb25SZXF1ZXN0U2VydmljZS5maW5pc2hSZWdpc3RyYXRpb24odXNlci5nZXRVc2VySWQoKSwgdG9rZW5fcmVzcG9uc2UpCgogICAgICAgICAgICAgICAgaWYgKHJlZ2lzdHJhd
 GlvblN0YXR1cy5nZXRTdGF0dXMoKSAhPSBDb25zdGFudHMuUkVTVUxUX1NVQ0NFU1MpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJVMkYuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBHZXQg
 aW52YWxpZCByZWdpc3RyYXRpb24gc3RhdHVzIGZyb20gRklETyBVMkYgc2VydmVyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiA
 gICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBQcmVwYXJlIGZvciBzdGVwIDIuIEF1dGhlbnRpY2F0aW9kIG1ldGhvZCBpcyBpbnZhbGlkIgogICAgICAgICAgICAgIC
 AgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZ
 mlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkKCiAgICAgICAgaWYgKHN0ZXAgPT0g
 MSk6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2V
 zc2lvbl9zdGF0ZSA9IFNlc3Npb25TdGF0ZVNlcnZpY2UuaW5zdGFuY2UoKS5nZXRTZXNzaW9uU3RhdGVGcm9tQ29va2llKCkKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkoc2Vzc2
 lvbl9zdGF0ZSk6CiAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmUgc2Vzc2lvbl9zdGF0ZSIKICAgICAgICAgICAgICAgIHJld
 HVybiBGYWxzZQoKICAgICAgICAgICAgYXV0aGVudGljYXRpb25TZXJ2aWNlID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKICAgICAgICAgICAgdXNlciA9IGF1dGhlbnRpY2F0aW9u
 U2VydmljZS5nZXRBdXRoZW50aWNhdGVkVXNlcigpCiAgICAgICAgICAgIGlmICh1c2VyID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWl
 sZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgdTJmX2FwcGxpY2F0aW9uX2lkID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZX
 MuZ2V0KCJ1MmZfYXBwbGljYXRpb25faWQiKS5nZXRWYWx1ZTIoKQoKICAgICAgICAgICAgIyBDaGVjayBpZiB1c2VyIGhhdmUgcmVnaXN0ZXJlZCBkZXZpY2VzCiAgICAgICAgICAgIGRldmljZVJlZ
 2lzdHJhdGlvblNlcnZpY2UgPSBEZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmluc3RhbmNlKCkKCiAgICAgICAgICAgIHVzZXJJbnVtID0gdXNlci5nZXRBdHRyaWJ1dGUoImludW0iKQoKICAgICAg
 ICAgICAgcmVnaXN0cmF0aW9uUmVxdWVzdCA9IE5vbmUKICAgICAgICAgICAgYXV0aGVudGljYXRpb25SZXF1ZXN0ID0gTm9uZQoKICAgICAgICAgICAgZGV2aWNlUmVnaXN0cmF0aW9ucyA9IGRldml
 jZVJlZ2lzdHJhdGlvblNlcnZpY2UuZmluZFVzZXJEZXZpY2VSZWdpc3RyYXRpb25zKHVzZXJJbnVtLCB1MmZfYXBwbGljYXRpb25faWQpCiAgICAgICAgICAgIGlmIChkZXZpY2VSZWdpc3RyYXRpb2
 5zLnNpemUoKSA+IDApOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4gUHJlcGFyZSBmb3Igc3RlcCAyLiBDYWxsIEZJRE8gVTJGIGluIG9yZGVyIHRvIHN0YXJ0IGF1dGhlbnRpY2F0aW9uIHdvc
 mtmbG93IgoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlID0gRmlkb1UyZkNsaWVudEZhY3RvcnkuaW5zdGFuY2UoKS5j
 cmVhdGVBdXRoZW50aWNhdGlvblJlcXVlc3RTZXJ2aWNlKHNlbGYubWV0YURhdGFDb25maWd1cmF0aW9uKQogICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uUmVxdWVzdCA9IGF1dGhlbnR
 pY2F0aW9uUmVxdWVzdFNlcnZpY2Uuc3RhcnRBdXRoZW50aWNhdGlvbih1c2VyLmdldFVzZXJJZCgpLCBOb25lLCB1MmZfYXBwbGljYXRpb25faWQsIHNlc3Npb25fc3RhdGUpCiAgICAgICAgICAgIC
 AgICBleGNlcHQgQ2xpZW50UmVzcG9uc2VGYWlsdXJlLCBleDoKICAgICAgICAgICAgICAgICAgICBpZiAoZXguZ2V0UmVzcG9uc2UoKS5nZXRSZXNwb25zZVN0YXR1cygpICE9IFJlc3BvbnNlLlN0Y
 XR1cy5OT1RfRk9VTkQpOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiVTJGLiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBzdGFydCBhdXRoZW50aWNhdGlvbiB3b3JrZmxvdy4g
 RXhjZXB0aW9uOiIsIHN5cy5leGNfaW5mbygpWzFdCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQgIlUyRi4
 gUHJlcGFyZSBmb3Igc3RlcCAyLiBDYWxsIEZJRE8gVTJGIGluIG9yZGVyIHRvIHN0YXJ0IHJlZ2lzdHJhdGlvbiB3b3JrZmxvdyIKICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvblJlcXVlc3RTZX
 J2aWNlID0gRmlkb1UyZkNsaWVudEZhY3RvcnkuaW5zdGFuY2UoKS5jcmVhdGVSZWdpc3RyYXRpb25SZXF1ZXN0U2VydmljZShzZWxmLm1ldGFEYXRhQ29uZmlndXJhdGlvbikKICAgICAgICAgICAgI
 CAgIHJlZ2lzdHJhdGlvblJlcXVlc3QgPSByZWdpc3RyYXRpb25SZXF1ZXN0U2VydmljZS5zdGFydFJlZ2lzdHJhdGlvbih1c2VyLmdldFVzZXJJZCgpLCB1MmZfYXBwbGljYXRpb25faWQsIHNlc3Np
 b25fc3RhdGUpCgogICAgICAgICAgICBjb250ZXh0LnNldCgiZmlkb191MmZfYXV0aGVudGljYXRpb25fcmVxdWVzdCIsIFNlcnZlclV0aWwuYXNKc29uKGF1dGhlbnRpY2F0aW9uUmVxdWVzdCkpCiA
 gICAgICAgICAgIGNvbnRleHQuc2V0KCJmaWRvX3UyZl9yZWdpc3RyYXRpb25fcmVxdWVzdCIsIFNlcnZlclV0aWwuYXNKc29uKHJlZ2lzdHJhdGlvblJlcXVlc3QpKQoKICAgICAgICAgICAgcmV0dX
 JuIFRydWUKICAgICAgICBlbGlmIChzdGVwID09IDMpOgogICAgICAgICAgICBwcmludCAiVTJGLiBQcmVwYXJlIGZvciBzdGVwIDMiCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc
 2U6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICByZXR1
 cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3J
 TdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcmV0dXJuICIvYXV0aC91MmYvbG9naW4ueGh0bWwiCgogIC
 AgICAgIHJldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR1cm4gVHJ1ZQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!92F0.BF9E,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Super Gluu authentication module
displayName: super_gluu
gluuStatus: false
inum: %(inumOrg)s!0011!92F0.BF9E
oxConfigurationProperty: {"value1":"qr_options","value2":"{ size: 500, mSize: 0.05 }","description":""}
oxConfigurationProperty: {"value1":"label","value2":"Super Gluu","description":""}
oxConfigurationProperty: {"value1":"registration_uri","value2":"https://%(hostname)s/identity/register","description":""}
oxConfigurationProperty: {"value1":"authentication_mode","value2":"two_step","description":""}
oxConfigurationProperty: {"value1":"credentials_file","value2":"/etc/certs/super_gluu_creds.json","description":""}
oxLevel: 15
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KaW1wb3J0IHN5cw0KaW1wb3J0IGRhdGV0aW1lDQppbXBvcnQgdXJsbGliDQoNCmZyb20g
 b3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlDQpmcm9tIG9yZy5qYm9zcy5zZWFtIGltcG9ydCBDb21wb25lbnQNCmZyb20
 gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHRzDQpmcm9tIG9yZy5qYm9zcy5zZWFtLnNlY3VyaXR5IGltcG9ydCBJZGVudGl0eQ0KZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aW
 NlIGltcG9ydCBVc2VyU2VydmljZSwgQXV0aGVudGljYXRpb25TZXJ2aWNlLCBTZXNzaW9uU3RhdGVTZXJ2aWNlDQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UuZmlkby51MmYgaW1wb3J0IERld
 mljZVJlZ2lzdHJhdGlvblNlcnZpY2UNCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXINCmZyb20gb3JnLnhkaS5veGF1dGgudXRpbCBpbXBvcnQgU2VydmVyVXRpbA0KZnJvbSBv
 cmcueGRpLnV0aWwuc2VjdXJpdHkgaW1wb3J0IFN0cmluZ0VuY3J5cHRlcg0KZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5jb25maWcgaW1wb3J0IENvbmZpZ3VyYXRpb25GYWN0b3J5DQpmcm9tIGp
 hdmEudXRpbCBpbXBvcnQgQXJyYXlzDQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UubmV0IGltcG9ydCBIdHRwU2VydmljZQ0KZnJvbSBvcmcuYXBhY2hlLmh0dHAucGFyYW1zIGltcG9ydCBDb3
 JlQ29ubmVjdGlvblBOYW1lcw0KZnJvbSBjb20ubm90bm9vcC5hcG5zIGltcG9ydCBBUE5TDQpmcm9tIGNvbS5nb29nbGUuYW5kcm9pZC5nY20uc2VydmVyIGltcG9ydCBTZW5kZXIsIE1lc3NhZ2UNC
 g0KdHJ5Og0KICAgIGltcG9ydCBqc29uDQpleGNlcHQgSW1wb3J0RXJyb3I6DQogICAgaW1wb3J0IHNpbXBsZWpzb24gYXMganNvbg0KDQpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25B
 dXRoZW50aWNhdGlvblR5cGUpOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGx
 pcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6YXRpb24iDQoNCiAgICAgICAgaWYgbm90IG
 NvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJhdXRoZW50aWNhdGlvbl9tb2RlIik6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6YXRpb24uIFByb3Blc
 nR5IGF1dGhlbnRpY2F0aW9uX21vZGUgaXMgbWFuZGF0b3J5Ig0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgc2VsZi5yZWdpc3RyYXRpb25VcmkgPSBOb25lDQogICAgICAgIGlm
 IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJyZWdpc3RyYXRpb25fdXJpIik6DQogICAgICAgICAgICBzZWxmLnJlZ2lzdHJhdGlvblVyaSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ
 1dGVzLmdldCgicmVnaXN0cmF0aW9uX3VyaSIpLmdldFZhbHVlMigpDQoNCiAgICAgICAgYXV0aGVudGljYXRpb25fbW9kZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXV0aGVudGljYX
 Rpb25fbW9kZSIpLmdldFZhbHVlMigpDQogICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KGF1dGhlbnRpY2F0aW9uX21vZGUpOg0KICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIElua
 XRpYWxpemF0aW9uLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIGF1dGhlbnRpY2F0aW9uX21vZGUuIGF1dGhlbnRpY2F0aW9uX21vZGUgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXIgaXMgZW1wdHkiDQogICAg
 ICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgDQogICAgICAgIHNlbGYub25lU3RlcCA9IFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGF1dGhlbnRpY2F0aW9uX21vZGUsICJvbmVfc3R
 lcCIpDQogICAgICAgIHNlbGYudHdvU3RlcCA9IFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKGF1dGhlbnRpY2F0aW9uX21vZGUsICJ0d29fc3RlcCIpDQoNCiAgICAgICAgaWYgbm90IChzZW
 xmLm9uZVN0ZXAgb3Igc2VsZi50d29TdGVwKToNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBJbml0aWFsaXphdGlvbi4gVmFsaWQgYXV0aGVudGljYXRpb25fbW9kZSB2YWx1ZXMgYXJlI
 G9uZV9zdGVwIGFuZCB0d29fc3RlcCINCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICANCiAgICAgICAgc2VsZi5lbmFibGVkUHVzaE5vdGlmaWNhdGlvbnMgPSBzZWxmLmluaXRQdXNo
 Tm90aWZpY2F0aW9uU2VydmljZShjb25maWd1cmF0aW9uQXR0cmlidXRlcykNCg0KICAgICAgICBzZWxmLmN1c3RvbUxhYmVsID0gTm9uZQ0KICAgICAgICBpZiBjb25maWd1cmF0aW9uQXR0cmlidXR
 lcy5jb250YWluc0tleSgibGFiZWwiKToNCiAgICAgICAgICAgIHNlbGYuY3VzdG9tTGFiZWwgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImxhYmVsIikuZ2V0VmFsdWUyKCkNCg0KICAgIC
 AgICBzZWxmLmN1c3RvbVFyT3B0aW9ucyA9IHt9DQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJxcl9vcHRpb25zIik6DQogICAgICAgICAgICBzZWxmLmN1c
 3RvbVFyT3B0aW9ucyA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgicXJfb3B0aW9ucyIpLmdldFZhbHVlMigpDQoNCiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEluaXRpYWxpemVkIHN1
 Y2Nlc3NmdWxseS4gb25lU3RlcDogJyVzJywgdHdvU3RlcDogJyVzJywgcHVzaE5vdGlmaWNhdGlvbnM6ICclcycsIGN1c3RvbUxhYmVsOiAnJXMnIiAlIChzZWxmLm9uZVN0ZXAsIHNlbGYudHdvU3R
 lcCwgc2VsZi5lbmFibGVkUHVzaE5vdGlmaWNhdGlvbnMsIHNlbGYuY3VzdG9tTGFiZWwpDQoNCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYX
 Rpb25BdHRyaWJ1dGVzKToNCiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIERlc3Ryb3kiDQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgI
 CByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFwaVZlcnNpb24oc2VsZik6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgaXNWYWxpZEF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYsIHVzYWdl
 VHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXB
 lLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHJldHVybiBOb25lDQoNCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UG
 FyYW1ldGVycywgc3RlcCk6DQogICAgICAgIGNyZWRlbnRpYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpDQogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdld
 FVzZXJuYW1lKCkNCg0KICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkNCiAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRy
 aWJ1dGVzIikNCg0KICAgICAgICBjbGllbnRfcmVkaXJlY3RfdXJpID0gc2VsZi5nZXRDbGllbnRSZWRpcmVjVXJpKHNlc3Npb25fYXR0cmlidXRlcykNCiAgICAgICAgaWYgY2xpZW50X3JlZGlyZWN
 0X3VyaSA9PSBOb25lOg0KICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZS4gcmVkaXJlY3RfdXJpIGlzIG5vdCBzZXQiDQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCg
 0KICAgICAgICBzZWxmLnNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoY29udGV4dCkNCg0KICAgICAgICB1c2VyU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShVc2VyU2VydmljZSkNCiAgI
 CAgICAgZGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShEZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlKQ0KICAgICAgICBpZiBzdGVwID09IDE6DQogICAgICAg
 ICAgICBwcmludCAiU3VwZXItR2x1dS4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEiDQogICAgICAgICAgICBpZiBzZWxmLm9uZVN0ZXA6DQogIA0KICAgICAgICAgICAgICAgIHNlc3Npb25fZGV2aWN
 lX3N0YXR1cyA9IHNlbGYuZ2V0U2Vzc2lvbkRldmljZVN0YXR1cyhzZXNzaW9uX2F0dHJpYnV0ZXMsIHVzZXJfbmFtZSkNCiAgICAgICAgICAgICAgICBpZiBzZXNzaW9uX2RldmljZV9zdGF0dXMgPT
 0gTm9uZToNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuDQoNCiAgICAgICAgICAgICAgICB1MmZfZGV2aWNlX2lkID0gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydkZXZpY2VfaWQnXQ0KDQogICAgI
 CAgICAgICAgICAgdmFsaWRhdGlvbl9yZXN1bHQgPSBzZWxmLnZhbGlkYXRlU2Vzc2lvbkRldmljZVN0YXR1cyhjbGllbnRfcmVkaXJlY3RfdXJpLCBzZXNzaW9uX2RldmljZV9zdGF0dXMpDQogICAg
 ICAgICAgICAgICAgaWYgdmFsaWRhdGlvbl9yZXN1bHQ6DQogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVXNlciBzdWNjZXNzZnV
 sbHkgYXV0aGVudGljYXRlZCB3aXRoIHUyZl9kZXZpY2UgJyVzJyIgJSB1MmZfZGV2aWNlX2lkDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQ
 ogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGlmIG5vdCBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ29uZV9zdGVwJ106DQogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlc
 i1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gdTJmX2RldmljZSAnJXMnIGlzIG5vdCBvbmUgc3RlcCBkZXZpY2UiICUgdTJmX2RldmljZV9pZA0KICAgICAgICAgICAgICAgICAgICByZXR1
 cm4gRmFsc2UNCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgIyBUaGVyZSBhcmUgdHdvIHN0ZXBzIG9ubHkgaW4gZW5yb2xsbWVudCBtb2RlDQogICAgICAgICAgICAgICAgaWY
 gc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydlbnJvbGwnXToNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRpb25fcmVzdWx0DQoNCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgic3
 VwZXJfZ2x1dV9jb3VudF9sb2dpbl9zdGVwcyIsIDEpDQoNCiAgICAgICAgICAgICAgICB1c2VyX2ludW0gPSBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ3VzZXJfaW51bSddDQoNCiAgICAgICAgICAgI
 CAgICB1MmZfZGV2aWNlID0gZGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZS5maW5kVXNlckRldmljZVJlZ2lzdHJhdGlvbih1c2VyX2ludW0sIHUyZl9kZXZpY2VfaWQsICJveElkIikNCiAgICAgICAg
 ICAgICAgICBpZiB1MmZfZGV2aWNlID09IE5vbmU6DQogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGxvYWQgdTJ
 mX2RldmljZSAnJXMnIiAlIHUyZl9kZXZpY2VfaWQNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW
 50aWNhdGUodXNlcl9uYW1lKQ0KICAgICAgICAgICAgICAgIGlmIG5vdCBsb2dnZWRfaW46DQogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0Z
 XAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyICclcyciICUgdXNlcl9uYW1lDQogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICAgICAgcHJpbnQgIlN1
 cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBVc2VyICclcycgc3VjY2Vzc2Z1bGx5IGF1dGhlbnRpY2F0ZWQgd2l0aCB1MmZfZGV2aWNlICclcyciICUgKHVzZXJfbmFtZSwgdTJmX2R
 ldmljZV9pZCkNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICAgICAgZWxpZiBzZWxmLnR3b1N0ZXA6DQogICAgICAgICAgICAgICAgYXV0aGVudG
 ljYXRlZF91c2VyID0gc2VsZi5wcm9jZXNzQmFzaWNBdXRoZW50aWNhdGlvbihjcmVkZW50aWFscykNCiAgICAgICAgICAgICAgICBpZiBhdXRoZW50aWNhdGVkX3VzZXIgPT0gTm9uZToNCiAgICAgI
 CAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgDQogICAgICAgICAgICAgICAgYXV0aF9tZXRob2QgPSAnYXV0aGVudGljYXRlJw0KICAgICAgICAgICAgICAgIGVucm9sbG1lbnRfbW9kZSA9
 IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgImxvZ2luRm9ybTpyZWdpc3RlckJ1dHRvbiIpDQogICAgICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzTm90RW1
 wdHkoZW5yb2xsbWVudF9tb2RlKToNCiAgICAgICAgICAgICAgICAgICAgYXV0aF9tZXRob2QgPSAnZW5yb2xsJw0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIGlmIGF1dGhfbWV0aG
 9kID09ICdhdXRoZW50aWNhdGUnOg0KICAgICAgICAgICAgICAgICAgICB1c2VyX2ludW0gPSB1c2VyU2VydmljZS5nZXRVc2VySW51bShhdXRoZW50aWNhdGVkX3VzZXIpDQogICAgICAgICAgICAgI
 CAgICAgIHUyZl9kZXZpY2VzX2xpc3QgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9ucyh1c2VyX2ludW0sIGNsaWVudF9yZWRpcmVjdF91cmksICJv
 eElkIikNCiAgICAgICAgICAgICAgICAgICAgaWYgdTJmX2RldmljZXNfbGlzdC5zaXplKCkgPT0gMDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhfbWV0aG9kID0gJ2Vucm9sbCcNCiAgICA
 gICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gVGhlcmUgaXMgbm8gVTJGICclcycgdXNlciBkZXZpY2VzIGFzc29jaWF0ZWQgd2l0aC
 BhcHBsaWNhdGlvbiAnJXMnLiBDaGFuZ2luZyBhdXRoX21ldGhvZCB0byAnJXMnIiAlICh1c2VyX25hbWUsIGNsaWVudF9yZWRpcmVjdF91cmksIGF1dGhfbWV0aG9kKQ0KICAgIA0KICAgICAgICAgI
 CAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gYXV0aF9tZXRob2Q6ICclcyciICUgYXV0aF9tZXRob2QNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAg
 ICAgICBjb250ZXh0LnNldCgic3VwZXJfZ2x1dV9hdXRoX21ldGhvZCIsIGF1dGhfbWV0aG9kKQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgICAgICAgICAgcmV0dXJuIEZhbHN
 lDQogICAgICAgIGVsaWYgc3RlcCA9PSAyOg0KICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIg0KICAgICAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dG
 VzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikNCg0KICAgICAgICAgICAgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzID0gc2VsZi5nZXRTZXNzaW9uRGV2aWNlU3RhdHVzKHNlc3Npb25fY
 XR0cmlidXRlcywgdXNlcl9uYW1lKQ0KICAgICAgICAgICAgaWYgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzID09IE5vbmU6DQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAg
 IHUyZl9kZXZpY2VfaWQgPSBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ2RldmljZV9pZCddDQoNCiAgICAgICAgICAgICMgVGhlcmUgYXJlIHR3byBzdGVwcyBvbmx5IGluIGVucm9sbG1lbnQgbW9kZQ0
 KICAgICAgICAgICAgaWYgc2VsZi5vbmVTdGVwIGFuZCBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ2Vucm9sbCddOg0KICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWRfdXNlciA9IHNlbGYucHJvY2
 Vzc0Jhc2ljQXV0aGVudGljYXRpb24oY3JlZGVudGlhbHMpDQogICAgICAgICAgICAgICAgaWYgYXV0aGVudGljYXRlZF91c2VyID09IE5vbmU6DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBGY
 WxzZQ0KDQogICAgICAgICAgICAgICAgdXNlcl9pbnVtID0gdXNlclNlcnZpY2UuZ2V0VXNlckludW0oYXV0aGVudGljYXRlZF91c2VyKQ0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAg
 IGF0dGFjaF9yZXN1bHQgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmF0dGFjaFVzZXJEZXZpY2VSZWdpc3RyYXRpb24odXNlcl9pbnVtLCB1MmZfZGV2aWNlX2lkKQ0KDQogICAgICAgICAgICA
 gICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBSZXN1bHQgYWZ0ZXIgYXR0YWNoaW5nIHUyZl9kZXZpY2UgJyVzJyB0byB1c2VyICclcyc6ICclcyciICUgKHUyZl
 9kZXZpY2VfaWQsIHVzZXJfbmFtZSwgYXR0YWNoX3Jlc3VsdCkgDQoNCiAgICAgICAgICAgICAgICByZXR1cm4gYXR0YWNoX3Jlc3VsdA0KICAgICAgICAgICAgZWxpZiBzZWxmLnR3b1N0ZXA6DQogI
 CAgICAgICAgICAgICAgaWYgdXNlcl9uYW1lID09IE5vbmU6DQogICAgICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRl
 dGVybWluZSB1c2VyIG5hbWUiDQogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICAgICAgdmFsaWRhdGlvbl9yZXN1bHQgPSBzZWxmLnZhbGlkYXRlU2Vzc2lvbkR
 ldmljZVN0YXR1cyhjbGllbnRfcmVkaXJlY3RfdXJpLCBzZXNzaW9uX2RldmljZV9zdGF0dXMsIHVzZXJfbmFtZSkNCiAgICAgICAgICAgICAgICBpZiB2YWxpZGF0aW9uX3Jlc3VsdDoNCiAgICAgIC
 AgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBVc2VyICclcycgc3VjY2Vzc2Z1bGx5IGF1dGhlbnRpY2F0ZWQgd2l0aCB1MmZfZGV2aWNlICclc
 yciICUgKHVzZXJfbmFtZSwgdTJmX2RldmljZV9pZCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgICAgICAgICANCiAgICAg
 ICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3QgPSBqc29uLmxvYWRzKHNlc3Npb25fZGV2aWNlX3N0YXR1c1snc3VwZXJfZ2x1dV9yZXF1ZXN0J10pDQogICAgICAgICAgICAgICAgYXV0aF9tZXR
 ob2QgPSBzdXBlcl9nbHV1X3JlcXVlc3RbJ21ldGhvZCddDQogICAgICAgICAgICAgICAgaWYgYXV0aF9tZXRob2QgaW4gWydlbnJvbGwnLCAnYXV0aGVudGljYXRlJ106DQogICAgICAgICAgICAgIC
 AgICAgIHJldHVybiB2YWxpZGF0aW9uX3Jlc3VsdA0KDQogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBVMkYgYXV0aF9tZXRob2QgaXMga
 W52YWxpZCINCg0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgIGRlZiBwcmVwYXJlRm9yU3RlcChzZWxmLCBjb25m
 aWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOg0KICAgICAgICBjb250ZXh0ID0gQ29udGV4dHMuZ2V0RXZlbnRDb250ZXh0KCkNCiAgICAgICAgc2Vzc2lvbl9hdHR
 yaWJ1dGVzID0gY29udGV4dC5nZXQoInNlc3Npb25BdHRyaWJ1dGVzIikNCg0KICAgICAgICBjbGllbnRfcmVkaXJlY3RfdXJpID0gc2VsZi5nZXRDbGllbnRSZWRpcmVjVXJpKHNlc3Npb25fYXR0cm
 lidXRlcykNCiAgICAgICAgaWYgY2xpZW50X3JlZGlyZWN0X3VyaSA9PSBOb25lOg0KICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAuIHJlZGlyZWN0X3VyaSBpc
 yBub3Qgc2V0Ig0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgc2VsZi5zZXRFdmVudENvbnRleHRQYXJhbWV0ZXJzKGNvbnRleHQpDQoNCiAgICAgICAgaWYgc3RlcCA9PSAxOg0K
 ICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAgMSINCiAgICAgICAgICAgIGlmIHNlbGYub25lU3RlcDoNCiAgICAgICAgICAgICAgICBzZXNzaW9uX3N0YXRlID0
 gQ29tcG9uZW50LmdldEluc3RhbmNlKFNlc3Npb25TdGF0ZVNlcnZpY2UpLmdldFNlc3Npb25TdGF0ZUZyb21Db29raWUoKQ0KICAgICAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc0VtcHR5KH
 Nlc3Npb25fc3RhdGUpOg0KICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHNlc3Npb25fc3RhdGUiDQogI
 CAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgaXNzdWVyID0gQ29tcG9uZW50LmdldEluc3RhbmNlKENvbmZpZ3VyYXRpb25GYWN0b3J5
 KS5nZXRDb25maWd1cmF0aW9uKCkuZ2V0SXNzdWVyKCkNCiAgICAgICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSA9IHsnYXBwJzogY2xpZW50X3JlZGlyZWN0X3VyaSwNCiA
 gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lzc3Vlcic6IGlzc3VlciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0YXRlJzogc2Vzc2lvbl9zdGF0ZSwNCi
 AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NyZWF0ZWQnOiBkYXRldGltZS5kYXRldGltZS5ub3coKS5pc29mb3JtYXQoKX0NCg0KICAgICAgICAgICAgICAgIHNlbGYuYWRkR2Vvb
 G9jYXRpb25EYXRhKHNlc3Npb25fYXR0cmlidXRlcywgc3VwZXJfZ2x1dV9yZXF1ZXN0X2RpY3Rpb25hcnkpDQoNCiAgICAgICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3QgPSBqc29uLmR1bXBz
 KHN1cGVyX2dsdXVfcmVxdWVzdF9kaWN0aW9uYXJ5LCBzZXBhcmF0b3JzPSgnLCcsJzonKSkNCiAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAxLiBQcmV
 wYXJlZCBzdXBlcl9nbHV1X3JlcXVlc3Q6Iiwgc3VwZXJfZ2x1dV9yZXF1ZXN0DQogICAgDQogICAgICAgICAgICAgICAgY29udGV4dC5zZXQoInN1cGVyX2dsdXVfcmVxdWVzdCIsIHN1cGVyX2dsdX
 VfcmVxdWVzdCkNCiMgICAgICAgICAgICBlbGlmIHNlbGYudHdvU3RlcDoNCiMgICAgICAgICAgICAgICAgY29udGV4dC5zZXQoImRpc3BsYXlfcmVnaXN0ZXJfYWN0aW9uIiwgVHJ1ZSkNCg0KICAgI
 CAgICAgICAgcmV0dXJuIFRydWUNCiAgICAgICAgZWxpZiBzdGVwID09IDI6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyIg0KICAgICAgICAgICAgaWYg
 c2VsZi5vbmVTdGVwOg0KICAgICAgICAgICAgICAgIHJldHVybiBUcnVlDQoNCiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShBdXRoZW50aWN
 hdGlvblNlcnZpY2UpDQogICAgICAgICAgICB1c2VyID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmdldEF1dGhlbnRpY2F0ZWRVc2VyKCkNCiAgICAgICAgICAgIGlmIHVzZXIgPT0gTm9uZToNCiAgIC
 AgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHVzZXIgbmFtZSINCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UNC
 g0KICAgICAgICAgICAgaWYgc2Vzc2lvbl9hdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzdXBlcl9nbHV1X3JlcXVlc3QiKToNCiAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFy
 ZSBmb3Igc3RlcCAyLiBSZXF1ZXN0IHdhcyBnZW5lcmF0ZWQgYWxyZWFkeSINCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICAgICAgDQogICAgICAgICAgICBzZXNzaW9uX3N0YXR
 lID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFNlc3Npb25TdGF0ZVNlcnZpY2UpLmdldFNlc3Npb25TdGF0ZUZyb21Db29raWUoKQ0KICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzRW1wdHkoc2
 Vzc2lvbl9zdGF0ZSk6DQogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcmUgZm9yIHN0ZXAgMi4gRmFpbGVkIHRvIGRldGVybWluZSBzZXNzaW9uX3N0YXRlIg0KICAgICAgI
 CAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgICAgICBhdXRoX21ldGhvZCA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoInN1cGVyX2dsdXVfYXV0aF9tZXRob2QiKQ0KICAgICAgICAgICAg
 aWYgU3RyaW5nSGVscGVyLmlzRW1wdHkoYXV0aF9tZXRob2QpOg0KICAgICAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIuIEZhaWxlZCB0byBkZXRlcm1pbmU
 gYXV0aF9tZXRob2QiDQogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBQcmVwYXJlIGZvciBzdGVwIDIuIGF1dGhfbWV0aG9kOiAnJX
 MnIiAlIGF1dGhfbWV0aG9kDQogICAgICAgICAgICANCiAgICAgICAgICAgIGlzc3VlciA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShDb25maWd1cmF0aW9uRmFjdG9yeSkuZ2V0Q29uZmlndXJhdGlvb
 igpLmdldElzc3VlcigpDQogICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSA9IHsndXNlcm5hbWUnOiB1c2VyLmdldFVzZXJJZCgpLA0KICAgICAgICAgICAgICAgICAgICAg
 ICAgICAgICAgICdhcHAnOiBjbGllbnRfcmVkaXJlY3RfdXJpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpc3N1ZXInOiBpc3N1ZXIsDQogICAgICAgICAgICAgICAgICAgICAgICA
 gICAgICAgJ21ldGhvZCc6IGF1dGhfbWV0aG9kLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzdGF0ZSc6IHNlc3Npb25fc3RhdGUsDQogICAgICAgICAgICAgICAgICAgICAgICAgIC
 AgICAgJ2NyZWF0ZWQnOiBkYXRldGltZS5kYXRldGltZS5ub3coKS5pc29mb3JtYXQoKX0NCg0KICAgICAgICAgICAgc2VsZi5hZGRHZW9sb2NhdGlvbkRhdGEoc2Vzc2lvbl9hdHRyaWJ1dGVzLCBzd
 XBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSkNCg0KICAgICAgICAgICAgc3VwZXJfZ2x1dV9yZXF1ZXN0ID0ganNvbi5kdW1wcyhzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeSwgc2VwYXJh
 dG9ycz0oJywnLCc6JykpDQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyLiBQcmVwYXJlZCBzdXBlcl9nbHV1X3JlcXVlc3Q6Iiwgc3VwZXJfZ2x1dV9yZXF
 1ZXN0DQoNCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzdXBlcl9nbHV1X3JlcXVlc3QiLCBzdXBlcl9nbHV1X3JlcXVlc3QpDQoNCiAgICAgICAgICAgIGlmIGF1dGhfbWV0aG9kIGluIFsnYXV0aG
 VudGljYXRlJ106DQogICAgICAgICAgICAgICAgc2VsZi5zZW5kUHVzaE5vdGlmaWNhdGlvbihjbGllbnRfcmVkaXJlY3RfdXJpLCB1c2VyLCBzdXBlcl9nbHV1X3JlcXVlc3QpDQoNCiAgICAgICAgI
 CAgIHJldHVybiBUcnVlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCg0KICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25B
 dHRyaWJ1dGVzLCBzdGVwKToNCiAgICAgICAgaWYgc3RlcCA9PSAxOg0KICAgICAgICAgICAgaWYgc2VsZi5vbmVTdGVwOiAgICAgICAgDQogICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0x
 pc3QoInN1cGVyX2dsdXVfcmVxdWVzdCIpDQogICAgICAgICAgICBlbGlmIHNlbGYudHdvU3RlcDoNCiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXlzLmFzTGlzdCgiZGlzcGxheV9yZWdpc3Rlcl
 9hY3Rpb24iKQ0KICAgICAgICBlbGlmIHN0ZXAgPT0gMjoNCiAgICAgICAgICAgIHJldHVybiBBcnJheXMuYXNMaXN0KCJzdXBlcl9nbHV1X2F1dGhfbWV0aG9kIiwgInN1cGVyX2dsdXVfcmVxdWVzd
 CIpDQogICAgICAgIA0KICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGVwcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAg
 IGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQ0KICAgICAgICBpZiBjb250ZXh0LmlzU2V0KCJzdXBlcl9nbHV1X2NvdW50X2xvZ2luX3N0ZXBzIik6DQogICAgICAgICAgICByZXR
 1cm4gY29udGV4dC5nZXQoInN1cGVyX2dsdXVfY291bnRfbG9naW5fc3RlcHMiKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcmV0dXJuIDINCg0KICAgIGRlZiBnZXRQYWdlRm9yU3RlcChzZW
 xmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgc3RlcCk6DQogICAgICAgIGlmIHN0ZXAgPT0gMToNCiAgICAgICAgICAgIGlmIHNlbGYub25lU3RlcDogICAgICAgIA0KICAgICAgICAgICAgICAgI
 HJldHVybiAiL2F1dGgvc3VwZXItZ2x1dS9sb2dpbi54aHRtbCINCiAgICAgICAgZWxpZiBzdGVwID09IDI6DQogICAgICAgICAgICBpZiBzZWxmLm9uZVN0ZXA6DQogICAgICAgICAgICAgICAgcmV0
 dXJuICIvbG9naW4ueGh0bWwiDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHJldHVybiAiL2F1dGgvc3VwZXItZ2x1dS9sb2dpbi54aHRtbCINCg0KICAgICAgICByZXR1cm4gIiI
 NCg0KICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBwcm9jZXNzQmFzaW
 NBdXRoZW50aWNhdGlvbihzZWxmLCBjcmVkZW50aWFscyk6DQogICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQ0KDQogICAgICAgIHVzZXJfbmFtZ
 SA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkNCiAgICAgICAgdXNlcl9wYXNzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkNCg0KICAgICAgICBsb2dnZWRfaW4gPSBGYWxzZQ0KICAg
 ICAgICBpZiBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKToNCiAgICAgICAgICAgIGx
 vZ2dlZF9pbiA9IHVzZXJTZXJ2aWNlLmF1dGhlbnRpY2F0ZSh1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQpDQoNCiAgICAgICAgaWYgbm90IGxvZ2dlZF9pbjoNCiAgICAgICAgICAgIHJldHVybiBOb2
 5lDQoNCiAgICAgICAgZmluZF91c2VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmdldFVzZXIodXNlcl9uYW1lKQ0KICAgICAgICBpZiBmaW5kX3VzZXJfYnlfdWlkID09IE5vbmU6DQogICAgICAgICAgI
 CBwcmludCAiU3VwZXItR2x1dS4gUHJvY2VzcyBiYXNpYyBhdXRoZW50aWNhdGlvbi4gRmFpbGVkIHRvIGZpbmQgdXNlciAnJXMnIiAlIHVzZXJfbmFtZQ0KICAgICAgICAgICAgcmV0dXJuIE5vbmUN
 CiAgICAgICAgDQogICAgICAgIHJldHVybiBmaW5kX3VzZXJfYnlfdWlkDQoNCiAgICBkZWYgdmFsaWRhdGVTZXNzaW9uRGV2aWNlU3RhdHVzKHNlbGYsIGNsaWVudF9yZWRpcmVjdF91cmksIHNlc3N
 pb25fZGV2aWNlX3N0YXR1cywgdXNlcl9uYW1lID0gTm9uZSk6DQogICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQ0KICAgICAgICBkZXZpY2VSZW
 dpc3RyYXRpb25TZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKERldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UpDQoNCiAgICAgICAgdTJmX2RldmljZV9pZCA9IHNlc3Npb25fZGV2aWNlX3N0Y
 XR1c1snZGV2aWNlX2lkJ10NCg0KICAgICAgICB1MmZfZGV2aWNlID0gTm9uZQ0KICAgICAgICBpZiBzZXNzaW9uX2RldmljZV9zdGF0dXNbJ2Vucm9sbCddIGFuZCBzZXNzaW9uX2RldmljZV9zdGF0
 dXNbJ29uZV9zdGVwJ106DQogICAgICAgICAgICB1MmZfZGV2aWNlID0gZGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZS5maW5kT25lU3RlcFVzZXJEZXZpY2VSZWdpc3RyYXRpb24odTJmX2RldmljZV9
 pZCkNCiAgICAgICAgICAgIGlmIHUyZl9kZXZpY2UgPT0gTm9uZToNCiAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gVmFsaWRhdGUgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBUaGVyZS
 BpcyBubyBvbmUgc3RlcCB1MmZfZGV2aWNlICclcyciICUgdTJmX2RldmljZV9pZA0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgIyBWYWxpZ
 GF0ZSBpZiB1c2VyIGhhcyBzcGVjaWZpZWQgZGV2aWNlX2lkIGVucm9sbG1lbnQNCiAgICAgICAgICAgIHVzZXJfaW51bSA9IHVzZXJTZXJ2aWNlLmdldFVzZXJJbnVtKHVzZXJfbmFtZSkNCg0KICAg
 ICAgICAgICAgaWYgc2Vzc2lvbl9kZXZpY2Vfc3RhdHVzWydvbmVfc3RlcCddOg0KICAgICAgICAgICAgICAgIHVzZXJfaW51bSA9IHNlc3Npb25fZGV2aWNlX3N0YXR1c1sndXNlcl9pbnVtJ10NCiA
 gICANCiAgICAgICAgICAgIHUyZl9kZXZpY2UgPSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9uKHVzZXJfaW51bSwgdTJmX2RldmljZV9pZCkNCiAgIC
 AgICAgICAgIGlmIHUyZl9kZXZpY2UgPT0gTm9uZToNCiAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gVmFsaWRhdGUgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBUaGVyZSBpcyBubyB1M
 mZfZGV2aWNlICclcycgYXNzb2NpYXRlZCB3aXRoIHVzZXIgJyVzJyIgJSAodTJmX2RldmljZV9pZCwgdXNlcl9pbnVtKQ0KICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KDQogICAgICAgIGlm
 IG5vdCBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShjbGllbnRfcmVkaXJlY3RfdXJpLCB1MmZfZGV2aWNlLmFwcGxpY2F0aW9uKToNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiB
 WYWxpZGF0ZSBzZXNzaW9uIGRldmljZSBzdGF0dXMuIHUyZl9kZXZpY2UgJyVzJyBhc3NvY2lhdGVkIHdpdGggb3RoZXIgYXBwbGljYXRpb24gJyVzJyIgJSAodTJmX2RldmljZV9pZCwgdTJmX2Rldm
 ljZS5hcHBsaWNhdGlvbikNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICANCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiBnZXRTZXNzaW9uRGV2aWNlU3RhdHVzKHNlbGYsI
 HNlc3Npb25fYXR0cmlidXRlcywgdXNlcl9uYW1lKToNCiAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIEdldCBzZXNzaW9uIGRldmljZSBzdGF0dXMiDQoNCiAgICAgICAgaWYgbm90IHNlc3Npb25f
 YXR0cmlidXRlcy5jb250YWluc0tleSgic3VwZXJfZ2x1dV9yZXF1ZXN0Iik6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Npb24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXM
 gbm8gU3VwZXItR2x1dSByZXF1ZXN0IGluIHNlc3Npb24gYXR0cmlidXRlcyINCiAgICAgICAgICAgIHJldHVybiBOb25lDQoNCiAgICAgICAgIyBDaGVjayBzZXNzaW9uIHN0YXRlIGV4dGVuZGVkDQ
 ogICAgICAgIGlmIG5vdCBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoInNlc3Npb25fY3VzdG9tX3N0YXRlIik6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Npb
 24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gc2Vzc2lvbl9jdXN0b21fc3RhdGUgaW4gc2Vzc2lvbiBhdHRyaWJ1dGVzIg0KICAgICAgICAgICAgcmV0dXJuIE5vbmUNCg0KICAgICAgICBzZXNz
 aW9uX2N1c3RvbV9zdGF0ZSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoInNlc3Npb25fY3VzdG9tX3N0YXRlIikNCiAgICAgICAgaWYgbm90IFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKCJ
 hcHByb3ZlZCIsIHNlc3Npb25fY3VzdG9tX3N0YXRlKToNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBHZXQgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBVc2VyICclcycgbm90IGFwcHJvdm
 Ugb3Igbm90IHBhc3MgVTJGIGF1dGhlbnRpY2F0aW9uLiBzZXNzaW9uX2N1c3RvbV9zdGF0ZTogJyVzJyIgJSAodXNlcl9uYW1lLCBzZXNzaW9uX2N1c3RvbV9zdGF0ZSkNCiAgICAgICAgICAgIHJld
 HVybiBOb25lDQoNCiAgICAgICAgIyBUcnkgdG8gZmluZCBkZXZpY2VfaWQgaW4gc2Vzc2lvbiBhdHRyaWJ1dGUNCiAgICAgICAgaWYgbm90IHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleSgi
 b3hwdXNoMl91MmZfZGV2aWNlX2lkIik6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Npb24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gdTJmX2RldmljZSBhc3NvY2l
 hdGVkIHdpdGggdGhpcyByZXF1ZXN0Ig0KICAgICAgICAgICAgcmV0dXJuIE5vbmUNCg0KICAgICAgICAjIFRyeSB0byBmaW5kIHVzZXJfaW51bSBpbiBzZXNzaW9uIGF0dHJpYnV0ZQ0KICAgICAgIC
 BpZiBub3Qgc2Vzc2lvbl9hdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJveHB1c2gyX3UyZl9kZXZpY2VfdXNlcl9pbnVtIik6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gR2V0IHNlc3Npb
 24gZGV2aWNlIHN0YXR1cy4gVGhlcmUgaXMgbm8gdXNlcl9pbnVtIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHJlcXVlc3QiDQogICAgICAgICAgICByZXR1cm4gTm9uZQ0KICAgICAgICANCiAgICAgICAg
 ZW5yb2xsID0gRmFsc2UNCiAgICAgICAgaWYgc2Vzc2lvbl9hdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJveHB1c2gyX3UyZl9kZXZpY2VfZW5yb2xsIik6DQogICAgICAgICAgICBlbnJvbGwgPSBTdHJ
 pbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZSgidHJ1ZSIsIHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm94cHVzaDJfdTJmX2RldmljZV9lbnJvbGwiKSkNCg0KICAgICAgICBvbmVfc3RlcCA9IEZhbH
 NlDQogICAgICAgIGlmIHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleSgib3hwdXNoMl91MmZfZGV2aWNlX29uZV9zdGVwIik6DQogICAgICAgICAgICBvbmVfc3RlcCA9IFN0cmluZ0hlbHBlc
 i5lcXVhbHNJZ25vcmVDYXNlKCJ0cnVlIiwgc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgib3hwdXNoMl91MmZfZGV2aWNlX29uZV9zdGVwIikpDQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAg
 ICAgc3VwZXJfZ2x1dV9yZXF1ZXN0ID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgic3VwZXJfZ2x1dV9yZXF1ZXN0IikNCiAgICAgICAgdTJmX2RldmljZV9pZCA9IHNlc3Npb25fYXR0cmlidXRlcy5
 nZXQoIm94cHVzaDJfdTJmX2RldmljZV9pZCIpDQogICAgICAgIHVzZXJfaW51bSA9IHNlc3Npb25fYXR0cmlidXRlcy5nZXQoIm94cHVzaDJfdTJmX2RldmljZV91c2VyX2ludW0iKQ0KDQogICAgIC
 AgIHNlc3Npb25fZGV2aWNlX3N0YXR1cyA9IHsic3VwZXJfZ2x1dV9yZXF1ZXN0Ijogc3VwZXJfZ2x1dV9yZXF1ZXN0LCAiZGV2aWNlX2lkIjogdTJmX2RldmljZV9pZCwgInVzZXJfaW51bSIgOiB1c
 2VyX2ludW0sICJlbnJvbGwiIDogZW5yb2xsLCAib25lX3N0ZXAiIDogb25lX3N0ZXB9DQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBHZXQgc2Vzc2lvbiBkZXZpY2Ugc3RhdHVzLiBzZXNzaW9u
 X2RldmljZV9zdGF0dXM6ICclcyciICUgKHNlc3Npb25fZGV2aWNlX3N0YXR1cykNCiAgICAgICAgDQogICAgICAgIHJldHVybiBzZXNzaW9uX2RldmljZV9zdGF0dXMNCg0KICAgIGRlZiBpbml0UHV
 zaE5vdGlmaWNhdGlvblNlcnZpY2Uoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6ZSBub3RpZmljYXRpb24gc2VydmljZX
 MiDQogICAgICAgIGlmIG5vdCBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgiY3JlZGVudGlhbHNfZmlsZSIpOg0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQoNCiAgICAgICAgc
 3VwZXJfZ2x1dV9jcmVkc19maWxlID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJjcmVkZW50aWFsc19maWxlIikuZ2V0VmFsdWUyKCkNCg0KICAgICAgICAjIExvYWQgY3JlZGVudGlhbHMg
 ZnJvbSBmaWxlDQogICAgICAgIGYgPSBvcGVuKHN1cGVyX2dsdXVfY3JlZHNfZmlsZSwgJ3InKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICBjcmVkcyA9IGpzb24ubG9hZHMoZi5yZWFkKCkpDQo
 gICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBJbml0aWFsaXplIG5vdGlmaWNhdGlvbiBzZXJ2aWNlcy4gRmFpbGVkIHRvIGxvYWQgY3JlZGVudGlhbHMgZnJvbS
 BmaWxlOiIsIHN1cGVyX2dsdXVfY3JlZHNfZmlsZQ0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgIGZpbmFsbHk6DQogICAgICAgICAgICBmLmNsb3NlKCkNCiAgICAgICAgDQogICAgI
 CAgIHRyeToNCiAgICAgICAgICAgIGFuZHJvaWRfY3JlZHMgPSBjcmVkc1siYW5kcm9pZCJdWyJnY20iXQ0KICAgICAgICAgICAgaW9zX2NyZWFkcyA9IGNyZWRzWyJpb3MiXVsiYXBucyJdDQogICAg
 ICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBJbml0aWFsaXplIG5vdGlmaWNhdGlvbiBzZXJ2aWNlcy4gSW52YWxpZCBjcmVkZW50aWFscyBmaWxlICclcycgZm9ybWF
 0OiIgJSBzdXBlcl9nbHV1X2NyZWRzX2ZpbGUNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICANCiAgICAgICAgc2VsZi5wdXNoQW5kcm9pZFNlcnZpY2UgPSBOb25lDQogICAgICAgIH
 NlbGYucHVzaEFwcGxlU2VydmljZSA9IE5vbmUNCiAgICAgICAgaWYgYW5kcm9pZF9jcmVkc1siZW5hYmxlZCJdOg0KICAgICAgICAgICAgc2VsZi5wdXNoQW5kcm9pZFNlcnZpY2UgPSBTZW5kZXIoY
 W5kcm9pZF9jcmVkc1siYXBpX2tleSJdKSANCiAgICAgICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBJbml0aWFsaXplIG5vdGlmaWNhdGlvbiBzZXJ2aWNlcy4gQ3JlYXRlZCBBbmRyb2lkIG5vdGlm
 aWNhdGlvbiBzZXJ2aWNlIg0KICAgICAgICAgICAgDQogICAgICAgIGlmIGlvc19jcmVhZHNbImVuYWJsZWQiXToNCiAgICAgICAgICAgIHAxMl9maWxlX3BhdGggPSBpb3NfY3JlYWRzWyJwMTJfZml
 sZV9wYXRoIl0NCiAgICAgICAgICAgIHAxMl9wYXNzb3dyZCA9IGlvc19jcmVhZHNbInAxMl9wYXNzd29yZCJdDQoNCiAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICBzdHJpbmdFbmNyeX
 B0ZXIgPSBTdHJpbmdFbmNyeXB0ZXIuZGVmYXVsdEluc3RhbmNlKCkNCiAgICAgICAgICAgICAgICBwMTJfcGFzc293cmQgPSBzdHJpbmdFbmNyeXB0ZXIuZGVjcnlwdChwMTJfcGFzc293cmQpDQogI
 CAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgIyBJZ25vcmUgZXhjZXB0aW9uLiBQYXNzd29yZCBpcyBub3QgZW5jcnlwdGVkDQogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUds
 dXUuIEluaXRpYWxpemUgbm90aWZpY2F0aW9uIHNlcnZpY2VzLiBBc3N1bWluZyB0aGF0ICdwMTJfcGFzc293cmQnIHBhc3N3b3JkIGluIG5vdCBlbmNyeXB0ZWQiDQoNCiAgICAgICAgICAgIGFwbnN
 TZXJ2aWNlQnVpbGRlciA9ICBBUE5TLm5ld1NlcnZpY2UoKS53aXRoQ2VydChwMTJfZmlsZV9wYXRoLCBwMTJfcGFzc293cmQpDQogICAgICAgICAgICBpZiBpb3NfY3JlYWRzWyJwcm9kdWN0aW9uIl
 06DQogICAgICAgICAgICAgICAgc2VsZi5wdXNoQXBwbGVTZXJ2aWNlID0gYXBuc1NlcnZpY2VCdWlsZGVyLndpdGhQcm9kdWN0aW9uRGVzdGluYXRpb24oKS5idWlsZCgpDQogICAgICAgICAgICBlb
 HNlOg0KICAgICAgICAgICAgICAgIHNlbGYucHVzaEFwcGxlU2VydmljZSA9IGFwbnNTZXJ2aWNlQnVpbGRlci53aXRoU2FuZGJveERlc3RpbmF0aW9uKCkuYnVpbGQoKQ0KDQogICAgICAgICAgICBw
 cmludCAiU3VwZXItR2x1dS4gSW5pdGlhbGl6ZSBub3RpZmljYXRpb24gc2VydmljZXMuIENyZWF0ZWQgaU9TIG5vdGlmaWNhdGlvbiBzZXJ2aWNlIg0KDQogICAgICAgIGVuYWJsZWQgPSBzZWxmLnB
 1c2hBbmRyb2lkU2VydmljZSAhPSBOb25lIG9yIHNlbGYucHVzaEFwcGxlU2VydmljZSAhPSBOb25lDQoNCiAgICAgICAgcmV0dXJuIGVuYWJsZWQNCg0KICAgIGRlZiBzZW5kUHVzaE5vdGlmaWNhdG
 lvbihzZWxmLCBjbGllbnRfcmVkaXJlY3RfdXJpLCB1c2VyLCBzdXBlcl9nbHV1X3JlcXVlc3QpOg0KICAgICAgICBpZiBub3Qgc2VsZi5lbmFibGVkUHVzaE5vdGlmaWNhdGlvbnM6DQogICAgICAgI
 CAgICByZXR1cm4NCg0KICAgICAgICB1c2VyX25hbWUgPSB1c2VyLmdldFVzZXJJZCgpDQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBTZW5kIHB1c2ggbm90aWZpY2F0aW9uLiBMb2FkaW5nIHVz
 ZXIgJyVzJyBkZXZpY2VzIiAlIHVzZXJfbmFtZQ0KDQogICAgICAgIHNlbmRfbm90aWZpY2F0aW9uID0gRmFsc2UNCiAgICAgICAgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0ID0gVHJ1ZQ0KDQogICA
 gICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQ0KICAgICAgICBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKE
 RldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UpDQoNCiAgICAgICAgdXNlcl9pbnVtID0gdXNlclNlcnZpY2UuZ2V0VXNlckludW0odXNlcl9uYW1lKQ0KDQogICAgICAgIHUyZl9kZXZpY2VzX2xpc3QgP
 SBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmZpbmRVc2VyRGV2aWNlUmVnaXN0cmF0aW9ucyh1c2VyX2ludW0sIGNsaWVudF9yZWRpcmVjdF91cmksICJveElkIiwgIm94RGV2aWNlRGF0YSIpDQog
 ICAgICAgIGlmIHUyZl9kZXZpY2VzX2xpc3Quc2l6ZSgpID4gMDoNCiAgICAgICAgICAgIGZvciB1MmZfZGV2aWNlIGluIHUyZl9kZXZpY2VzX2xpc3Q6DQogICAgICAgICAgICAgICAgZGV2aWNlX2R
 hdGEgPSB1MmZfZGV2aWNlLmdldERldmljZURhdGEoKQ0KDQogICAgICAgICAgICAgICAgIyBEZXZpY2UgZGF0YSB3aGljaCBTdXBlci1HbHV1IGdldHMgZHVyaW5nIGVucm9sbG1lbnQNCiAgICAgIC
 AgICAgICAgICBpZiBkZXZpY2VfZGF0YSA9PSBOb25lOg0KICAgICAgICAgICAgICAgICAgICBjb250aW51ZQ0KDQogICAgICAgICAgICAgICAgcGxhdGZvcm0gPSBkZXZpY2VfZGF0YS5nZXRQbGF0Z
 m9ybSgpDQogICAgICAgICAgICAgICAgcHVzaF90b2tlbiA9IGRldmljZV9kYXRhLmdldFB1c2hUb2tlbigpDQogICAgICAgICAgICAgICAgZGVidWcgPSBGYWxzZQ0KDQogICAgICAgICAgICAgICAg
 aWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UocGxhdGZvcm0sICJpb3MiKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHkocHVzaF90b2tlbik6DQogICAgICAgICAgICAgICAgICAgICM
 gU2VuZGluZyBub3RpZmljYXRpb24gdG8gaU9TIHVzZXIncyBkZXZpY2UNCiAgICAgICAgICAgICAgICAgICAgaWYgc2VsZi5wdXNoQXBwbGVTZXJ2aWNlID09IE5vbmU6DQogICAgICAgICAgICAgIC
 AgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gU2VuZCBwdXNoIG5vdGlmaWNhdGlvbi4gQXBwbGUgcHVzaCBub3RpZmljYXRpb24gc2VydmljZSBpcyBub3QgZW5hYmxlZCINCiAgICAgICAgICAgI
 CAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRfbm90aWZpY2F0aW9uID0gVHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAg
 ICB0aXRsZSA9ICJTdXBlci1HbHV1Ig0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSA9ICJTdXBlci1HbHV1IGxvZ2luIHJlcXVlc3QgdG86ICVzIiAlIGNsaWVudF9yZWRpcmVjdF91cmk
 NCg0KICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbF9maWVsZHMgPSB7ICJyZXF1ZXN0IiA6IHN1cGVyX2dsdXVfcmVxdWVzdCB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZ0
 J1aWxkZXIgPSBBUE5TLm5ld1BheWxvYWQoKS5hbGVydEJvZHkobWVzc2FnZSkuYWxlcnRUaXRsZSh0aXRsZSkuc291bmQoImRlZmF1bHQiKQ0KICAgICAgICAgICAgICAgICAgICAgICAgbXNnQnVpb
 GRlci5jYXRlZ29yeSgnQUNUSU9OQUJMRScpLmJhZGdlKDApDQogICAgICAgICAgICAgICAgICAgICAgICBtc2dCdWlsZGVyLmZvck5ld3NzdGFuZCgpDQogICAgICAgICAgICAgICAgICAgICAgICBt
 c2dCdWlsZGVyLmN1c3RvbUZpZWxkcyhhZGRpdGlvbmFsX2ZpZWxkcykNCiAgICAgICAgICAgICAgICAgICAgICAgIHB1c2hfbWVzc2FnZSA9IG1zZ0J1aWxkZXIuYnVpbGQoKQ0KDQogICAgICAgICA
 gICAgICAgICAgICAgICBzZW5kX25vdGlmaWNhdGlvbl9yZXN1bHQgPSBzZWxmLnB1c2hBcHBsZVNlcnZpY2UucHVzaChwdXNoX3Rva2VuLCBwdXNoX21lc3NhZ2UpDQogICAgICAgICAgICAgICAgIC
 AgICAgICBpZiBkZWJ1ZzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gU2VuZCBpT1MgcHVzaCBub3RpZmljYXRpb24uIHRva2VuOiAnJXMnLCBtZXNzYWdlO
 iAnJXMnLCBzZW5kX25vdGlmaWNhdGlvbl9yZXN1bHQ6ICclcyciICUgKHB1c2hfdG9rZW4sIHB1c2hfbWVzc2FnZSwgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0KQ0KDQogICAgICAgICAgICAgICAg
 aWYgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UocGxhdGZvcm0sICJhbmRyb2lkIikgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5KHB1c2hfdG9rZW4pOg0KICAgICAgICAgICAgICAgICA
 gICAjIFNlbmRpbmcgbm90aWZpY2F0aW9uIHRvIEFuZHJvaWQgdXNlcidzIGRldmljZQ0KICAgICAgICAgICAgICAgICAgICBpZiBzZWxmLnB1c2hBbmRyb2lkU2VydmljZSA9PSBOb25lOg0KICAgIC
 AgICAgICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFNlbmQgcHVzaCBub3RpZmljYXRpb24uIEFuZHJvaWQgcHVzaCBub3RpZmljYXRpb24gc2VydmljZSBpcyBub3QgZW5hYmxlZCINC
 iAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRfbm90aWZpY2F0aW9uID0gVHJ1ZQ0KDQogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSA9ICJT
 dXBlci1HbHV1Ig0KICAgICAgICAgICAgICAgICAgICAgICAgbXNnQnVpbGRlciA9IE1lc3NhZ2UuQnVpbGRlcigpLmFkZERhdGEoIm1lc3NhZ2UiLCBzdXBlcl9nbHV1X3JlcXVlc3QpLmFkZERhdGE
 oInRpdGxlIiwgdGl0bGUpLmNvbGxhcHNlS2V5KCJzaW5nbGUiKS5jb250ZW50QXZhaWxhYmxlKFRydWUpDQogICAgICAgICAgICAgICAgICAgICAgICBwdXNoX21lc3NhZ2UgPSBtc2dCdWlsZGVyLm
 J1aWxkKCkNCg0KICAgICAgICAgICAgICAgICAgICAgICAgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0ID0gc2VsZi5wdXNoQW5kcm9pZFNlcnZpY2Uuc2VuZChwdXNoX21lc3NhZ2UsIHB1c2hfdG9rZ
 W4sIDMpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiBkZWJ1ZzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gU2VuZCBBbmRyb2lkIHB1c2ggbm90aWZp
 Y2F0aW9uLiB0b2tlbjogJyVzJywgbWVzc2FnZTogJyVzJywgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0OiAnJXMnIiAlIChwdXNoX3Rva2VuLCBwdXNoX21lc3NhZ2UsIHNlbmRfbm90aWZpY2F0aW9
 uX3Jlc3VsdCkNCg0KDQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBTZW5kIHB1c2ggbm90aWZpY2F0aW9uLiBzZW5kX25vdGlmaWNhdGlvbjogJyVzJywgc2VuZF9ub3RpZmljYXRpb25fcmVzdW
 x0OiAnJXMnIiAlIChzZW5kX25vdGlmaWNhdGlvbiwgc2VuZF9ub3RpZmljYXRpb25fcmVzdWx0KQ0KDQogICAgZGVmIGdldENsaWVudFJlZGlyZWNVcmkoc2VsZiwgc2Vzc2lvbl9hdHRyaWJ1dGVzK
 ToNCiAgICAgICAgaWYgbm90IHNlc3Npb25fYXR0cmlidXRlcy5jb250YWluc0tleSgicmVkaXJlY3RfdXJpIik6DQogICAgICAgICAgICByZXR1cm4gTm9uZQ0KDQogICAgICAgIHJldHVybiBzZXNz
 aW9uX2F0dHJpYnV0ZXMuZ2V0KCJyZWRpcmVjdF91cmkiKQ0KDQogICAgZGVmIHNldEV2ZW50Q29udGV4dFBhcmFtZXRlcnMoc2VsZiwgY29udGV4dCk6DQogICAgICAgIGlmIHNlbGYucmVnaXN0cmF
 0aW9uVXJpICE9IE5vbmU6DQogICAgICAgICAgICBjb250ZXh0LnNldCgiZXh0ZXJuYWxfcmVnaXN0cmF0aW9uX3VyaSIsIHNlbGYucmVnaXN0cmF0aW9uVXJpKQ0KDQogICAgICAgIGlmIHNlbGYuY3
 VzdG9tTGFiZWwgIT0gTm9uZToNCiAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzdXBlcl9nbHV1X2xhYmVsIiwgc2VsZi5jdXN0b21MYWJlbCkNCg0KICAgICAgICBjb250ZXh0LnNldCgic3VwZXJfZ
 2x1dV9xcl9vcHRpb25zIiwgc2VsZi5jdXN0b21Rck9wdGlvbnMpDQoNCiAgICBkZWYgYWRkR2VvbG9jYXRpb25EYXRhKHNlbGYsIHNlc3Npb25fYXR0cmlidXRlcywgc3VwZXJfZ2x1dV9yZXF1ZXN0
 X2RpY3Rpb25hcnkpOg0KICAgICAgICBpZiBzZXNzaW9uX2F0dHJpYnV0ZXMuY29udGFpbnNLZXkoInJlbW90ZV9pcCIpOg0KICAgICAgICAgICAgcmVtb3RlX2lwID0gc2Vzc2lvbl9hdHRyaWJ1dGV
 zLmdldCgicmVtb3RlX2lwIikNCiAgICAgICAgICAgIGlmIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5KHJlbW90ZV9pcCk6DQogICAgICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIFByZXBhcm
 UgZm9yIHN0ZXAgMi4gQWRkaW5nIHJlcV9pcCBhbmQgcmVxX2xvYyB0byBzdXBlcl9nbHV1X3JlcXVlc3QiDQogICAgICAgICAgICAgICAgc3VwZXJfZ2x1dV9yZXF1ZXN0X2RpY3Rpb25hcnlbJ3Jlc
 V9pcCddID0gcmVtb3RlX2lwDQoNCiAgICAgICAgICAgICAgICByZW1vdGVfbG9jX2RpYyA9IHNlbGYuZGV0ZXJtaW5lR2VvbG9jYXRpb25EYXRhKHJlbW90ZV9pcCkNCiAgICAgICAgICAgICAgICBp
 ZiByZW1vdGVfbG9jX2RpYyA9PSBOb25lOg0KICAgICAgICAgICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gUHJlcGFyZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gZGV0ZXJtaW5lIHJlbW90ZSB
 sb2NhdGlvbiBieSByZW1vdGUgSVAgJyVzJyIgJSByZW1vdGVfaXANCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuDQoNCiAgICAgICAgICAgICAgICByZW1vdGVfbG9jID0gIiVzLCAlcywgJXMiIC
 UgKCByZW1vdGVfbG9jX2RpY1snY291bnRyeSddLCByZW1vdGVfbG9jX2RpY1sncmVnaW9uTmFtZSddLCByZW1vdGVfbG9jX2RpY1snY2l0eSddICkNCiAgICAgICAgICAgICAgICByZW1vdGVfbG9jX
 2VuY29kZWQgPSB1cmxsaWIucXVvdGUocmVtb3RlX2xvYykNCiAgICAgICAgICAgICAgICBzdXBlcl9nbHV1X3JlcXVlc3RfZGljdGlvbmFyeVsncmVxX2xvYyddID0gcmVtb3RlX2xvY19lbmNvZGVk
 DQoNCiAgICBkZWYgZGV0ZXJtaW5lR2VvbG9jYXRpb25EYXRhKHNlbGYsIHJlbW90ZV9pcCk6DQogICAgICAgIHByaW50ICJTdXBlci1HbHV1LiBEZXRlcm1pbmUgcmVtb3RlIGxvY2F0aW9uLiByZW1
 vdGVfaXA6ICclcyciICUgcmVtb3RlX2lwDQogICAgICAgIGh0dHBTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKEh0dHBTZXJ2aWNlKQ0KDQogICAgICAgIGh0dHBfY2xpZW50ID0gaHR0cF
 NlcnZpY2UuZ2V0SHR0cHNDbGllbnQoKQ0KICAgICAgICBodHRwX2NsaWVudF9wYXJhbXMgPSBodHRwX2NsaWVudC5nZXRQYXJhbXMoKQ0KICAgICAgICBodHRwX2NsaWVudF9wYXJhbXMuc2V0SW50U
 GFyYW1ldGVyKENvcmVDb25uZWN0aW9uUE5hbWVzLkNPTk5FQ1RJT05fVElNRU9VVCwgMTUgKiAxMDAwKQ0KICAgICAgICANCiAgICAgICAgZ2VvbG9jYXRpb25fc2VydmljZV91cmwgPSAiaHR0cDov
 L2lwLWFwaS5jb20vanNvbi8lcz9maWVsZHM9NDkxNzciICUgcmVtb3RlX2lwDQogICAgICAgIGdlb2xvY2F0aW9uX3NlcnZpY2VfaGVhZGVycyA9IHsgIkFjY2VwdCIgOiAiYXBwbGljYXRpb24vanN
 vbiIgfQ0KDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIGh0dHBfc2VydmljZV9yZXNwb25zZSA9IGh0dHBTZXJ2aWNlLmV4ZWN1dGVHZXQoaHR0cF9jbGllbnQsIGdlb2xvY2F0aW9uX3NlcnZpY2
 VfdXJsLCAgZ2VvbG9jYXRpb25fc2VydmljZV9oZWFkZXJzKQ0KICAgICAgICAgICAgaHR0cF9yZXNwb25zZSA9IGh0dHBfc2VydmljZV9yZXNwb25zZS5nZXRIdHRwUmVzcG9uc2UoKQ0KICAgICAgI
 CBleGNlcHQ6DQogICAgICAgICAgICBwcmludCAiU3VwZXItR2x1dS4gRGV0ZXJtaW5lIHJlbW90ZSBsb2NhdGlvbi4gRXhjZXB0aW9uOiAiLCBzeXMuZXhjX2luZm8oKVsxXQ0KICAgICAgICAgICAg
 cmV0dXJuIE5vbmUNCg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBpZiBub3QgaHR0cFNlcnZpY2UuaXNSZXNwb25zZVN0YXN0dXNDb2RlT2soaHR0cF9yZXNwb25zZSk6DQogICAgICAgICAgICA
 gICAgcHJpbnQgIlN1cGVyLUdsdXUuIERldGVybWluZSByZW1vdGUgbG9jYXRpb24uIEdldCBpbnZhbGlkIHJlc3BvbnNlIGZyb20gdmFsaWRhdGlvbiBzZXJ2ZXI6ICIsIHN0cihodHRwX3Jlc3Bvbn
 NlLmdldFN0YXR1c0xpbmUoKS5nZXRTdGF0dXNDb2RlKCkpDQogICAgICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQ0KICAgICAgICAgICAgICAgIHJldHVybiBOb
 25lDQogICAgDQogICAgICAgICAgICByZXNwb25zZV9ieXRlcyA9IGh0dHBTZXJ2aWNlLmdldFJlc3BvbnNlQ29udGVudChodHRwX3Jlc3BvbnNlKQ0KICAgICAgICAgICAgcmVzcG9uc2Vfc3RyaW5n
 ID0gaHR0cFNlcnZpY2UuY29udmVydEVudGl0eVRvU3RyaW5nKHJlc3BvbnNlX2J5dGVzKQ0KICAgICAgICAgICAgaHR0cFNlcnZpY2UuY29uc3VtZShodHRwX3Jlc3BvbnNlKQ0KICAgICAgICBmaW5
 hbGx5Og0KICAgICAgICAgICAgaHR0cF9zZXJ2aWNlX3Jlc3BvbnNlLmNsb3NlQ29ubmVjdGlvbigpDQoNCiAgICAgICAgaWYgcmVzcG9uc2Vfc3RyaW5nID09IE5vbmU6DQogICAgICAgICAgICBwcm
 ludCAiU3VwZXItR2x1dS4gRGV0ZXJtaW5lIHJlbW90ZSBsb2NhdGlvbi4gR2V0IGVtcHR5IHJlc3BvbnNlIGZyb20gbG9jYXRpb24gc2VydmVyIg0KICAgICAgICAgICAgcmV0dXJuIE5vbmUNCiAgI
 CAgICAgDQogICAgICAgIHJlc3BvbnNlID0ganNvbi5sb2FkcyhyZXNwb25zZV9zdHJpbmcpDQogICAgICAgIA0KICAgICAgICBpZiBub3QgU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2UocmVz
 cG9uc2VbJ3N0YXR1cyddLCAic3VjY2VzcyIpOg0KICAgICAgICAgICAgcHJpbnQgIlN1cGVyLUdsdXUuIERldGVybWluZSByZW1vdGUgbG9jYXRpb24uIEdldCByZXNwb25zZSB3aXRoIHN0YXR1czo
 gJyVzJyIgJSByZXNwb25zZVsnc3RhdHVzJ10NCiAgICAgICAgICAgIHJldHVybiBOb25lDQoNCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlDQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!A51E.76DA,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample authentication module
displayName: basic
gluuStatus: false
inum: %(inumOrg)s!0011!A51E.76DA
oxLevel: 100
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcueGRp
 Lm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5hdXRoIGltcG9ydCBQZXJzb25BdXRoZW50aWNhdGlvblR5cGUKZnJvbSBvcmcueGRpLm94YXV0aC5zZXJ2aWNlIGltcG9ydCBVc2VyU2VydmljZQpmcm9
 tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyCgppbXBvcnQgamF2YQoKY2xhc3MgUGVyc29uQXV0aGVudGljYXRpb24oUGVyc29uQXV0aGVudGljYXRpb25UeXBlKToKICAgIGRlZiBfX2
 luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhd
 GlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJCYXNpYy4gSW5pdGlhbGl6YXRpb24iCiAgICAgICAgcHJpbnQgIkJhc2ljLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiCiAgICAgICAgcmV0
 dXJuIFRydWUgICAKCiAgICBkZWYgZGVzdHJveShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcHJpbnQgIkJhc2ljLiBEZXN0cm95IgogICAgICAgIHByaW50ICJCYXNpYy4
 gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW
 50aWNhdGlvbk1ldGhvZChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0a
 W9uTWV0aG9kKHNlbGYsIHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9u
 QXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGlmIChzdGVwID09IDEpOgogICAgICAgICAgICBwcmludCAiQmFzaWMuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxIgo
 KICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQ
 ogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlc
 i5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dvcmQpKToKICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gVXNl
 clNlcnZpY2UuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgICAgIGl
 mIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKCi
 AgICBkZWYgcHJlcGFyZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgI
 CAgcHJpbnQgIkJhc2ljLiBQcmVwYXJlIGZvciBTdGVwIDEiCiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIGdldEV4
 dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGdldENvdW50QXV0aGVudGljYXRpb25TdGV
 wcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIDEKCiAgICBkZWYgZ2V0UGFnZUZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOg
 ogICAgICAgIHJldHVybiAiIgoKICAgIGRlZiBsb2dvdXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKToKICAgICAgICByZXR1cm4gVHJ1ZQo=
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!A910.56AB,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample script for SCIM events
displayName: scim_event_handler
gluuStatus: false
inum: %(inumOrg)s!0011!A910.56AB
oxConfigurationProperty: {"value1":"testProp1","value2":"Test value 1","description":""}
oxConfigurationProperty: {"value1":"testProp2","value2":"Test value 2","description":""}
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveFRydXN0IGlzIGF2YWlsYWJsZSB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKDIwMDgpLiBTZWUgaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVCBmb3IgZnVsbCB0ZXh0L
 g0KIyBDb3B5cmlnaHQgKGMpIDIwMTQsIEdsdXUNCiMNCiMgQXV0aG9yOiBWYWwgUGVjYW9jbw0KIw0KZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zY2ltIGltcG9ydCBTY2lt
 VHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXINCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdA0KZnJvbSBvcmcuZ2x1dS5
 veHRydXN0LmxkYXAuc2VydmljZSBpbXBvcnQgSVBlcnNvblNlcnZpY2UsIFBlcnNvblNlcnZpY2UNCmZyb20gb3JnLmdsdXUub3h0cnVzdC5tb2RlbCBpbXBvcnQgR2x1dUN1c3RvbVBlcnNvbg0KDQ
 ppbXBvcnQgamF2YQ0KDQpjbGFzcyBTY2ltRXZlbnRIYW5kbGVyKFNjaW1UeXBlKToNCg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3Vyc
 mVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU2NpbUV2ZW50SGFuZGxl
 ciAoaW5pdCk6IEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSINCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiA
 gICAgICAgcHJpbnQgIlNjaW1FdmVudEhhbmRsZXIgKGRlc3Ryb3kpOiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgICByZXR1cm4gVHJ1ZSAgIA0KDQogICAgZGVmIGdldEFwaVZlcnNpb2
 4oc2VsZik6DQogICAgICAgIHJldHVybiAxDQoNCiAgICBkZWYgY3JlYXRlVXNlcihzZWxmLCB1c2VyLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQoNCiAgICAgICAgcHJpbnQgIlNjaW1FdmVud
 EhhbmRsZXIgKGNyZWF0ZVVzZXIpOiBDdXJyZW50IGlkID0gIiArIHVzZXIuZ2V0VWlkKCkNCg0KICAgICAgICB0ZXN0UHJvcDEgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInRlc3RQcm9w
 MSIpLmdldFZhbHVlMigpDQogICAgICAgIHRlc3RQcm9wMiA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgidGVzdFByb3AyIikuZ2V0VmFsdWUyKCkNCg0KICAgICAgICBwcmludCAiU2NpbUV
 2ZW50SGFuZGxlciAoY3JlYXRlVXNlcik6IHRlc3RQcm9wMSA9ICIgKyB0ZXN0UHJvcDENCiAgICAgICAgcHJpbnQgIlNjaW1FdmVudEhhbmRsZXIgKGNyZWF0ZVVzZXIpOiB0ZXN0UHJvcDIgPSAiIC
 sgdGVzdFByb3AyDQoNCiAgICAgICAgcmV0dXJuIFRydWUNCg0KICAgIGRlZiB1cGRhdGVVc2VyKHNlbGYsIHVzZXIsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCiAgICAgICAgcGVyc29uU2Vyd
 mljZSA9IFBlcnNvblNlcnZpY2UuaW5zdGFuY2UoKQ0KICAgICAgICBvbGRVc2VyID0gcGVyc29uU2VydmljZS5nZXRQZXJzb25CeVVpZCh1c2VyLmdldFVpZCgpKQ0KICAgICAgICBwcmludCAiU2Np
 bUV2ZW50SGFuZGxlciAodXBkYXRlVXNlcik6IE9sZCBkaXNwbGF5TmFtZSA9ICIgKyBvbGRVc2VyIC5nZXREaXNwbGF5TmFtZSgpDQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyICh1cGR
 hdGVVc2VyKTogTmV3IGRpc3BsYXlOYW1lID0gIiArIHVzZXIuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGRlbGV0ZVVzZXIoc2VsZiwgdXNlciwgY29uZm
 lndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiU2NpbUV2ZW50SGFuZGxlciAoZGVsZXRlVXNlcik6IEN1cnJlbnQgaWQgPSAiICsgdXNlci5nZXRVaWQoKQ0KICAgICAgICByZXR1c
 m4gVHJ1ZQ0KDQogICAgZGVmIGNyZWF0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyIChjcmVhdGVHcm91
 cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIHVwZGF0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25
 maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlbnRIYW5kbGVyICh1cGRhdGVHcm91cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU
 5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0KDQogICAgZGVmIGRlbGV0ZUdyb3VwKHNlbGYsIGdyb3VwLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJTY2ltRXZlb
 nRIYW5kbGVyIChkZWxldGVHcm91cCk6IEN1cnJlbnQgZGlzcGxheU5hbWUgPSAiICsgZ3JvdXAuZ2V0RGlzcGxheU5hbWUoKQ0KICAgICAgICByZXR1cm4gVHJ1ZQ0K
oxScriptType: scim
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!D40C.1CA3,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Inbound SAML via Asimba authentication module
displayName: asimba
gluuStatus: false
inum: %(inumOrg)s!0011!D40C.1CA3
oxConfigurationProperty: {"value1":"asimba_saml_certificate_file","value2":"/etc/certs/saml.pem","description":""}
oxConfigurationProperty: {"value1":"asimba_entity_id","value2":"https://%(hostname)s/saml","description":""}
oxConfigurationProperty: {"value1":"saml_deployment_type","value2":"enroll","description":""}
oxConfigurationProperty: {"value1":"saml_name_identifier_format","value2":"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent","description":""}
oxConfigurationProperty: {"value1":"saml_use_authn_context","value2":"true","description":""}
oxConfigurationProperty: {"value1":"saml_idp_sso_target_url","value2":"https://%(hostname)s/asimba/profiles/saml2/sso/web","description":""}
oxConfigurationProperty: {"value1":"user_object_classes","value2":"inetOrgPerson, eduPerson, ox-E22231E020EC4F2C0001805B74E4","description":""}
oxConfigurationProperty: {"value1":"saml_idp_attributes_list","value2":"urn:oid:0.9.2342.19200300.100.1.1, urn:oid:0.9.2342.19200300.100.1.3","descripti
 on":""}
oxConfigurationProperty: {"value1":"saml_local_attributes_list","value2":"uid, mail","description":""}
oxConfigurationProperty: {"value1":"enforce_uniqueness_attr_list","value2":"uid, mail","description":""}
oxLevel: 50
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcuamJvc3Muc2VhbS5jb250ZXh0cyBpbXBvcnQgQ29udGV4dCwgQ29udGV4dHMKZnJv
 bSBvcmcuamJvc3Muc2VhbS5zZWN1cml0eSBpbXBvcnQgSWRlbnRpdHkKZnJvbSBvcmcuamJvc3Muc2VhbSBpbXBvcnQgQ29tcG9uZW50CmZyb20gamF2YXguZmFjZXMuY29udGV4dCBpbXBvcnQgRmF
 jZXNDb250ZXh0CmZyb20gb3JnLmpib3NzLnNlYW0uZmFjZXMgaW1wb3J0IEZhY2VzTWVzc2FnZXMKZnJvbSBvcmcuamJvc3Muc2VhbS5pbnRlcm5hdGlvbmFsIGltcG9ydCBTdGF0dXNNZXNzYWdlCm
 Zyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlc
 lNlcnZpY2UsIENsaWVudFNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgQXR0cmlidXRlU2VydmljZQpmcm9tIG9yZy54ZGkub3hhdXRoLnNlcnZpY2UubmV0IGltcG9ydCBIdHRwU2Vydmlj
 ZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyLCBBcnJheUhlbHBlciwgVXRpbApmcm9tIG9yZy5nbHV1LnNhbWwgaW1wb3J0IFNhbWxDb25maWd1cmF0aW9uLCBBdXRoUmVxdWV
 zdCwgUmVzcG9uc2UKZnJvbSBqYXZhLnV0aWwgaW1wb3J0IEFycmF5cywgQXJyYXlMaXN0LCBIYXNoTWFwLCBJZGVudGl0eUhhc2hNYXAKZnJvbSBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24gaW
 1wb3J0IFVzZXIKZnJvbSBvcmcueGRpLmxkYXAubW9kZWwgaW1wb3J0IEN1c3RvbUF0dHJpYnV0ZQpmcm9tIGphdmEubGFuZyBpbXBvcnQgU3RyaW5nLCBTdHJpbmdCdWlsZGVyCgpmcm9tIGphcnJhe
 SBpbXBvcnQgYXJyYXkKaW1wb3J0IGphdmEKCnRyeToKICAgIGltcG9ydCBqc29uCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIGltcG9ydCBzaW1wbGVqc29uIGFzIGpzb24KCmNsYXNzIFBlcnNvbkF1
 dGhlbnRpY2F0aW9uKFBlcnNvbkF1dGhlbnRpY2F0aW9uVHlwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgY3VycmVudFRpbWVNaWxsaXMpOgogICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXM
 gPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIG
 FzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoImFzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUiKS5nZXRWYWx1ZTIoKQogICAgICAgIHNhb
 WxfaWRwX3Nzb190YXJnZXRfdXJsID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX2lkcF9zc29fdGFyZ2V0X3VybCIpLmdldFZhbHVlMigpCiAgICAgICAgYXNpbWJhX2VudGl0eV9p
 ZCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiYXNpbWJhX2VudGl0eV9pZCIpLmdldFZhbHVlMigpCiAgICAgICAgc2FtbF91c2VfYXV0aG5fY29udGV4dCA9IFN0cmluZ0hlbHBlci50b0J
 vb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3VzZV9hdXRobl9jb250ZXh0IikuZ2V0VmFsdWUyKCksIFRydWUpCiAgICAgICAgaWYgKHNhbWxfdXNlX2F1dGhuX2NvbnRleH
 QpOgogICAgICAgICAgICBzYW1sX25hbWVfaWRlbnRpZmllcl9mb3JtYXQgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInNhbWxfbmFtZV9pZGVudGlmaWVyX2Zvcm1hdCIpLmdldFZhbHVlM
 igpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2FtbF9uYW1lX2lkZW50aWZpZXJfZm9ybWF0ID0gTm9uZQoKICAgICAgICBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSA9IHNlbGYubG9hZENlcml0
 aWZpY2F0ZShhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZV9maWxlKQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkpOgogICAgICAgICAgICBwcml
 udCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIEZpbGUgd2l0aCB4NTA5IGNlcnRpZmljYXRlIHNob3VsZCBiZSBub3QgZW1wdHkiCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBzYW1sQ2
 9uZmlndXJhdGlvbiA9IFNhbWxDb25maWd1cmF0aW9uKCkKCiAgICAgICAgIyBTZXQgdGhlIGlzc3VlciBvZiB0aGUgYXV0aGVudGljYXRpb24gcmVxdWVzdC4gVGhpcyB3b3VsZCB1c3VhbGx5IGJlI
 HRoZSBVUkwgb2YgdGhlIGlzc3Vpbmcgd2ViIGFwcGxpY2F0aW9uCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24uc2V0SXNzdWVyKGFzaW1iYV9lbnRpdHlfaWQpCgogICAgICAgICMgVGVsbHMgdGhl
 IElkUCB0byByZXR1cm4gYSBwZXJzaXN0ZW50IGlkZW50aWZpZXIgZm9yIHRoZSB1c2VyCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24uc2V0TmFtZUlkZW50aWZpZXJGb3JtYXQoc2FtbF9uYW1lX2l
 kZW50aWZpZXJfZm9ybWF0KQogIAogICAgICAgICMgVGhlIFVSTCBhdCB0aGUgSWRlbnRpdHkgUHJvdmlkZXIgd2hlcmUgdG8gdGhlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3Qgc2hvdWxkIGJlIHNlbn
 QKICAgICAgICBzYW1sQ29uZmlndXJhdGlvbi5zZXRJZHBTc29UYXJnZXRVcmwoc2FtbF9pZHBfc3NvX3RhcmdldF91cmwpCgogICAgICAgICMgRW5hYmxlZGlhYmxlIFJlcXVlc3RlZEF1dGhuQ29ud
 GV4dAogICAgICAgIHNhbWxDb25maWd1cmF0aW9uLnNldFVzZVJlcXVlc3RlZEF1dGhuQ29udGV4dChzYW1sX3VzZV9hdXRobl9jb250ZXh0KQogICAgICAgIAogICAgICAgICMgTG9hZCB4NTA5IGNl
 cnRpZmljYXRlCiAgICAgICAgc2FtbENvbmZpZ3VyYXRpb24ubG9hZENlcnRpZmljYXRlRnJvbVN0cmluZyhhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkKICAgICAgICAKICAgICAgICBzZWxmLnNhbWx
 Db25maWd1cmF0aW9uID0gc2FtbENvbmZpZ3VyYXRpb24KCiAgICAgICAgc2VsZi5nZW5lcmF0ZU5hbWVJZCA9IEZhbHNlCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbn
 NLZXkoInNhbWxfZ2VuZXJhdGVfbmFtZV9pZCIpOgogICAgICAgICAgICBzZWxmLmdlbmVyYXRlTmFtZUlkID0gU3RyaW5nSGVscGVyLnRvQm9vbGVhbihjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZ
 XQoInNhbWxfZ2VuZXJhdGVfbmFtZV9pZCIpLmdldFZhbHVlMigpLCBGYWxzZSkKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBzYW1sX2dlbmVyYXRlX25h
 bWVfaWQgaXMgJXMiICUgc2VsZi5nZW5lcmF0ZU5hbWVJZAoKICAgICAgICBzZWxmLnVwZGF0ZVVzZXIgPSBGYWxzZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V
 5KCJzYW1sX3VwZGF0ZV91c2VyIik6CiAgICAgICAgICAgIHNlbGYudXBkYXRlVXNlciA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3VwZG
 F0ZV91c2VyIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBwcm9wZXJ0eSBzYW1sX3VwZGF0ZV91c2VyIGlzICVzIiAlIHNlbGYud
 XBkYXRlVXNlcgoKICAgICAgICBzZWxmLnVzZXJPYmplY3RDbGFzc2VzID0gTm9uZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJ1c2VyX29iamVjdF9jbGFz
 c2VzIik6CiAgICAgICAgICAgIHNlbGYudXNlck9iamVjdENsYXNzZXMgPSBzZWxmLnByZXBhcmVVc2VyT2JqZWN0Q2xhc3Nlcyhjb25maWd1cmF0aW9uQXR0cmlidXRlcykKCiAgICAgICAgc2VsZi5
 1c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzID0gTm9uZQogICAgICAgIGlmIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJlbmZvcmNlX3VuaXF1ZW5lc3NfYXR0cl9saX
 N0Iik6CiAgICAgICAgICAgIHNlbGYudXNlckVuZm9yY2VBdHRyaWJ1dGVzVW5pcXVlbmVzcyA9IHNlbGYucHJlcGFyZVVzZXJFbmZvcmNlVW5pcXVlbmVzc0F0dHJpYnV0ZXMoY29uZmlndXJhdGlvb
 kF0dHJpYnV0ZXMpCgogICAgICAgIHNlbGYuYXR0cmlidXRlc01hcHBpbmcgPSBOb25lCiAgICAgICAgaWYgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInNhbWxfaWRwX2F0dHJp
 YnV0ZXNfbWFwcGluZyIpOgogICAgICAgICAgICBzYW1sX2lkcF9hdHRyaWJ1dGVzX21hcHBpbmcgPSBjb25maWd1cmF0aW9uQXR0cmlidXRlcy5nZXQoInNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGl
 uZyIpLmdldFZhbHVlMigpCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNFbXB0eShzYW1sX2lkcF9hdHRyaWJ1dGVzX21hcHBpbmcpKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLi
 BJbml0aWFsaXphdGlvbi4gVGhlIHByb3BlcnR5IHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZyBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2VsZ
 i5hdHRyaWJ1dGVzTWFwcGluZyA9IHNlbGYucHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZykKICAgICAgICAgICAgaWYgKHNlbGYuYXR0cmlidXRlc01h
 cHBpbmcgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gSW5pdGlhbGl6YXRpb24uIFRoZSBhdHRyaWJ1dGVzIG1hcHBpbmcgaXNuJ3QgdmFsaWQiCiAgICAgICAgICAgICAgICB
 yZXR1cm4gRmFsc2UKCiAgICAgICAgc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlID0gTm9uZQogICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgic2FtbF9leHRlbn
 Npb25fbW9kdWxlIikpOgogICAgICAgICAgICBzYW1sX2V4dGVuc2lvbl9tb2R1bGVfbmFtZSA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9leHRlbnNpb25fbW9kdWxlIikuZ2V0V
 mFsdWUyKCkKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlID0gX19pbXBvcnRfXyhzYW1sX2V4dGVuc2lvbl9tb2R1bGVfbmFtZSkKICAgICAg
 ICAgICAgICAgIHNhbWxfZXh0ZW5zaW9uX21vZHVsZV9pbml0X3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvbk1vZHVsZS5pbml0KGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKQogICAgICAgICAgICA
 gICAgaWYgKG5vdCBzYW1sX2V4dGVuc2lvbl9tb2R1bGVfaW5pdF9yZXN1bHQpOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBleGNlcHQgSW1wb3J0RXJyb3IsIG
 V4OgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEluaXRpYWxpemF0aW9uLiBGYWlsZWQgdG8gbG9hZCBzYW1sX2V4dGVuc2lvbl9tb2R1bGU6ICclcyciICUgc2FtbF9leHRlbnNpb25fbW9kd
 WxlX25hbWUKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBJbml0aWFsaXphdGlvbi4gVW5leHBlY3RlZCBlcnJvcjoiLCBleAogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAg
 ICAgIAogICAgICAgIHNlbGYuZGVidWdFbnJvbGxtZW50ID0gRmFsc2UKCiAgICAgICAgcHJpbnQgIlNhbWwuIEluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAo
 KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiU2FtbC4gRGVzdHJveSIKICAgICAgICBwcmludCAiU2FtbC4gRGVzdHJveWVkIHN1Y2
 Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogICAgZGVmIGlzVmFsaWRBdXRoZW50aWNhdGlvbk1ldGhvZ
 ChzZWxmLCB1c2FnZVR5cGUsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBbHRlcm5hdGl2ZUF1dGhlbnRpY2F0aW9uTWV0aG9kKHNlbGYs
 IHVzYWdlVHlwZSwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHJldHVybiBOb25lCgogICAgZGVmIGF1dGhlbnRpY2F0ZShzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmV
 xdWVzdFBhcmFtZXRlcnMsIHN0ZXApOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGF1dGhlbnRpY2F0aW9uU2VydmljZSA9IENvbXBvbmVudC5nZX
 RJbnN0YW5jZShBdXRoZW50aWNhdGlvblNlcnZpY2UpCiAgICAgICAgdXNlclNlcnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoVXNlclNlcnZpY2UpCgogICAgICAgIHNhbWxfbWFwX3VzZXIgP
 SBGYWxzZQogICAgICAgIHNhbWxfZW5yb2xsX3VzZXIgPSBGYWxzZQogICAgICAgIHNhbWxfZW5yb2xsX2FsbF91c2VyX2F0dHIgPSBGYWxzZQogICAgICAgICMgVXNlIHNhbWxfZGVwbG95bWVudF90
 eXBlIG9ubHkgaWYgdGhlcmUgaXMgbm8gYXR0cmlidXRlcyBtYXBwaW5nCiAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX2RlcGxveW1lbnRfdHlwZSI
 pKToKICAgICAgICAgICAgc2FtbF9kZXBsb3ltZW50X3R5cGUgPSBTdHJpbmdIZWxwZXIudG9Mb3dlckNhc2UoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX2RlcGxveW1lbnRfdHlwZS
 IpLmdldFZhbHVlMigpKQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHNhbWxfZGVwbG95bWVudF90eXBlLCAibWFwIikpOgogICAgICAgI
 CAgICAgICAgc2FtbF9tYXBfdXNlciA9IFRydWUKCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShzYW1sX2RlcGxveW1lbnRfdHlwZSwgImVucm9sbCIpKToKICAg
 ICAgICAgICAgICAgIHNhbWxfZW5yb2xsX3VzZXIgPSBUcnVlCgogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmVxdWFsc0lnbm9yZUNhc2Uoc2FtbF9kZXBsb3ltZW50X3R5cGUsICJlbnJvbGx
 fYWxsX2F0dHIiKSk6CiAgICAgICAgICAgICAgICBzYW1sX2Vucm9sbF9hbGxfdXNlcl9hdHRyID0gVHJ1ZQoKICAgICAgICBzYW1sX2FsbG93X2Jhc2ljX2xvZ2luID0gRmFsc2UKICAgICAgICBpZi
 AoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuY29udGFpbnNLZXkoInNhbWxfYWxsb3dfYmFzaWNfbG9naW4iKSk6CiAgICAgICAgICAgIHNhbWxfYWxsb3dfYmFzaWNfbG9naW4gPSBTdHJpbmdIZWxwZ
 XIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9hbGxvd19iYXNpY19sb2dpbiIpLmdldFZhbHVlMigpLCBGYWxzZSkKCiAgICAgICAgdXNlX2Jhc2ljX2F1dGggPSBG
 YWxzZQogICAgICAgIGlmIChzYW1sX2FsbG93X2Jhc2ljX2xvZ2luKToKICAgICAgICAgICAgIyBEZXRlY3QgaWYgdXNlciB1c2VkIGJhc2ljIGF1dGhuZXRpY2F0aW9uIG1ldGhvZAogICAgICAgICA
 gICBjcmVkZW50aWFscyA9IElkZW50aXR5Lmluc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQoKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgIC
 AgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQogICAgICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzTm90RW1wdHkodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyL
 mlzTm90RW1wdHkodXNlcl9wYXNzd29yZCkpOgogICAgICAgICAgICAgICAgdXNlX2Jhc2ljX2F1dGggPSBUcnVlCgogICAgICAgIGlmICgoc3RlcCA9PSAxKSBhbmQgc2FtbF9hbGxvd19iYXNpY19s
 b2dpbiBhbmQgdXNlX2Jhc2ljX2F1dGgpOgogICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEJhc2ljIGF1dGhlbnRpY2F0aW9uIgoKICAgICAgICAgICAgY29
 udGV4dC5zZXQoInNhbWxfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgIC
 AgdXNlcl9uYW1lID0gY3JlZGVudGlhbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQoKICAgICAgICAgICAgbG9nZ2VkX
 2luID0gRmFsc2UKICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfbmFtZSkgYW5kIFN0cmluZ0hlbHBlci5pc05vdEVtcHR5U3RyaW5nKHVzZXJfcGFzc3dv
 cmQpKToKICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQogICAgICAgICAgICAgICAgbG9nZ2VkX2luID0gdXNlclNlcnZpY2UuYXV
 0aGVudGljYXRlKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCkKCiAgICAgICAgICAgIGlmIChub3QgbG9nZ2VkX2luKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgcm
 V0dXJuIFRydWUKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMSIKCiAgICAgICAgICAgIGN1cnJlbnRTYW1sQ29uZ
 mlndXJhdGlvbiA9IHNlbGYuZ2V0Q3VycmVudFNhbWxDb25maWd1cmF0aW9uKHNlbGYuc2FtbENvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykK
 ICAgICAgICAgICAgaWYgKGN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEuIENsaWVudCBzYW1sIGN
 vbmZpZ3VyYXRpb24gaXMgaW52YWxpZCIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2FtbF9yZXNwb25zZV9hcnJheSA9IHJlcXVlc3RQYXJhbWV0ZXJzLmdldCgiU0
 FNTFJlc3BvbnNlIikKICAgICAgICAgICAgaWYgQXJyYXlIZWxwZXIuaXNFbXB0eShzYW1sX3Jlc3BvbnNlX2FycmF5KToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZ
 m9yIHN0ZXAgMS4gc2FtbF9yZXNwb25zZSBpcyBlbXB0eSIKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgc2FtbF9yZXNwb25zZSA9IHNhbWxfcmVzcG9uc2VfYXJyYXlb
 MF0KCiAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gc2FtbF9yZXNwb25zZTogJyVzJyIgJSBzYW1sX3Jlc3BvbnNlCgogICAgICAgICAgICBzYW1sUmVzcG9
 uc2UgPSBSZXNwb25zZShjdXJyZW50U2FtbENvbmZpZ3VyYXRpb24pCiAgICAgICAgICAgIHNhbWxSZXNwb25zZS5sb2FkWG1sRnJvbUJhc2U2NChzYW1sX3Jlc3BvbnNlKQogICAgICAgICAgICAKIC
 AgICAgICAgICAgc2FtbF92YWxpZGF0ZV9yZXNwb25zZSA9IFRydWUKICAgICAgICAgICAgaWYgKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX3ZhbGlkYXRlX3Jlc3Bvb
 nNlIikpOgogICAgICAgICAgICAgICAgc2FtbF92YWxpZGF0ZV9yZXNwb25zZSA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJzYW1sX3ZhbGlkYXRl
 X3Jlc3BvbnNlIikuZ2V0VmFsdWUyKCksIEZhbHNlKQoKICAgICAgICAgICAgaWYgKHNhbWxfdmFsaWRhdGVfcmVzcG9uc2UpOgogICAgICAgICAgICAgICAgaWYgKG5vdCBzYW1sUmVzcG9uc2UuaXN
 WYWxpZCgpKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIHNhbWxfcmVzcG9uc2UgaXNuJ3QgdmFsaWQiCgogICAgICAgICAgICBzYW1sX3
 Jlc3BvbnNlX2F0dHJpYnV0ZXMgPSBzYW1sUmVzcG9uc2UuZ2V0QXR0cmlidXRlcygpCiAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gYXR0cmlidXRlczogJ
 yVzJyIgJSBzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIChzYW1sX21hcF91c2VyKToKICAgICAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZWxm
 LmdldFNhbWxOYW1lSWQoc2FtbFJlc3BvbnNlKQogICAgICAgICAgICAgICAgaWYgc2FtbF91c2VyX3VpZCA9PSBOb25lOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICA
 gICAgICAgICMgVXNlIG1hcHBpbmcgdG8gbG9jYWwgSURQIHVzZXIKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIH
 VzZXIgYnkgb3hFeHRlcm5hbFVpZDogc2FtbDogJyVzJyIgJSBzYW1sX3VzZXJfdWlkCgogICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGUgaXMgdXNlciB3aXRoIHNwZWNpZmllZCBzYW1sX3VzZ
 XJfdWlkCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiICUgc2FtbF91c2VyX3Vp
 ZCkKCiAgICAgICAgICAgICAgICBpZiAoZmluZF91c2VyX2J5X3VpZCA9PSBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWx
 lZCB0byBmaW5kIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDIiCiAgICAgICAgICAgIC
 AgICAgICAgY29udGV4dC5zZXQoInNhbWxfY291bnRfbG9naW5fc3RlcHMiLCAyKQogICAgICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzYW1sX3VzZXJfdWlkIiwgc2FtbF91c2VyX3VpZCkKI
 CAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQoKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHBy
 aW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB1c2V
 yX2F1dGhlbnRpY2F0ZWQgPSBhdXRoZW50aWNhdGlvblNlcnZpY2UuYXV0aGVudGljYXRlKGZvdW5kX3VzZXJfbmFtZSkKICAgICAgICAgICAgICAgIGlmICh1c2VyX2F1dGhlbnRpY2F0ZWQgPT0gRm
 Fsc2UpOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VyIgogICAgICAgICAgICAgICAgICAgI
 HJldHVybiBGYWxzZQogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gU2V0dGluZyBjb3VudCBzdGVwcyB0byAxIgogICAgICAg
 ICAgICAgICAgY29udGV4dC5zZXQoInNhbWxfY291bnRfbG9naW5fc3RlcHMiLCAxKQoKICAgICAgICAgICAgICAgIHBvc3RfbG9naW5fcmVzdWx0ID0gc2VsZi5zYW1sRXh0ZW5zaW9uUG9zdExvZ2l
 uKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBmaW5kX3VzZXJfYnlfdWlkKQogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBwb3N0X2xvZ2luX3Jlc3
 VsdDogJyVzJyIgJSBwb3N0X2xvZ2luX3Jlc3VsdAoKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0X2xvZ2luX3Jlc3VsdAogICAgICAgICAgICBlbGlmIChzYW1sX2Vucm9sbF91c2VyKToKICAgI
 CAgICAgICAgICAgICMgQ29udmVydCBTQU1MIHJlc3BvbnNlIHRvIHVzZXIgZW50cnkKICAgICAgICAgICAgICAgIG5ld1VzZXIgPSBzZWxmLmdldE1hcHBlZFVzZXIoY29uZmlndXJhdGlvbkF0dHJp
 YnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMpCgogICAgICAgICAgICAgICAgc2FtbF91c2VyX3VpZCA9IHNlbGYuZ2V0TmFtZUlkKHNhbWxSZXNwb25zZSw
 gbmV3VXNlcikKICAgICAgICAgICAgICAgIGlmIHNhbWxfdXNlcl91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBzZWxmLnNldERlZm
 F1bHRVaWQobmV3VXNlciwgc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgIG5ld1VzZXIuc2V0QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiICUgc2FtbF91c2VyX3VpZCkKC
 iAgICAgICAgICAgICAgICAjIFVzZSBhdXRvIGVucm9sbG1lbnQgdG8gbG9jYWwgSURQCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEF0dGVtcHRp
 bmcgdG8gZmluZCB1c2VyIGJ5IG94RXh0ZXJuYWxVaWQ6IHNhbWw6ICclcyciICUgc2FtbF91c2VyX3VpZAoKICAgICAgICAgICAgICAgICMgQ2hlY2sgaWYgdGhlcmUgaXMgdXNlciB3aXRoIHNwZWN
 pZmllZCBzYW1sX3VzZXJfdWlkCiAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJveEV4dGVybmFsVWlkIiwgInNhbWw6JXMiIC
 Ugc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgIGlmIGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZToKICAgICAgICAgICAgICAgICAgICAjIEF1dG8gdXNlciBlbnJvbGxtZW50CiAgICAgICAgI
 CAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBUaGVyZSBpcyBubyB1c2VyIGluIExEQVAuIEFkZGluZyB1c2VyIHRvIGxvY2FsIExEQVAiCgogICAgICAgICAg
 ICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBhZGQgdXNlciAnJXMnIHdpdGggbmV4dCBhdHRyaWJ1dGVzOiAnJXMnIiAlIChzYW1sX3V
 zZXJfdWlkLCBuZXdVc2VyLmdldEN1c3RvbUF0dHJpYnV0ZXMoKSkKICAgICAgICAgICAgICAgICAgICB1c2VyX3VuaXF1ZSA9IHNlbGYuY2hlY2tVc2VyVW5pcXVlbmVzcyhuZXdVc2VyKQogICAgIC
 AgICAgICAgICAgICAgIGlmIG5vdCB1c2VyX3VuaXF1ZToKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYWRkIHVzZ
 XI6ICclcycuIFVzZXIgbm90IHVuaXF1ZSIgJSBuZXdVc2VyLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2VzTWVzc2FnZXMgPSBGYWNlc01lc3NhZ2VzLmluc3RhbmNlKCkK
 ICAgICAgICAgICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdlcy5hZGQoU3RhdHVzTWVzc2FnZS5TZXZlcml0eS5FUlJPUiwgIkZhaWxlZCB0byBlbnJvbGwuIFVzZXIgd2l0aCBzYW1lIGtleSBhdHR
 yaWJ1dGVzIGV4aXN0IGFscmVhZHkiKQogICAgICAgICAgICAgICAgICAgICAgICBGYWNlc0NvbnRleHQuZ2V0Q3VycmVudEluc3RhbmNlKCkuZ2V0RXh0ZXJuYWxDb250ZXh0KCkuZ2V0Rmxhc2goKS
 5zZXRLZWVwTWVzc2FnZXMoVHJ1ZSkKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5hZ
 GRVc2VyKG5ld1VzZXIsIFRydWUpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBBZGRlZCBuZXcgdXNlciB3aXRoIFVJRDogJyVzJyIgJSBm
 aW5kX3VzZXJfYnlfdWlkLmdldFVzZXJJZCgpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGlmIHNlbGYudXBkYXRlVXNlcjoKICAgICAgICAgICAgICAgICAgICAgICA
 gcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBBdHRlbXB0aW5nIHRvIHVwZGF0ZSB1c2VyICclcycgd2l0aCBuZXh0IGF0dHJpYnV0ZXM6ICclcyciICUgKHNhbWxfdXNlcl91aW
 QsIG5ld1VzZXIuZ2V0Q3VzdG9tQXR0cmlidXRlcygpKQogICAgICAgICAgICAgICAgICAgICAgICBmaW5kX3VzZXJfYnlfdWlkLnNldEN1c3RvbUF0dHJpYnV0ZXMobmV3VXNlci5nZXRDdXN0b21Bd
 HRyaWJ1dGVzKCkpCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJTZXJ2aWNlLnVwZGF0ZVVzZXIoZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwu
 IEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBVcGRhdGVkIHVzZXIgd2l0aCBVSUQ6ICclcyciICUgc2FtbF91c2VyX3VpZAoKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXN
 lcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbm
 FtZQoKICAgICAgICAgICAgICAgIHVzZXJfYXV0aGVudGljYXRlZCA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRfdXNlcl9uYW1lKQogICAgICAgICAgICAgICAgaWYgK
 HVzZXJfYXV0aGVudGljYXRlZCA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gYXV0aGVudGljYXRlIHVz
 ZXI6ICclcyciICUgZm91bmRfdXNlcl9uYW1lCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCA
 xLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgic2FtbF9jb3VudF9sb2dpbl9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdF9sb2dpbl
 9yZXN1bHQgPSBzZWxmLnNhbWxFeHRlbnNpb25Qb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZpbmRfdXNlcl9ieV91aWQpCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0a
 GVudGljYXRlIGZvciBzdGVwIDEuIHBvc3RfbG9naW5fcmVzdWx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RfbG9naW5fcmVzdWx0CiAgICAg
 ICAgICAgIGVsaWYgKHNhbWxfZW5yb2xsX2FsbF91c2VyX2F0dHIpOgogICAgICAgICAgICAgICAgIyBDb252ZXJ0IFNBTUwgcmVzcG9uc2UgdG8gdXNlciBlbnRyeQogICAgICAgICAgICAgICAgbmV
 3VXNlciA9IHNlbGYuZ2V0TWFwcGVkQWxsQXR0cmlidXRlc1VzZXIoc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzKQoKICAgICAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZWxmLmdldE5hbWVJZC
 hzYW1sUmVzcG9uc2UsIG5ld1VzZXIpCiAgICAgICAgICAgICAgICBpZiBzYW1sX3VzZXJfdWlkID09IE5vbmU6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgI
 CAgc2VsZi5zZXREZWZhdWx0VWlkKG5ld1VzZXIsIHNhbWxfdXNlcl91aWQpCiAgICAgICAgICAgICAgICBuZXdVc2VyLnNldEF0dHJpYnV0ZSgib3hFeHRlcm5hbFVpZCIsICJzYW1sOiVzIiAlICBz
 YW1sX3VzZXJfdWlkKQoKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgb3hFeHRlcm5hbFVpZDogc2F
 tbDolcyIgJSBzYW1sX3VzZXJfdWlkCgogICAgICAgICAgICAgICAgIyBDaGVjayBpZiB0aGVyZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIHNhbWxfdXNlcl91aWQKICAgICAgICAgICAgICAgIGZpbm
 RfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSAgc2FtbF91c2VyX3VpZCkKICAgICAgICAgICAgICAgIGlmIChma
 W5kX3VzZXJfYnlfdWlkID09IE5vbmUpOgogICAgICAgICAgICAgICAgICAgICMgQXV0byB1c2VyIGVucm9sbG1lbnQKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRl
 IGZvciBzdGVwIDEuIFRoZXJlIGlzIG5vIHVzZXIgaW4gTERBUC4gQWRkaW5nIHVzZXIgdG8gbG9jYWwgTERBUCIKCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSB
 mb3Igc3RlcCAxLiBBdHRlbXB0aW5nIHRvIGFkZCB1c2VyICclcycgd2l0aCBuZXh0IGF0dHJpYnV0ZXM6ICclcyciICUgKHNhbWxfdXNlcl91aWQsIG5ld1VzZXIuZ2V0Q3VzdG9tQXR0cmlidXRlcy
 gpKQogICAgICAgICAgICAgICAgICAgIHVzZXJfdW5pcXVlID0gc2VsZi5jaGVja1VzZXJVbmlxdWVuZXNzKG5ld1VzZXIpCiAgICAgICAgICAgICAgICAgICAgaWYgbm90IHVzZXJfdW5pcXVlOgogI
 CAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBhZGQgdXNlcjogJyVzJy4gVXNlciBub3QgdW5pcXVlIiAlIG5ld1VzZXIu
 Z2V0VXNlcklkKCkKICAgICAgICAgICAgICAgICAgICAgICAgZmFjZXNNZXNzYWdlcyA9IEZhY2VzTWVzc2FnZXMuaW5zdGFuY2UoKQogICAgICAgICAgICAgICAgICAgICAgICBmYWNlc01lc3NhZ2V
 zLmFkZChTdGF0dXNNZXNzYWdlLlNldmVyaXR5LkVSUk9SLCAiRmFpbGVkIHRvIGVucm9sbC4gVXNlciB3aXRoIHNhbWUga2V5IGF0dHJpYnV0ZXMgZXhpc3QgYWxyZWFkeSIpCiAgICAgICAgICAgIC
 AgICAgICAgICAgIEZhY2VzQ29udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRGbGFzaCgpLnNldEtlZXBNZXNzYWdlcyhUcnVlKQogICAgICAgICAgICAgI
 CAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICAgICAgZmluZF91c2VyX2J5X3VpZCA9IHVzZXJTZXJ2aWNlLmFkZFVzZXIobmV3VXNlciwgVHJ1ZSkKICAgICAgICAgICAgICAg
 ICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEFkZGVkIG5ldyB1c2VyIHdpdGggVUlEOiAnJXMnIiAlIGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICA
 gICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgaWYgc2VsZi51cGRhdGVVc2VyOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwID
 EuIEF0dGVtcHRpbmcgdG8gdXBkYXRlIHVzZXIgJyVzJyB3aXRoIG5leHQgYXR0cmlidXRlczogJyVzJyIgJSAoc2FtbF91c2VyX3VpZCwgbmV3VXNlci5nZXRDdXN0b21BdHRyaWJ1dGVzKCkpCiAgI
 CAgICAgICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9ieV91aWQuc2V0Q3VzdG9tQXR0cmlidXRlcyhuZXdVc2VyLmdldEN1c3RvbUF0dHJpYnV0ZXMoKSkKICAgICAgICAgICAgICAgICAgICAgICAg
 dXNlclNlcnZpY2UudXBkYXRlVXNlcihmaW5kX3VzZXJfYnlfdWlkKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFVwZGF0ZWQgdXN
 lciB3aXRoIFVJRDogJyVzJyIgJSBzYW1sX3VzZXJfdWlkCgogICAgICAgICAgICAgICAgZm91bmRfdXNlcl9uYW1lID0gZmluZF91c2VyX2J5X3VpZC5nZXRVc2VySWQoKQogICAgICAgICAgICAgIC
 AgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBmb3VuZF91c2VyX25hbWU6ICclcyciICUgZm91bmRfdXNlcl9uYW1lCgogICAgICAgICAgICAgICAgdXNlcl9hdXRoZW50aWNhd
 GVkID0gYXV0aGVudGljYXRpb25TZXJ2aWNlLmF1dGhlbnRpY2F0ZShmb3VuZF91c2VyX25hbWUpCiAgICAgICAgICAgICAgICBpZiAodXNlcl9hdXRoZW50aWNhdGVkID09IEZhbHNlKToKICAgICAg
 ICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIEZhaWxlZCB0byBhdXRoZW50aWNhdGUgdXNlciIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2U
 KCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDEuIFNldHRpbmcgY291bnQgc3RlcHMgdG8gMSIKICAgICAgICAgICAgICAgIGNvbnRleHQuc2V0KCJzYW
 1sX2NvdW50X2xvZ2luX3N0ZXBzIiwgMSkKCiAgICAgICAgICAgICAgICBwb3N0X2xvZ2luX3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlc
 ywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gcG9zdF9sb2dpbl9yZXN1bHQ6ICclcyciICUgcG9zdF9sb2dpbl9y
 ZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9sb2dpbl9yZXN1bHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGlmIHNhbWxfdXNlcl91aWQgPT0gTm9uZToKICAgICA
 gICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICAjIENoZWNrIGlmIHRoZSBpcyB1c2VyIHdpdGggc3BlY2lmaWVkIHNhbWxfdXNlcl91aWQKICAgICAgICAgICAgICAgIH
 ByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gQXR0ZW1wdGluZyB0byBmaW5kIHVzZXIgYnkgdWlkOiAnJXMnIiAlIHNhbWxfdXNlcl91aWQKCiAgICAgICAgICAgICAgICBmaW5kX
 3VzZXJfYnlfdWlkID0gdXNlclNlcnZpY2UuZ2V0VXNlcihzYW1sX3VzZXJfdWlkKQogICAgICAgICAgICAgICAgaWYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAg
 ICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBGYWlsZWQgdG8gZmluZCB1c2VyIgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgICAgIGZ
 vdW5kX3VzZXJfbmFtZSA9IGZpbmRfdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMS4gZm91bmRfdXNlcl9uYW
 1lOiAnJXMnIiAlIGZvdW5kX3VzZXJfbmFtZQoKICAgICAgICAgICAgICAgIHVzZXJfYXV0aGVudGljYXRlZCA9IGF1dGhlbnRpY2F0aW9uU2VydmljZS5hdXRoZW50aWNhdGUoZm91bmRfdXNlcl9uY
 W1lKQogICAgICAgICAgICAgICAgaWYgKHVzZXJfYXV0aGVudGljYXRlZCA9PSBGYWxzZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAxLiBG
 YWlsZWQgdG8gYXV0aGVudGljYXRlIHVzZXIiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCA
 xLiBTZXR0aW5nIGNvdW50IHN0ZXBzIHRvIDEiCiAgICAgICAgICAgICAgICBjb250ZXh0LnNldCgic2FtbF9jb3VudF9sb2dpbl9zdGVwcyIsIDEpCgogICAgICAgICAgICAgICAgcG9zdF9sb2dpbl
 9yZXN1bHQgPSBzZWxmLnNhbWxFeHRlbnNpb25Qb3N0TG9naW4oY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIGZpbmRfdXNlcl9ieV91aWQpCiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0a
 GVudGljYXRlIGZvciBzdGVwIDEuIHBvc3RfbG9naW5fcmVzdWx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CgogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RfbG9naW5fcmVzdWx0CiAgICAg
 ICAgZWxpZiAoc3RlcCA9PSAyKToKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyIgoKICAgICAgICAgICAgc2Vzc2lvbkF0dHJpYnV0ZXMgPSBjb250ZXh0Lmd
 ldCgic2Vzc2lvbkF0dHJpYnV0ZXMiKQogICAgICAgICAgICBpZiAoc2Vzc2lvbkF0dHJpYnV0ZXMgPT0gTm9uZSkgb3Igbm90IHNlc3Npb25BdHRyaWJ1dGVzLmNvbnRhaW5zS2V5KCJzYW1sX3VzZX
 JfdWlkIik6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0aGVudGljYXRlIGZvciBzdGVwIDIuIHNhbWxfdXNlcl91aWQgaXMgZW1wdHkiCiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc
 2UKCiAgICAgICAgICAgIHNhbWxfdXNlcl91aWQgPSBzZXNzaW9uQXR0cmlidXRlcy5nZXQoInNhbWxfdXNlcl91aWQiKQogICAgICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNO
 b3RFbXB0eVN0cmluZyhzYW1sX3VzZXJfdWlkKQogICAgICAgICAgICBpZiAobm90IHBhc3NlZF9zdGVwMSk6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgIGNyZWRlbnR
 pYWxzID0gSWRlbnRpdHkuaW5zdGFuY2UoKS5nZXRDcmVkZW50aWFscygpCiAgICAgICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICAgICAgdXNlcl9wYX
 Nzd29yZCA9IGNyZWRlbnRpYWxzLmdldFBhc3N3b3JkKCkKCiAgICAgICAgICAgIGxvZ2dlZF9pbiA9IEZhbHNlCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c
 2VyX25hbWUpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyh1c2VyX3Bhc3N3b3JkKSk6CiAgICAgICAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUo
 dXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQoKICAgICAgICAgICAgaWYgKG5vdCBsb2dnZWRfaW4pOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgICAgICAjIENoZWNrIGlmIHR
 oZXJlIGlzIHVzZXIgd2hpY2ggaGFzIHNhbWxfdXNlcl91aWQKICAgICAgICAgICAgIyBBdm9pZCBtYXBwaW5nIFNhbWwgYWNjb3VudCB0byBtb3JlIHRoYW4gb25lIElEUCBhY2NvdW50CiAgICAgIC
 AgICAgIGZpbmRfdXNlcl9ieV91aWQgPSB1c2VyU2VydmljZS5nZXRVc2VyQnlBdHRyaWJ1dGUoIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSBzYW1sX3VzZXJfdWlkKQoKICAgICAgICAgICAga
 WYgKGZpbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAjIEFkZCBzYW1sX3VzZXJfdWlkIHRvIHVzZXIgb25lIGlkIFVJRHMKICAgICAgICAgICAgICAgIGZpbmRfdXNlcl9i
 eV91aWQgPSB1c2VyU2VydmljZS5hZGRVc2VyQXR0cmlidXRlKHVzZXJfbmFtZSwgIm94RXh0ZXJuYWxVaWQiLCAic2FtbDolcyIgJSBzYW1sX3VzZXJfdWlkKQogICAgICAgICAgICAgICAgaWYgKGZ
 pbmRfdXNlcl9ieV91aWQgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEF1dGhlbnRpY2F0ZSBmb3Igc3RlcCAyLiBGYWlsZWQgdG8gdXBkYXRlIGN1cnJlbnQgdXNlci
 IKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKCiAgICAgICAgICAgICAgICBwb3N0X2xvZ2luX3Jlc3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQ
 XR0cmlidXRlcywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gcG9zdF9sb2dpbl9yZXN1bHQ6ICclcyciICUgcG9z
 dF9sb2dpbl9yZXN1bHQKCiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9sb2dpbl9yZXN1bHQKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGZvdW5kX3VzZXJfbmFtZSA9IGZpbmR
 fdXNlcl9ieV91aWQuZ2V0VXNlcklkKCkKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBBdXRoZW50aWNhdGUgZm9yIHN0ZXAgMi4gZm91bmRfdXNlcl9uYW1lOiAnJXMnIiAlIGZvdW5kX3VzZX
 JfbmFtZQogICAgCiAgICAgICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzKHVzZXJfbmFtZSwgZm91bmRfdXNlcl9uYW1lKToKICAgICAgICAgICAgICAgICAgICBwb3N0X2xvZ2luX3Jlc
 3VsdCA9IHNlbGYuc2FtbEV4dGVuc2lvblBvc3RMb2dpbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgZmluZF91c2VyX2J5X3VpZCkKICAgICAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gQXV0
 aGVudGljYXRlIGZvciBzdGVwIDIuIHBvc3RfbG9naW5fcmVzdWx0OiAnJXMnIiAlIHBvc3RfbG9naW5fcmVzdWx0CiAgICAKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9sb2dpbl9yZXN
 1bHQKICAgICAgICAKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3
 VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgYXV0aGVudGljYXRpb25TZ
 XJ2aWNlID0gQ29tcG9uZW50LmdldEluc3RhbmNlKEF1dGhlbnRpY2F0aW9uU2VydmljZSkKCiAgICAgICAgaWYgKHN0ZXAgPT0gMSk6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZv
 ciBzdGVwIDEiCiAgICAgICAgICAgIAogICAgICAgICAgICBodHRwU2VydmljZSA9IENvbXBvbmVudC5nZXRJbnN0YW5jZShIdHRwU2VydmljZSkKICAgICAgICAgICAgcmVxdWVzdCA9IEZhY2VzQ29
 udGV4dC5nZXRDdXJyZW50SW5zdGFuY2UoKS5nZXRFeHRlcm5hbENvbnRleHQoKS5nZXRSZXF1ZXN0KCkKICAgICAgICAgICAgYXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVXJsID0gaHR0cFNlcnZpY2
 UuY29uc3RydWN0U2VydmVyVXJsKHJlcXVlc3QpICsgIi9wb3N0bG9naW4iCiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEuIFByZXBhcmVkIGFzc2VydGlvbkNvbnN1b
 WVyU2VydmljZVVybDogJyVzJyIgJSBhc3NlcnRpb25Db25zdW1lclNlcnZpY2VVcmwKICAgICAgICAgICAgCiAgICAgICAgICAgIGN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q3Vy
 cmVudFNhbWxDb25maWd1cmF0aW9uKHNlbGYuc2FtbENvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycykKICAgICAgICAgICAgaWYgKGN1cnJlbnR
 TYW1sQ29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDEuIENsaWVudCBzYW1sIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZC
 IKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyBHZW5lcmF0ZSBhbiBBdXRoUmVxdWVzdCBhbmQgc2VuZCBpdCB0byB0aGUgaWRlbnRpdHkgcHJvdmlkZXIKICAgICAgI
 CAgICAgc2FtbEF1dGhSZXF1ZXN0ID0gQXV0aFJlcXVlc3QoY3VycmVudFNhbWxDb25maWd1cmF0aW9uKQogICAgICAgICAgICBleHRlcm5hbF9hdXRoX3JlcXVlc3RfdXJpID0gY3VycmVudFNhbWxD
 b25maWd1cmF0aW9uLmdldElkcFNzb1RhcmdldFVybCgpICsgIj9TQU1MUmVxdWVzdD0iICsgc2FtbEF1dGhSZXF1ZXN0LmdldFJlcXVlc3QoVHJ1ZSwgYXNzZXJ0aW9uQ29uc3VtZXJTZXJ2aWNlVXJ
 sKQoKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIFByZXBhcmUgZm9yIHN0ZXAgMS4gZXh0ZXJuYWxfYXV0aF9yZXF1ZXN0X3VyaTogJyVzJyIgJSBleHRlcm5hbF9hdXRoX3JlcXVlc3RfdXJpCiAgIC
 AgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LnNldCgiZXh0ZXJuYWxfYXV0aF9yZXF1ZXN0X3VyaSIsIGV4dGVybmFsX2F1dGhfcmVxdWVzdF91cmkpCgogICAgICAgICAgICByZXR1cm4gVHJ1Z
 QogICAgICAgIGVsaWYgKHN0ZXAgPT0gMik6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlIGZvciBzdGVwIDIiCgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIGVsc2U6CiAg
 ICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBnZXRFeHRyYVBhcmFtZXRlcnNGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA
 9PSAyKToKICAgICAgICAgICAgcmV0dXJuIEFycmF5cy5hc0xpc3QoInNhbWxfdXNlcl91aWQiKQoKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcH
 Moc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIGNvbnRleHQgPSBDb250ZXh0cy5nZXRFdmVudENvbnRleHQoKQogICAgICAgIGlmIChjb250ZXh0LmlzU2V0KCJzYW1sX2Nvd
 W50X2xvZ2luX3N0ZXBzIikpOgogICAgICAgICAgICByZXR1cm4gY29udGV4dC5nZXQoInNhbWxfY291bnRfbG9naW5fc3RlcHMiKQogICAgICAgIAogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdl
 dFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiAoc3RlcCA9PSAxKToKICAgICAgICAgICAgc2FtbF9hbGxvd19iYXNpY19sb2dpbiA9IEZ
 hbHNlCiAgICAgICAgICAgIGlmIChjb25maWd1cmF0aW9uQXR0cmlidXRlcy5jb250YWluc0tleSgic2FtbF9hbGxvd19iYXNpY19sb2dpbiIpKToKICAgICAgICAgICAgICAgIHNhbWxfYWxsb3dfYm
 FzaWNfbG9naW4gPSBTdHJpbmdIZWxwZXIudG9Cb29sZWFuKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9hbGxvd19iYXNpY19sb2dpbiIpLmdldFZhbHVlMigpLCBGYWxzZSkKCiAgI
 CAgICAgICAgIGlmIChzYW1sX2FsbG93X2Jhc2ljX2xvZ2luKToKICAgICAgICAgICAgICAgIHJldHVybiAiL2xvZ2luLnhodG1sIgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0
 dXJuICIvYXV0aC9zYW1sL3NhbWxsb2dpbi54aHRtbCIKCiAgICAgICAgcmV0dXJuICIvYXV0aC9zYW1sL3NhbWxwb3N0bG9naW4ueGh0bWwiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF
 0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIGlzUGFzc2VkU3RlcDEoKToKICAgICAgICBjcmVkZW50aWFscyA9IElkZW50aXR5Lm
 luc3RhbmNlKCkuZ2V0Q3JlZGVudGlhbHMoKQogICAgICAgIHVzZXJfbmFtZSA9IGNyZWRlbnRpYWxzLmdldFVzZXJuYW1lKCkKICAgICAgICBwYXNzZWRfc3RlcDEgPSBTdHJpbmdIZWxwZXIuaXNOb
 3RFbXB0eVN0cmluZyh1c2VyX25hbWUpCgogICAgICAgIHJldHVybiBwYXNzZWRfc3RlcDEKCiAgICBkZWYgbG9hZENlcml0aWZpY2F0ZShzZWxmLCBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZV9maWxl
 KToKICAgICAgICBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSA9IE5vbmUKCiAgICAgICAgIyBMb2FkIGNlcnRpZmljYXRlIGZyb20gZmlsZQogICAgICAgIGYgPSBvcGVuKGFzaW1iYV9zYW1sX2NlcnR
 pZmljYXRlX2ZpbGUsICdyJykKICAgICAgICB0cnk6CiAgICAgICAgICAgIGFzaW1iYV9zYW1sX2NlcnRpZmljYXRlID0gZi5yZWFkKCkKICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgIHByaW50IC
 JGYWlsZWQgdG8gbG9hZCBjZXJ0aWZpY2F0ZSBmcm9tIGZpbGU6ICclcyciICUgYXNpbWJhX3NhbWxfY2VydGlmaWNhdGVfZmlsZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIGZpbmFsb
 Hk6CiAgICAgICAgICAgIGYuY2xvc2UoKQogICAgICAgIAogICAgICAgIHJldHVybiBhc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZQoKICAgIGRlZiBnZXRDbGllbnRDb25maWd1cmF0aW9uKHNlbGYsIGNv
 bmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycyk6CiAgICAgICAgIyBHZXQgY2xpZW50IGNvbmZpZ3VyYXRpb24KICAgICAgICBpZiAoY29uZmlndXJhdGlvbkF0dHJpYnV0ZXM
 uY29udGFpbnNLZXkoInNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fYXR0cmlidXRlIikpOgogICAgICAgICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX2F0dHJpYnV0ZSA9IGNvbmZpZ3VyYX
 Rpb25BdHRyaWJ1dGVzLmdldCgic2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUiKS5nZXRWYWx1ZTIoKQogICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0Q2xpZW50Q29uZmlndXJhd
 Glvbi4gVXNpbmcgY2xpZW50IGF0dHJpYnV0ZTogJyVzJyIgJSBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX2F0dHJpYnV0ZQoKICAgICAgICAgICAgaWYgKHJlcXVlc3RQYXJhbWV0ZXJzID09IE5v
 bmUpOgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgICAgIGNsaWVudF9pZCA9IE5vbmUKICAgICAgICAgICAgY2xpZW50X2lkX2FycmF5ID0gcmVxdWVzdFBhcmFtZXRlcnMuZ2V
 0KCJjbGllbnRfaWQiKQogICAgICAgICAgICBpZiAoQXJyYXlIZWxwZXIuaXNOb3RFbXB0eShjbGllbnRfaWRfYXJyYXkpIGFuZCBTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eVN0cmluZyhjbGllbnRfaW
 RfYXJyYXlbMF0pKToKICAgICAgICAgICAgICAgIGNsaWVudF9pZCA9IGNsaWVudF9pZF9hcnJheVswXQoKICAgICAgICAgICAgaWYgKGNsaWVudF9pZCA9PSBOb25lKToKICAgICAgICAgICAgICAgI
 GV2ZW50Q29udGV4dCA9IENvbnRleHRzLmdldEV2ZW50Q29udGV4dCgpCiAgICAgICAgICAgICAgICBpZiAoZXZlbnRDb250ZXh0LmlzU2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpKToKICAgICAgICAg
 ICAgICAgICAgICBjbGllbnRfaWQgPSBldmVudENvbnRleHQuZ2V0KCJzZXNzaW9uQXR0cmlidXRlcyIpLmdldCgiY2xpZW50X2lkIikKCiAgICAgICAgICAgIGlmIChjbGllbnRfaWQgPT0gTm9uZSk
 6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0Q2xpZW50Q29uZmlndXJhdGlvbi4gY2xpZW50X2lkIGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAgICAgIC
 AgIGNsaWVudFNlcnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoQ2xpZW50U2VydmljZSkKICAgICAgICAgICAgY2xpZW50ID0gY2xpZW50U2VydmljZS5nZXRDbGllbnQoY2xpZW50X2lkKQogI
 CAgICAgICAgICBpZiAoY2xpZW50ID09IE5vbmUpOgogICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldENsaWVudENvbmZpZ3VyYXRpb24uIEZhaWxlZCB0byBmaW5kIGNsaWVudCAnJXMnIGlu
 IGxvY2FsIExEQVAiICUgY2xpZW50X2lkCiAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICAgICAgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9IGNsaWVudFNlcnZpY2UuZ2V0Q3V
 zdG9tQXR0cmlidXRlKGNsaWVudCwgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUpCiAgICAgICAgICAgIGlmICgoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9PSBOb25lKSBvci
 BTdHJpbmdIZWxwZXIuaXNFbXB0eShzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmdldFZhbHVlKCkpKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBHZXRDbGllbnRDb25maWd1cmF0aW9uL
 iBDbGllbnQgJyVzJyBhdHRyaWJ1dGUgJyVzJyBpcyBlbXB0eSIgJSAoIGNsaWVudF9pZCwgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl9hdHRyaWJ1dGUgKQogICAgICAgICAgICBlbHNlOgogICAg
 ICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldENsaWVudENvbmZpZ3VyYXRpb24uIENsaWVudCAnJXMnIGF0dHJpYnV0ZSAnJXMnIGlzICclcyciICUgKCBjbGllbnRfaWQsIHNhbWxfY2xpZW50X2N
 vbmZpZ3VyYXRpb25fYXR0cmlidXRlLCBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uICkKICAgICAgICAgICAgICAgIHJldHVybiBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uCgogICAgICAgIHJldH
 VybiBOb25lCgogICAgZGVmIGdldEN1cnJlbnRTYW1sQ29uZmlndXJhdGlvbihzZWxmLCBjdXJyZW50U2FtbENvbmZpZ3VyYXRpb24sIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyY
 W1ldGVycyk6CiAgICAgICAgc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9IHNlbGYuZ2V0Q2xpZW50Q29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcmVxdWVzdFBhcmFtZXRl
 cnMpCiAgICAgICAgaWYgKHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb24gPT0gTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBjdXJyZW50U2FtbENvbmZpZ3VyYXRpb24KICAgICAgICAKICAgICAgICB
 zYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlID0ganNvbi5sb2FkcyhzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmdldFZhbHVlKCkpCgogICAgICAgIGNsaWVudF9hc2ltYmFfc2FtbF9jZX
 J0aWZpY2F0ZSA9IE5vbmUgICAgICAKICAgICAgICBjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGVfZmlsZSA9IHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fdmFsdWVbImFzaW1iYV9zYW1sX
 2NlcnRpZmljYXRlX2ZpbGUiXQogICAgICAgIGlmIChTdHJpbmdIZWxwZXIuaXNOb3RFbXB0eShjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGVfZmlsZSkpOgogICAgICAgICAgICBjbGllbnRf
 YXNpbWJhX3NhbWxfY2VydGlmaWNhdGUgPSBzZWxmLmxvYWRDZXJpdGlmaWNhdGUoY2xpZW50X2FzaW1iYV9zYW1sX2NlcnRpZmljYXRlX2ZpbGUpCiAgICAgICAgICAgIGlmIChTdHJpbmdIZWxwZXI
 uaXNFbXB0eShjbGllbnRfYXNpbWJhX3NhbWxfY2VydGlmaWNhdGUpKToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBCdWlsZENsaWVudFNhbWxDb25maWd1cmF0aW9uLiBGaWxlIHdpdGggeD
 UwOSBjZXJ0aWZpY2F0ZSBzaG91bGQgYmUgbm90IGVtcHR5LiBVc2luZyBkZWZhdWx0IGNvbmZpZ3VyYXRpb24iCiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudFNhbWxDb25maWd1cmF0aW9uC
 gogICAgICAgIGNsaWVudFNhbWxDb25maWd1cmF0aW9uID0gY3VycmVudFNhbWxDb25maWd1cmF0aW9uLmNsb25lKCkKICAgICAgICAKICAgICAgICBpZiAoY2xpZW50X2FzaW1iYV9zYW1sX2NlcnRp
 ZmljYXRlICE9IE5vbmUpOgogICAgICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdGlvbi5sb2FkQ2VydGlmaWNhdGVGcm9tU3RyaW5nKGNsaWVudF9hc2ltYmFfc2FtbF9jZXJ0aWZpY2F0ZSkKCiA
 gICAgICAgY2xpZW50X2FzaW1iYV9lbnRpdHlfaWQgPSBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlWyJhc2ltYmFfZW50aXR5X2lkIl0KICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdG
 lvbi5zZXRJc3N1ZXIoY2xpZW50X2FzaW1iYV9lbnRpdHlfaWQpCiAgICAgICAgCiAgICAgICAgc2FtbF91c2VfYXV0aG5fY29udGV4dCA9IHNhbWxfY2xpZW50X2NvbmZpZ3VyYXRpb25fdmFsdWVbI
 nNhbWxfdXNlX2F1dGhuX2NvbnRleHQiXQogICAgICAgIGNsaWVudF91c2Vfc2FtbF91c2VfYXV0aG5fY29udGV4dCA9IFN0cmluZ0hlbHBlci50b0Jvb2xlYW4oc2FtbF91c2VfYXV0aG5fY29udGV4
 dCwgVHJ1ZSkKICAgICAgICBjbGllbnRTYW1sQ29uZmlndXJhdGlvbi5zZXRVc2VSZXF1ZXN0ZWRBdXRobkNvbnRleHQoY2xpZW50X3VzZV9zYW1sX3VzZV9hdXRobl9jb250ZXh0KQoKICAgICAgICB
 yZXR1cm4gY2xpZW50U2FtbENvbmZpZ3VyYXRpb24KCiAgICBkZWYgcHJlcGFyZUF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZyk6CiAgICAgICAgc2FtbF
 9pZHBfYXR0cmlidXRlc19tYXBwaW5nX2pzb24gPSBqc29uLmxvYWRzKHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZykKICAgICAgICAKICAgICAgICBpZiBsZW4oc2FtbF9pZHBfYXR0cmlidXRlc
 19tYXBwaW5nX2pzb24pID09IDA6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBQcmVwYXJlQXR0cmlidXRlc01hcHBpbmcuIFRoZXJlIGlzIG5vIGF0dHJpYnV0ZXMgbWFwcGluZyBzcGVjaWZpZWQg
 aW4gc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nIHByb3BlcnR5IgogICAgICAgICAgICByZXR1cm4gTm9uZQoKICAgICAgICBhdHRyaWJ1dGVNYXBwaW5nID0gSWRlbnRpdHlIYXNoTWFwKCkKICA
 gICAgICBmb3IgbG9jYWxfYXR0cmlidXRlX25hbWUgaW4gc2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nX2pzb246CiAgICAgICAgICAgIGxvY2FsQXR0cmlidXRlID0gU3RyaW5nSGVscGVyLnRvTG
 93ZXJDYXNlKGxvY2FsX2F0dHJpYnV0ZV9uYW1lKQogICAgICAgICAgICBmb3IgaWRwX2F0dHJpYnV0ZV9uYW1lIGluIHNhbWxfaWRwX2F0dHJpYnV0ZXNfbWFwcGluZ19qc29uW2xvY2FsX2F0dHJpY
 nV0ZV9uYW1lXToKICAgICAgICAgICAgICAgIGlkcEF0dHJpYnV0ZSA9IFN0cmluZ0hlbHBlci50b0xvd2VyQ2FzZShpZHBfYXR0cmlidXRlX25hbWUpCiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVN
 YXBwaW5nLnB1dChpZHBBdHRyaWJ1dGUsIGxvY2FsQXR0cmlidXRlKQogICAgICAgIAogICAgICAgIHJldHVybiBhdHRyaWJ1dGVNYXBwaW5nCgogICAgZGVmIHByZXBhcmVVc2VyT2JqZWN0Q2xhc3N
 lcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgdXNlcl9vYmplY3RfY2xhc3NlcyA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgidXNlcl9vYmplY3RfY2xhc3Nlcy
 IpLmdldFZhbHVlMigpCgogICAgICAgIHVzZXJfb2JqZWN0X2NsYXNzZXNfbGlzdF9hcnJheSA9IFN0cmluZ0hlbHBlci5zcGxpdCh1c2VyX29iamVjdF9jbGFzc2VzLCAiLCIpCiAgICAgICAgaWYgK
 EFycmF5SGVscGVyLmlzRW1wdHkodXNlcl9vYmplY3RfY2xhc3Nlc19saXN0X2FycmF5KSk6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgcmV0dXJuIHVzZXJfb2JqZWN0
 X2NsYXNzZXNfbGlzdF9hcnJheQoKICAgIGRlZiBwcmVwYXJlVXNlckVuZm9yY2VVbmlxdWVuZXNzQXR0cmlidXRlcyhzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgZW5mb3J
 jZV91bmlxdWVuZXNzX2F0dHJfbGlzdCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgiZW5mb3JjZV91bmlxdWVuZXNzX2F0dHJfbGlzdCIpLmdldFZhbHVlMigpCgogICAgICAgIGVuZm9yY2
 VfdW5pcXVlbmVzc19hdHRyX2xpc3RfYXJyYXkgPSBTdHJpbmdIZWxwZXIuc3BsaXQoZW5mb3JjZV91bmlxdWVuZXNzX2F0dHJfbGlzdCwgIiwiKQogICAgICAgIGlmIChBcnJheUhlbHBlci5pc0Vtc
 HR5KGVuZm9yY2VfdW5pcXVlbmVzc19hdHRyX2xpc3RfYXJyYXkpKToKICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgICAgICAKICAgICAgICByZXR1cm4gZW5mb3JjZV91bmlxdWVuZXNzX2F0dHJf
 bGlzdF9hcnJheQoKICAgIGRlZiBwcmVwYXJlQ3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nKHNlbGYsIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXV
 lc3RQYXJhbWV0ZXJzKToKICAgICAgICBzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uID0gc2VsZi5nZXRDbGllbnRDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UG
 FyYW1ldGVycykKICAgICAgICBpZiAoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbiA9PSBOb25lKToKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZwoKICAgICAgICBzY
 W1sX2NsaWVudF9jb25maWd1cmF0aW9uX3ZhbHVlID0ganNvbi5sb2FkcyhzYW1sX2NsaWVudF9jb25maWd1cmF0aW9uLmdldFZhbHVlKCkpCgogICAgICAgIGNsaWVudEF0dHJpYnV0ZXNNYXBwaW5n
 ID0gc2VsZi5wcmVwYXJlQXR0cmlidXRlc01hcHBpbmcoc2FtbF9jbGllbnRfY29uZmlndXJhdGlvbl92YWx1ZVsic2FtbF9pZHBfYXR0cmlidXRlc19tYXBwaW5nIl0pCiAgICAgICAgaWYgKGNsaWV
 udEF0dHJpYnV0ZXNNYXBwaW5nID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiU2FtbC4gUHJlcGFyZUN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZy4gQ2xpZW50IGF0dHJpYnV0ZXMgbWFwcGluZy
 BpcyBpbnZhbGlkLiBVc2luZyBkZWZhdWx0IG9uZSIKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRBdHRyaWJ1dGVzTWFwcGluZwoKICAgICAgICByZXR1cm4gY2xpZW50QXR0cmlidXRlc01hcHBpb
 mcKCiAgICBkZWYgc2FtbEV4dGVuc2lvblBvc3RMb2dpbihzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgdXNlcik6CiAgICAgICAgaWYgKHNlbGYuc2FtbEV4dGVuc2lvbk1vZHVsZSA9PSBO
 b25lKToKICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBvc3RfbG9naW5fcmVzdWx0ID0gc2VsZi5zYW1sRXh0ZW5zaW9uTW9kdWxlLnBvc3RMb2dpbihjb25
 maWd1cmF0aW9uQXR0cmlidXRlcywgdXNlcikKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEV4dGVuc2lvblBvc3Rsb2dpbiByZXN1bHQ6ICclcyciICUgcG9zdF9sb2dpbl9yZXN1bHQKCiAgICAgIC
 AgICAgIHJldHVybiBwb3N0X2xvZ2luX3Jlc3VsdAogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24sIGV4OgogICAgICAgICAgICBwcmludCAiU2FtbC4gRXh0ZW5zaW9uUG9zdGxvZ2luLiBGYWlsZWQgd
 G8gZXhlY3V0ZSBwb3N0TG9naW4gbWV0aG9kIgogICAgICAgICAgICBwcmludCAiU2FtbC4gRXh0ZW5zaW9uUG9zdGxvZ2luLiBVbmV4cGVjdGVkIGVycm9yOiIsIGV4CiAgICAgICAgICAgIHJldHVy
 biBGYWxzZQogICAgICAgIGV4Y2VwdCBqYXZhLmxhbmcuVGhyb3dhYmxlLCBleDoKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEV4dGVuc2lvblBvc3Rsb2dpbi4gRmFpbGVkIHRvIGV4ZWN1dGUgcG9
 zdExvZ2luIG1ldGhvZCIKICAgICAgICAgICAgZXgucHJpbnRTdGFja1RyYWNlKCkgCiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgIGRlZiBjaGVja1VzZXJVbmlxdWVuZXNzKHNlbGYsIHVzZX
 IpOgogICAgICAgIGlmIChzZWxmLnVzZXJFbmZvcmNlQXR0cmlidXRlc1VuaXF1ZW5lc3MgPT0gTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgIHVzZXJTZXJ2aWNlID0gQ29tc
 G9uZW50LmdldEluc3RhbmNlKFVzZXJTZXJ2aWNlKQoKICAgICAgICAjIFByZXBhcmUgdXNlciBvYmplY3QgdG8gc2VhcmNoIGJ5IHBhdHRlcm4KICAgICAgICB1c2VyQmFzZURuID0gdXNlclNlcnZp
 Y2UuZ2V0RG5Gb3JVc2VyKE5vbmUpIAoKICAgICAgICB1c2VyVG9TZWFyY2ggPSBVc2VyKCkKICAgICAgICB1c2VyVG9TZWFyY2guc2V0RG4odXNlckJhc2VEbikKCiAgICAgICAgZm9yIHVzZXJBdHR
 yaWJ1dGVOYW1lIGluIHNlbGYudXNlckVuZm9yY2VBdHRyaWJ1dGVzVW5pcXVlbmVzczoKICAgICAgICAgICAgYXR0cmlidXRlX3ZhbHVlc19saXN0ID0gdXNlci5nZXRBdHRyaWJ1dGVWYWx1ZXModX
 NlckF0dHJpYnV0ZU5hbWUpCiAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVfdmFsdWVzX2xpc3QgIT0gTm9uZSkgYW5kIChhdHRyaWJ1dGVfdmFsdWVzX2xpc3Quc2l6ZSgpID4gMCk6CiAgICAgICAgI
 CAgICAgICB1c2VyVG9TZWFyY2guc2V0QXR0cmlidXRlKHVzZXJBdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVfdmFsdWVzX2xpc3QpCgogICAgICAgIGxkYXBFbnRyeU1hbmFnZXIgPSBDb21wb25lbnQu
 Z2V0SW5zdGFuY2UoImxkYXBFbnRyeU1hbmFnZXIiKQoKICAgICAgICAjIFRPRE86IFJlcGxhY2Ugd2l0aCB1c2VyU2VydmljZS5maW5kRW50cmllcyBpbiBDRSAyLjQuNQogICAgICAgIHVzZXJzID0
 gbGRhcEVudHJ5TWFuYWdlci5maW5kRW50cmllcyh1c2VyVG9TZWFyY2gsIDEsIDEpCiAgICAgICAgaWYgdXNlcnMuc2l6ZSgpID4gMDoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIH
 JldHVybiBUcnVlCgogICAgZGVmIGdldE1hcHBlZFVzZXIoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzLCBzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMpOgogI
 CAgICAgICMgQ29udmVydCBTYW1sIHJlc3VsdCBhdHRyaWJ1dGVzIGtleXMgdG8gbG92ZXIgY2FzZQogICAgICAgIHNhbWxfcmVzcG9uc2Vfbm9ybWFsaXplZF9hdHRyaWJ1dGVzID0gSGFzaE1hcCgp
 CiAgICAgICAgZm9yIHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlX2VudHJ5IGluIHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlcy5lbnRyeVNldCgpOgogICAgICAgICAgICBzYW1sX3Jlc3BvbnNlX25vcm1
 hbGl6ZWRfYXR0cmlidXRlcy5wdXQoU3RyaW5nSGVscGVyLnRvTG93ZXJDYXNlKHNhbWxfcmVzcG9uc2VfYXR0cmlidXRlX2VudHJ5LmdldEtleSgpKSwgc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVfZW
 50cnkuZ2V0VmFsdWUoKSkKICAgICAgICAKICAgICAgICBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcgPSBzZWxmLnByZXBhcmVDdXJyZW50QXR0cmlidXRlc01hcHBpbmcoc2VsZi5hdHRyaWJ1dGVzT
 WFwcGluZywgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHJlcXVlc3RQYXJhbWV0ZXJzKQogICAgICAgIHByaW50ICJTYW1sLiBHZXQgbWFwcGVkIHVzZXIuIFVzaW5nIG5leHQgYXR0cmlidXRlcyBt
 YXBwaW5nICclcyciICUgY3VycmVudEF0dHJpYnV0ZXNNYXBwaW5nCgogICAgICAgIG5ld1VzZXIgPSBVc2VyKCkKCiAgICAgICAgIyBTZXQgY3VzdG9tIG9iamVjdCBjbGFzc2VzCiAgICAgICAgaWY
 gc2VsZi51c2VyT2JqZWN0Q2xhc3NlcyAhPSBOb25lOgogICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0IG1hcHBlZCB1c2VyLiBVc2VyIGN1c3RvbSBvYmplY3RDbGFzc2VzIHRvIGFkZCBwZXJzb2
 5zOiAnJXMnIiAlIFV0aWwuYXJyYXkyQXJyYXlMaXN0KHNlbGYudXNlck9iamVjdENsYXNzZXMpCiAgICAgICAgICAgIG5ld1VzZXIuc2V0Q3VzdG9tT2JqZWN0Q2xhc3NlcyhzZWxmLnVzZXJPYmplY
 3RDbGFzc2VzKQoKICAgICAgICBmb3IgYXR0cmlidXRlc01hcHBpbmdFbnRyeSBpbiBjdXJyZW50QXR0cmlidXRlc01hcHBpbmcuZW50cnlTZXQoKToKICAgICAgICAgICAgaWRwQXR0cmlidXRlID0g
 YXR0cmlidXRlc01hcHBpbmdFbnRyeS5nZXRLZXkoKQogICAgICAgICAgICBsb2NhbEF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNNYXBwaW5nRW50cnkuZ2V0VmFsdWUoKQoKICAgICAgICAgICAgaWYgc2V
 sZi5kZWJ1Z0Vucm9sbG1lbnQ6CiAgICAgICAgICAgICAgICBwcmludCAiU2FtbC4gR2V0IG1hcHBlZCB1c2VyLiBUcnlpbmcgdG8gbWFwICclcycgaW50byAnJXMnIiAlIChpZHBBdHRyaWJ1dGUsIG
 xvY2FsQXR0cmlidXRlKQoKICAgICAgICAgICAgbG9jYWxBdHRyaWJ1dGVWYWx1ZSA9IHNhbWxfcmVzcG9uc2Vfbm9ybWFsaXplZF9hdHRyaWJ1dGVzLmdldChpZHBBdHRyaWJ1dGUpCiAgICAgICAgI
 CAgIGlmIChsb2NhbEF0dHJpYnV0ZVZhbHVlICE9IE5vbmUpOgogICAgICAgICAgICAgICAgaWYgc2VsZi5kZWJ1Z0Vucm9sbG1lbnQ6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdl
 dCBtYXBwZWQgdXNlci4gU2V0dGluZyBhdHRyaWJ1dGUgJyVzJyB2YWx1ZSAnJXMnIiAlIChsb2NhbEF0dHJpYnV0ZSwgbG9jYWxBdHRyaWJ1dGVWYWx1ZSkKCiAgICAgICAgICAgICAgICBuZXdVc2V
 yLnNldEF0dHJpYnV0ZShsb2NhbEF0dHJpYnV0ZSwgbG9jYWxBdHRyaWJ1dGVWYWx1ZSkKCiAgICAgICAgcmV0dXJuIG5ld1VzZXIKCiAgICBkZWYgZ2V0TWFwcGVkQWxsQXR0cmlidXRlc1VzZXIoc2
 VsZiwgc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzKToKICAgICAgICB1c2VyID0gVXNlcigpCgogICAgICAgICMgU2V0IGN1c3RvbSBvYmplY3QgY2xhc3NlcwogICAgICAgIGlmIHNlbGYudXNlck9ia
 mVjdENsYXNzZXMgIT0gTm9uZToKICAgICAgICAgICAgcHJpbnQgIlNhbWwuIEdldCBtYXBwZWQgYWxsIGF0dHJpYnV0ZXMgdXNlci4gVXNlciBjdXN0b20gb2JqZWN0Q2xhc3NlcyB0byBhZGQgcGVy
 c29uczogJyVzJyIgJSBVdGlsLmFycmF5MkFycmF5TGlzdChzZWxmLnVzZXJPYmplY3RDbGFzc2VzKQogICAgICAgICAgICB1c2VyLnNldEN1c3RvbU9iamVjdENsYXNzZXMoc2VsZi51c2VyT2JqZWN
 0Q2xhc3NlcykKCiAgICAgICAgIyBQcmVwYXJlIG1hcCB0byBkbyBxdWljayBtYXBwaW5nIAogICAgICAgIGF0dHJpYnV0ZVNlcnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoQXR0cmlidXRlU2
 VydmljZSkKICAgICAgICBsZGFwQXR0cmlidXRlcyA9IGF0dHJpYnV0ZVNlcnZpY2UuZ2V0QWxsQXR0cmlidXRlcygpCiAgICAgICAgc2FtbFVyaVRvQXR0cmlidXRlc01hcCA9IEhhc2hNYXAoKQogI
 CAgICAgIGZvciBsZGFwQXR0cmlidXRlIGluIGxkYXBBdHRyaWJ1dGVzOgogICAgICAgICAgICBzYW1sMlVyaSA9IGxkYXBBdHRyaWJ1dGUuZ2V0U2FtbDJVcmkoKQogICAgICAgICAgICBpZiAoc2Ft
 bDJVcmkgPT0gTm9uZSk6CiAgICAgICAgICAgICAgICBzYW1sMlVyaSA9IGF0dHJpYnV0ZVNlcnZpY2UuZ2V0RGVmYXVsdFNhbWwyVXJpKGxkYXBBdHRyaWJ1dGUuZ2V0TmFtZSgpKQogICAgICAgICA
 gICBzYW1sVXJpVG9BdHRyaWJ1dGVzTWFwLnB1dChzYW1sMlVyaSwgbGRhcEF0dHJpYnV0ZS5nZXROYW1lKCkpCgogICAgICAgIGN1c3RvbUF0dHJpYnV0ZXMgPSBBcnJheUxpc3QoKQogICAgICAgIG
 ZvciBrZXkgaW4gc2FtbF9yZXNwb25zZV9hdHRyaWJ1dGVzLmtleVNldCgpOgogICAgICAgICAgICBsZGFwQXR0cmlidXRlTmFtZSA9IHNhbWxVcmlUb0F0dHJpYnV0ZXNNYXAuZ2V0KGtleSkKICAgI
 CAgICAgICAgaWYgbGRhcEF0dHJpYnV0ZU5hbWUgPT0gTm9uZToKICAgICAgICAgICAgICAgIHByaW50ICJTYW1sLiBHZXQgbWFwcGVkIGFsbCBhdHRyaWJ1dGVzIHVzZXIuIFNraXBwaW5nIHNhbWwg
 YXR0cmlidXRlOiAnJXMnIiAlICBrZXkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICBpZiBTdHJpbmdIZWxwZXIuZXF1YWxzSWdub3JlQ2FzZShsZGFwQXR0cmlidXRlTmFtZSw
 gInVpZCIpOgogICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgIGF0dHJpYnV0ZSA9IEN1c3RvbUF0dHJpYnV0ZShsZGFwQXR0cmlidXRlTmFtZSkKICAgICAgICAgICAgYXR0cmlidX
 RlLnNldFZhbHVlcyhzYW1sX3Jlc3BvbnNlX2F0dHJpYnV0ZXMuZ2V0KGtleSkpCiAgICAgICAgICAgIGN1c3RvbUF0dHJpYnV0ZXMuYWRkKGF0dHJpYnV0ZSkKICAgICAgICAKICAgICAgICB1c2VyL
 nNldEN1c3RvbUF0dHJpYnV0ZXMoY3VzdG9tQXR0cmlidXRlcykKCiAgICAgICAgcmV0dXJuIHVzZXIKCiAgICBkZWYgZ2V0TmFtZUlkKHNlbGYsIHNhbWxSZXNwb25zZSwgbmV3VXNlcik6CiAgICAg
 ICAgaWYgc2VsZi5nZW5lcmF0ZU5hbWVJZDoKICAgICAgICAgICAgc2FtbF91c2VyX3VpZCA9IHNlbGYuZ2VuZXJhdGVOYW1lVWlkKG5ld1VzZXIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2F
 tbF91c2VyX3VpZCA9IHNlbGYuZ2V0U2FtbE5hbWVJZChzYW1sUmVzcG9uc2UpCgogICAgICAgIHJldHVybiBzYW1sX3VzZXJfdWlkCgogICAgZGVmIGdldFNhbWxOYW1lSWQoc2VsZiwgc2FtbFJlc3
 BvbnNlKToKICAgICAgICBzYW1sX3Jlc3BvbnNlX25hbWVfaWQgPSBzYW1sUmVzcG9uc2UuZ2V0TmFtZUlkKCkKICAgICAgICBpZiAoU3RyaW5nSGVscGVyLmlzRW1wdHkoc2FtbF9yZXNwb25zZV9uY
 W1lX2lkKSk6CiAgICAgICAgICAgIHByaW50ICJTYW1sLiBHZXQgU2FtbCByZXNwb25zZS4gc2FtbF9yZXNwb25zZV9uYW1lX2lkIGlzIGludmFsaWQiCiAgICAgICAgICAgIHJldHVybiBOb25lCgog
 ICAgICAgIHByaW50ICJTYW1sLiBHZXQgU2FtbCByZXNwb25zZS4gc2FtbF9yZXNwb25zZV9uYW1lX2lkOiAnJXMnIiAlIHNhbWxfcmVzcG9uc2VfbmFtZV9pZAoKICAgICAgICAjIFVzZSBwZXJzaXN
 0ZW50IElkIGFzIHNhbWxfdXNlcl91aWQKICAgICAgICByZXR1cm4gc2FtbF9yZXNwb25zZV9uYW1lX2lkCgogICAgZGVmIGdlbmVyYXRlTmFtZVVpZChzZWxmLCB1c2VyKToKICAgICAgICBpZiAoc2
 VsZi51c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzID09IE5vbmUpOgogICAgICAgICAgICBwcmludCAiU2FtbC4gQnVpbGQgbG9jYWwgZXh0ZXJuYWwgdWlkLiBVc2VyIGVuZm9yY2UgYXR0c
 mlidXRlcyB1bmlxdWVuZXNzIG5vdCBzcGVjaWZpZWQiCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgCiAgICAgICAgc2IgPSBTdHJpbmdCdWlsZGVyKCkKICAgICAgICBmaXJzdCA9IFRy
 dWUKICAgICAgICBmb3IgdXNlckF0dHJpYnV0ZU5hbWUgaW4gc2VsZi51c2VyRW5mb3JjZUF0dHJpYnV0ZXNVbmlxdWVuZXNzOgogICAgICAgICAgICBpZiBub3QgZmlyc3Q6CiAgICAgICAgICAgICA
 gICBzYi5hcHBlbmQoIiEiKQogICAgICAgICAgICBmaXJzdCA9IEZhbHNlCiAgICAgICAgICAgIGF0dHJpYnV0ZV92YWx1ZXNfbGlzdCA9IHVzZXIuZ2V0QXR0cmlidXRlVmFsdWVzKHVzZXJBdHRyaW
 J1dGVOYW1lKQogICAgICAgICAgICBpZiAoYXR0cmlidXRlX3ZhbHVlc19saXN0ICE9IE5vbmUpIGFuZCAoYXR0cmlidXRlX3ZhbHVlc19saXN0LnNpemUoKSA+IDApOgogICAgICAgICAgICAgICAgZ
 mlyc3RfYXR0cmlidXRlX3ZhbHVlID0gYXR0cmlidXRlX3ZhbHVlc19saXN0LmdldCgwKQogICAgICAgICAgICAgICAgc2IuYXBwZW5kKGZpcnN0X2F0dHJpYnV0ZV92YWx1ZSkKCiAgICAgICAgcmV0
 dXJuIHNiLnRvU3RyaW5nKCkKCiAgICBkZWYgc2V0RGVmYXVsdFVpZChzZWxmLCB1c2VyLCBzYW1sX3VzZXJfdWlkKToKICAgICAgICBpZiBTdHJpbmdIZWxwZXIuaXNFbXB0eSh1c2VyLmdldFVzZXJ
 JZCgpKToKICAgICAgICAgICAgdXNlci5zZXRVc2VySWQoc2FtbF91c2VyX3VpZCkK
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!DAA9.B788,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Client Registration script
displayName: client_registration
gluuStatus: false
inum: %(inumOrg)s!0011!DAA9.B788
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuD
 QojIENvcHlyaWdodCAoYykgMjAxNiwgR2x1dQ0KIw0KIyBBdXRob3I6IFl1cml5IE1vdmNoYW4NCiMNCg0KZnJvbSBvcmcuamJvc3Muc2VhbSBpbXBvcnQgQ29tcG9uZW50DQpmcm9tIG9yZy54ZGku
 bW9kZWwuY3VzdG9tLnNjcmlwdC50eXBlLmNsaWVudCBpbXBvcnQgQ2xpZW50UmVnaXN0cmF0aW9uVHlwZQ0KZnJvbSBvcmcueGRpLnV0aWwgaW1wb3J0IFN0cmluZ0hlbHBlciwgQXJyYXlIZWxwZXI
 NCmZyb20gb3JnLnhkaS5veGF1dGguc2VydmljZSBpbXBvcnQgU2NvcGVTZXJ2aWNlDQpmcm9tIGphdmEudXRpbCBpbXBvcnQgQXJyYXlzLCBBcnJheUxpc3QNCg0KaW1wb3J0IGphdmENCg0KY2xhc3
 MgQ2xpZW50UmVnaXN0cmF0aW9uKENsaWVudFJlZ2lzdHJhdGlvblR5cGUpOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6DQogICAgICAgIHNlbGYuY3VycmVudFRpb
 WVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcw0KDQogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOg0KICAgICAgICBwcmludCAiQ2xpZW50IHJlZ2lzdHJhdGlvbi4g
 SW5pdGlhbGl6YXRpb24iDQoNCiAgICAgICAgc2VsZi5zY29wZVNlcnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoU2NvcGVTZXJ2aWNlKQ0KDQogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN
 0cmF0aW9uLiBJbml0aWFsaXplZCBzdWNjZXNzZnVsbHkiDQoNCiAgICAgICAgcmV0dXJuIFRydWUgICANCg0KICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToNCi
 AgICAgICAgcHJpbnQgIkNsaWVudCByZWdpc3RyYXRpb24uIERlc3Ryb3kiDQogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW9uLiBEZXN0cm95ZWQgc3VjY2Vzc2Z1bGx5Ig0KICAgICAgI
 CByZXR1cm4gVHJ1ZSAgIA0KDQogICAgIyBVcGRhdGUgY2xpZW50IGVudHJ5IGJlZm9yZSBwZXJzaXN0ZW50IGl0DQogICAgIyAgIHJlZ2lzdGVyUmVxdWVzdCBpcyBvcmcueGRpLm94YXV0aC5jbGll
 bnQuUmVnaXN0ZXJSZXF1ZXN0DQogICAgIyAgIGNsaWVudCBpcyBvcmcueGRpLm94YXV0aC5tb2RlbC5yZWdpc3RyYXRpb24uQ2xpZW50DQogICAgIyAgIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzIGl
 zIGphdmEudXRpbC5NYXA8U3RyaW5nLCBTaW1wbGVDdXN0b21Qcm9wZXJ0eT4NCiAgICBkZWYgdXBkYXRlQ2xpZW50KHNlbGYsIHJlZ2lzdGVyUmVxdWVzdCwgY2xpZW50LCBjb25maWd1cmF0aW9uQX
 R0cmlidXRlcyk6DQogICAgICAgIHByaW50ICJDbGllbnQgcmVnaXN0cmF0aW9uLiBVcGRhdGVDbGllbnQgbWV0aG9kIg0KDQogICAgICAgIHJlZGlyZWN0VXJpcyA9IGNsaWVudC5nZXRSZWRpcmVjd
 FVyaXMoKQ0KICAgICAgICBwcmludCAiQ2xpZW50IHJlZ2lzdHJhdGlvbi4gUmVkaXJlY3QgVXJpczoiLCByZWRpcmVjdFVyaXMNCg0KICAgICAgICBhZGRBZGRyZXNzU2NvcGUgPSBGYWxzZQ0KICAg
 ICAgICBmb3IgcmVkaXJlY3RVcmkgaW4gcmVkaXJlY3RVcmlzOg0KICAgICAgICAgICAgaWYgKFN0cmluZ0hlbHBlci5lcXVhbHNJZ25vcmVDYXNlKHJlZGlyZWN0VXJpLCAiaHR0cHM6Ly9jbGllbnQ
 uZXhhbXBsZS5jb20vZXhhbXBsZTEiKSk6DQogICAgICAgICAgICAgICAgYWRkQWRkcmVzc1Njb3BlID0gVHJ1ZQ0KICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgIA0KICAgICAgICBwcmludC
 AiQ2xpZW50IHJlZ2lzdHJhdGlvbi4gSXMgYWRkIGFkZHJlc3Mgc2NvcGU6IiwgYWRkQWRkcmVzc1Njb3BlDQoNCiAgICAgICAgaWYgKGFkZEFkZHJlc3NTY29wZSk6DQogICAgICAgICAgICBjdXJyZ
 W50U2NvcGVzID0gY2xpZW50LmdldFNjb3BlcygpDQogICAgICAgICAgICBwcmludCAiQ2xpZW50IHJlZ2lzdHJhdGlvbi4gQ3VycmVudCBzY29wZXM6IiwgY3VycmVudFNjb3Blcw0KICAgICAgICAg
 ICAgDQogICAgICAgICAgICBhZGRyZXNzU2NvcGUgPSBzZWxmLnNjb3BlU2VydmljZS5nZXRTY29wZUJ5RGlzcGxheU5hbWUoImFkZHJlc3MiKQ0KICAgICAgICAgICAgbmV3U2NvcGVzID0gQXJyYXl
 IZWxwZXIuYWRkSXRlbVRvU3RyaW5nQXJyYXkoY3VycmVudFNjb3BlcywgYWRkcmVzc1Njb3BlLmdldERuKCkpDQogICAgDQogICAgICAgICAgICBwcmludCAiQ2xpZW50IHJlZ2lzdHJhdGlvbi4gUm
 VzdWx0IHNjb3BlczoiLCBuZXdTY29wZXMNCiAgICAgICAgICAgIGNsaWVudC5zZXRTY29wZXMobmV3U2NvcGVzKQ0KDQogICAgICAgIHJldHVybiBUcnVlDQoNCiAgICBkZWYgZ2V0QXBpVmVyc2lvb
 ihzZWxmKToNCiAgICAgICAgcmV0dXJuIDENCg==
oxScriptType: client_registration
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!09A0.93D6,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Twilio SMS authentication module
displayName: twilio_sms
gluuStatus: false
inum: %(inumOrg)s!0011!09A0.93D6
oxConfigurationProperty: {"value1":"_sidtwilio","value2":"Twilio account","description":""}
oxConfigurationProperty: {"value1":"twilio_token","value2":"Twilio API secret","description":""}
oxConfigurationProperty: {"value1":"from_number","value2":"Phone number fomatting","description":""}
oxLevel: 60
oxModuleProperty: {"value1":"usage_type","value2":"interactive","description":""}
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IE1pY2hhZWwgU2Nod2FydHoKIwoKZnJvbSBvcmcuamJvc3Muc2VhbSBpbXBvcnQgQ29tcG9uZW50CmZyb20gb3JnLmpib3NzLnNl
 YW0uc2VjdXJpdHkgaW1wb3J0IElkZW50aXR5CmZyb20gb3JnLnhkaS5tb2RlbC5jdXN0b20uc2NyaXB0LnR5cGUuYXV0aCBpbXBvcnQgUGVyc29uQXV0aGVudGljYXRpb25UeXBlCmZyb20gb3JnLnh
 kaS5veGF1dGguc2VydmljZSBpbXBvcnQgVXNlclNlcnZpY2UsIEF1dGhlbnRpY2F0aW9uU2VydmljZSwgU2Vzc2lvblN0YXRlU2VydmljZQpmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgU3RyaW5nSG
 VscGVyCmZyb20gb3JnLmpib3NzLnNlYW0uY29udGV4dHMgaW1wb3J0IENvbnRleHQsIENvbnRleHRzCmZyb20gb3JnLnhkaS5veGF1dGgudXRpbCBpbXBvcnQgU2VydmVyVXRpbApmcm9tIG9yZy54Z
 GkudXRpbCBpbXBvcnQgU3RyaW5nSGVscGVyIApmcm9tIG9yZy54ZGkudXRpbCBpbXBvcnQgQXJyYXlIZWxwZXIgCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMKCmltcG9ydCBjb20udHdpbGlv
 LnNkay5Ud2lsaW9SZXN0Q2xpZW50IGFzIFR3aWxpb1Jlc3RDbGllbnQKaW1wb3J0IGNvbS50d2lsaW8uc2RrLlR3aWxpb1Jlc3RFeGNlcHRpb24gYXMgVHdpbGlvUmVzdEV4Y2VwdGlvbgppbXBvcnQ
 gY29tLnR3aWxpby5zZGsucmVzb3VyY2UuZmFjdG9yeS5NZXNzYWdlRmFjdG9yeSBhcyBNZXNzYWdlRmFjdG9yeQppbXBvcnQgY29tLnR3aWxpby5zZGsucmVzb3VyY2UuaW5zdGFuY2UuTWVzc2FnZS
 BhcyBNZXNzYWdlCmltcG9ydCBvcmcuYXBhY2hlLmh0dHAuTmFtZVZhbHVlUGFpciBhcyBOYW1lVmFsdWVQYWlyCmltcG9ydCBvcmcuYXBhY2hlLmh0dHAubWVzc2FnZS5CYXNpY05hbWVWYWx1ZVBha
 XIgYXMgQmFzaWNOYW1lVmFsdWVQYWlyCmltcG9ydCBqYXZhLnV0aWwuQXJyYXlMaXN0IGFzIEFycmF5TGlzdAppbXBvcnQgamF2YS51dGlsLkFycmF5cy5hc0xpc3QgYXMgTGlzdAoKaW1wb3J0IGph
 dmEKaW1wb3J0IHJhbmRvbQppbXBvcnQgamFycmF5CgpjbGFzcyBQZXJzb25BdXRoZW50aWNhdGlvbihQZXJzb25BdXRoZW50aWNhdGlvblR5cGUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGN1cnJ
 lbnRUaW1lTWlsbGlzKToKICAgICAgICAgIHNlbGYuY3VycmVudFRpbWVNaWxsaXMgPSBjdXJyZW50VGltZU1pbGxpcwoKICAgIGRlZiBpbml0KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKT
 oKICAgICAgICBwcmludCAiVHdpbGlvIFNNUy4gSW5pdGlhbGl6YXRpb24iCgogICAgICAgIHNlbGYuQUNDT1VOVF9TSUQgPSBOb25lICAgIAogICAgICAgIHNlbGYuQVVUSF9UT0tFTiA9IE5vbmUgI
 CAgCiAgICAgICAgc2VsZi5GUk9NX05VTUJFUiA9IE5vbmUKICAgICAgICAKICAgICAgICAjIEdldCBDdXN0b20gUHJvcGVydGllcwogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5BQ0NPVU5U
 X1NJRCA9IGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLmdldCgidHdpbGlvX3NpZCIpLmdldFZhbHVlMigpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCAnVHdpbGlvU01TLCBNaXNzaW5
 nIHJlcXVpcmVkIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlICJ0d2lsaW9fc2lkIicKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLkFVVEhfVE9LRU4gPSBjb25maWd1cmF0aW9uQXR0cmlidX
 Rlcy5nZXQoInR3aWxpb190b2tlbiIpLmdldFZhbHVlMigpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCdUd2lsaW9TTVMsIE1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiBhd
 HRyaWJ1dGUgInR3aWxpb190b2tlbiInCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLkZST01fTlVNQkVSID0gY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMuZ2V0KCJmcm9tX251bWJlciIpLmdl
 dFZhbHVlMigpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBwcmludCdUd2lsaW9TTVMsIE1pc3NpbmcgcmVxdWlyZWQgY29uZmlndXJhdGlvbiBhdHRyaWJ1dGUgImZyb21fbnVtYmVyIicKCiA
 gICAgICAgaWYgTm9uZSBpbiAoc2VsZi5BQ0NPVU5UX1NJRCwgc2VsZi5BVVRIX1RPS0VOLCBzZWxmLkZST01fTlVNQkVSKToKICAgICAgICAgICAgcHJpbnQgInR3aWxpb19zaWQsIHR3aWxpb190b2
 tlbiwgZnJvbV9udW1iZXIgaXMgZW1wdHkgLi4uIHJldHVybmluZyBGYWxzZSIKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgICAgIHByaW50ICJUd2lsaW8gU01TLiBJbml0aWFsaXplZCBzd
 WNjZXNzZnVsbHkiCgogICAgICAgIHJldHVybiBUcnVlICAgIAoKICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiVHdpbGlvIFNNUy4g
 RGVzdHJveSIKICAgICAgICBwcmludCAiVHdpbGlvIFNNUy4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICA
 gICAgIHJldHVybiAxCiAKICAgIGRlZiBpc1ZhbGlkQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuIFRydW
 UKICAgICAgICAgIAogICAgZGVmIGdldEFsdGVybmF0aXZlQXV0aGVudGljYXRpb25NZXRob2Qoc2VsZiwgdXNhZ2VUeXBlLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcyk6CiAgICAgICAgcmV0dXJuI
 E5vbmUKCiAgICBkZWYgYXV0aGVudGljYXRlKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFyYW1ldGVycywgc3RlcCk6CiAgICAgICAgY29udGV4dCA9IENvbnRleHRzLmdl
 dEV2ZW50Q29udGV4dCgpCiAgICAgICAgdXNlclNlcnZpY2UgPSBDb21wb25lbnQuZ2V0SW5zdGFuY2UoVXNlclNlcnZpY2UpCiAgICAgICAgc2Vzc2lvbl9hdHRyaWJ1dGVzID0gY29udGV4dC5nZXQ
 oInNlc3Npb25BdHRyaWJ1dGVzIikKCiAgICAgICAgZm9ybV9wYXNzY29kZSA9IFNlcnZlclV0aWwuZ2V0Rmlyc3RWYWx1ZShyZXF1ZXN0UGFyYW1ldGVycywgInBhc3Njb2RlIikKICAgICAgICBmb3
 JtX25hbWUgPSBTZXJ2ZXJVdGlsLmdldEZpcnN0VmFsdWUocmVxdWVzdFBhcmFtZXRlcnMsICJUd2lsaW9TbXNsb2dpbkZvcm0iKQoKICAgICAgICBwcmludCAiVHdpbGlvU01TLiBmb3JtX3Jlc3Bvb
 nNlX3Bhc3Njb2RlOiAlcyIgJSBzdHIoZm9ybV9wYXNzY29kZSkKICAgICAgICAKICAgICAgICBpZiBzdGVwID09IDE6CiAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFN0ZXAgMSBQYXNzd29y
 ZCBBdXRoZW50aWNhdGlvbiIKICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBJZGVudGl0eS5pbnN0YW5jZSgpLmdldENyZWRlbnRpYWxzKCkKICAgICAgICAgICAgdXNlcl9uYW1lID0gY3JlZGVudGl
 hbHMuZ2V0VXNlcm5hbWUoKQogICAgICAgICAgICB1c2VyX3Bhc3N3b3JkID0gY3JlZGVudGlhbHMuZ2V0UGFzc3dvcmQoKQogICAgICAgICAgICAKICAgICAgICAgICAgbG9nZ2VkX2luID0gRmFsc2
 UKICAgICAgICAgICAgaWYgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9uYW1lKSBhbmQgU3RyaW5nSGVscGVyLmlzTm90RW1wdHlTdHJpbmcodXNlcl9wYXNzd29yZCk6CiAgICAgI
 CAgICAgICAgICBsb2dnZWRfaW4gPSB1c2VyU2VydmljZS5hdXRoZW50aWNhdGUodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkKQogICAgICAgICAgICAKICAgICAgICAgICAgaWYgbm90IGxvZ2dlZF9p
 bjoKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgIyBHZXQgdGhlIFBlcnNvbidzIG51bWJlciBhbmQgZ2VuZXJhdGUgYSBjb2RlCiAgICAgICAgICAgIGZvdW5kVXNlciA
 9IE5vbmUKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZm91bmRVc2VyID0gdXNlclNlcnZpY2UuZ2V0VXNlckJ5QXR0cmlidXRlKCJ1aWQiLCB1c2VyX25hbWUpCiAgICAgICAgICAgIG
 V4Y2VwdDoKICAgICAgICAgICAgICAgIHByaW50ICdUd2lsaW9TTVMsIEVycm9yIHJldHJpZXZpbmcgdXNlciAlcyBmcm9tIExEQVAnICUgKHVzZXJfbmFtZSkKICAgICAgICAgICAgICAgIHJldHVyb
 iBGYWxzZQoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbW9iaWxlX251bWJlciA9IGZvdW5kVXNlci5nZXRBdHRyaWJ1dGUoInBob25lTnVtYmVyVmVyaWZpZWQiKQogICAgICAgICAg
 ICBleGNlcHQ6CiAgICAgICAgICAgICAgICBwcmludCAnVHdpbGlvU01TLCBFcnJvciBmaW5kaW5nIG1vYmlsZSBudW1iZXIgZm9yJyAlICh1c2VyX25hbWUpIAogICAgICAgICAgICAgICAgcmV0dXJ
 uIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAjIEdlbmVyYXRlIFJhbmRvbSBzaXggZGlnaXQgY29kZSBhbmQgc3RvcmUgaXQgaW4gYXJyYXkKICAgICAgICAgICAgY2
 9kZSA9IHJhbmRvbS5yYW5kaW50KDEwMDAwMCwgOTk5OTk5KQogICAgICAgICAgICAKICAgICAgICAgICAgIyBHZXQgY29kZSBhbmQgc2F2ZSBpdCBpbiBMREFQIHRlbXBvcmFyaWx5IHdpdGggc3BlY
 2lhbCBzZXNzaW9uIGVudHJ5IAogICAgICAgICAgICBjb250ZXh0LnNldCgiY29kZSIsIGNvZGUpCgogICAgICAgICAgICBjbGllbnQgPSBUd2lsaW9SZXN0Q2xpZW50KHNlbGYuQUNDT1VOVF9TSUQs
 IHNlbGYuQVVUSF9UT0tFTikKICAgICAgICAgICAgYm9keVBhcmFtID0gQmFzaWNOYW1lVmFsdWVQYWlyKCJCb2R5Iiwgc3RyKGNvZGUpKQogICAgICAgICAgICB0b1BhcmFtID0gQmFzaWNOYW1lVmF
 sdWVQYWlyKCJUbyIsIG1vYmlsZV9udW1iZXIpCiAgICAgICAgICAgIGZyb21QYXJhbSA9IEJhc2ljTmFtZVZhbHVlUGFpcigiRnJvbSIsIHNlbGYuRlJPTV9OVU1CRVIpCgogICAgICAgICAgICBwYX
 JhbXMgPSBBcnJheUxpc3QoKQogICAgICAgICAgICBwYXJhbXMuYWRkKGJvZHlQYXJhbSkKICAgICAgICAgICAgcGFyYW1zLmFkZCh0b1BhcmFtKQogICAgICAgICAgICBwYXJhbXMuYWRkKGZyb21QY
 XJhbSkKICAgICAgICAgICAgCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG1lc3NhZ2VGYWN0b3J5ID0gY2xpZW50LmdldEFjY291bnQoKS5nZXRNZXNzYWdlRmFjdG9yeSgpCiAgICAg
 ICAgICAgICAgICBtZXNzYWdlID0gbWVzc2FnZUZhY3RvcnkuY3JlYXRlKHBhcmFtcykKCiAgICAgICAgICAgICAgICBwcmludCAnVHdpbGlvU01zLCBNZXNzYWdlIFNpZDogJXMnICUgKG1lc3NhZ2U
 uZ2V0U2lkKCkpCiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICBwcmludCAiVHdpbGlvU01TLiBFcnJvciBzZW5kaW5nIG1lc3NhZ2
 UgdG8gVHdpbGlvIgoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgZWxpZiBzdGVwID09IDI6CiAgICAgICAgICAgICMgUmV0cmlldmUgdGhlIHNlc3Npb24gYXR0cmlidXRlCiAgICAgI
 CAgICAgIHByaW50ICJUd2lsaW9TTVMuIFN0ZXAgMiBTTVMvT1RQIEF1dGhlbnRpY2F0aW9uIgogICAgICAgICAgICBjb2RlID0gc2Vzc2lvbl9hdHRyaWJ1dGVzLmdldCgiY29kZSIpCiAgICAgICAg
 ICAgIHByaW50ICJUd2lsaW9TTVMuIENvZGU6ICVzIiAlIHN0cihjb2RlKQogICAgCiAgICAgICAgICAgIGlmIGNvZGUgaXMgTm9uZToKICAgICAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIEZ
 haWxlZCB0byBmaW5kIHByZXZpb3VzbHkgc2VudCBjb2RlIgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlIAogICAgCiAgICAgICAgICAgIGlmIGZvcm1fcGFzc2NvZGUgaXMgTm9uZToKICAgIC
 AgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFBhc3Njb2RlIGlzIGVtcHR5IgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlIAogICAgCiAgICAgICAgICAgIGlmIGxlbihmb3JtX3Bhc3Njb
 2RlKSAhPSA2OgogICAgICAgICAgICAgICAgcHJpbnQgIlR3aWxpb1NNUy4gUGFzc2NvZGUgZnJvbSByZXNwb25zZSBpcyBub3QgNiBkaWdpdHM6ICVzIiAlIGZvcm1fcGFzc2NvZGUKICAgICAgICAg
 ICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICAgICAgaWYgZm9ybV9wYXNzY29kZSA9PSBjb2RlOgogICAgICAgICAgICAgICAgcHJpbnQgIlRpd2xpb1NNUywgU1VDQ0VTUyEgVXNlciBlbnRlcmV
 kIHRoZSBzYW1lIGNvZGUhIiAKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgICAgICBwcmludCAiVHdpbGlvU01TLiBGQUlMISBVc2VyIGVudGVyZWQgdGhlIHdyb25nIGNvZGUhIC
 VzICE9ICVzIiAlIChmb3JtX3Bhc3Njb2RlLCBjb2RlKQoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlICAgICAgICAgICAgCgogICAgICAgIHByaW50ICJUd2lsaW9TTVMuIEVSUk9SOiBzdGVwIHBhc
 mFtIG5vdCBmb3VuZCBvciAhPSAoMXwyKSIKCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIHByZXBhcmVGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCByZXF1ZXN0UGFy
 YW1ldGVycywgc3RlcCk6CiAgICAgICAgaWYgc3RlcCA9PSAxOgogICAgICAgICAgICBwcmludCAiVHdpbGlvU01TLiBQcmVwYXJlIGZvciBTdGVwIDEiCiAgICAgICAgICAgIHJldHVybiBUcnVlCiA
 gICAgICAgZWxpZiBzdGVwID09IDI6CiAgICAgICAgICAgIHByaW50ICJUd2lsaW9TTVMuIFByZXBhcmUgZm9yIFN0ZXAgMiIKICAgICAgICAgICAgcmV0dXJuIFRydWUKCiAgICAgICAgcmV0dXJuIE
 ZhbHNlCgogICAgZGVmIGdldEV4dHJhUGFyYW1ldGVyc0ZvclN0ZXAoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMsIHN0ZXApOgogICAgICAgIGlmIHN0ZXAgPT0gMjoKICAgICAgICAgICAgc
 mV0dXJuIEFycmF5cy5hc0xpc3QoImNvZGUiKQoKICAgICAgICByZXR1cm4gTm9uZQoKICAgIGRlZiBnZXRDb3VudEF1dGhlbnRpY2F0aW9uU3RlcHMoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0
 ZXMpOgogICAgICAgIHJldHVybiAyCgogICAgZGVmIGdldFBhZ2VGb3JTdGVwKHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzLCBzdGVwKToKICAgICAgICBpZiBzdGVwID09IDI6CiAgICAgICA
 gICAgIHJldHVybiAiL2F1dGgvdHdpbGlvc21zL3R3aWxpb3Ntcy54aHRtbCIKCiAgICAgICAgcmV0dXJuICIiCgogICAgZGVmIGxvZ291dChzZWxmLCBjb25maWd1cmF0aW9uQXR0cmlidXRlcywgcm
 VxdWVzdFBhcmFtZXRlcnMpOgogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: person_authentication
programmingLanguage: python

dn: inum=%(inumOrg)s!0011!DAA9.B789,ou=scripts,o=%(inumOrg)s,o=gluu
objectClass: top
objectClass: oxCustomScript
description: Sample Application Session script
displayName: application_session
gluuStatus: false
inum: %(inumOrg)s!0011!DAA9.B789
oxLevel: 100
oxModuleProperty: {"value1":"location_type","value2":"ldap","description":""}
oxRevision: 1
oxScript:: IyBveEF1dGggaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoMjAwOCkuIFNlZSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUIGZvciBmdWxsIHRleHQuC
 iMgQ29weXJpZ2h0IChjKSAyMDE2LCBHbHV1CiMKIyBBdXRob3I6IFl1cml5IE1vdmNoYW4KIwoKZnJvbSBvcmcueGRpLm1vZGVsLmN1c3RvbS5zY3JpcHQudHlwZS5zZXNzaW9uIGltcG9ydCBBcHBs
 aWNhdGlvblNlc3Npb25UeXBlCmZyb20gb3JnLnhkaS51dGlsIGltcG9ydCBTdHJpbmdIZWxwZXIsIEFycmF5SGVscGVyCmZyb20gamF2YS51dGlsIGltcG9ydCBBcnJheXMsIEFycmF5TGlzdAoKaW1
 wb3J0IGphdmEKCmNsYXNzIEFwcGxpY2F0aW9uU2Vzc2lvbihBcHBsaWNhdGlvblNlc3Npb25UeXBlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBjdXJyZW50VGltZU1pbGxpcyk6CiAgICAgICAgc2
 VsZi5jdXJyZW50VGltZU1pbGxpcyA9IGN1cnJlbnRUaW1lTWlsbGlzCgogICAgZGVmIGluaXQoc2VsZiwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJBcHBsaWNhdGlvb
 iBzZXNzaW9uLiBJbml0aWFsaXphdGlvbiIKICAgICAgICBwcmludCAiQXBwbGljYXRpb24gc2Vzc2lvbi4gSW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5IgoKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoK
 ICAgIGRlZiBkZXN0cm95KHNlbGYsIGNvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKToKICAgICAgICBwcmludCAiQXBwbGljYXRpb24gc2Vzc2lvbi4gRGVzdHJveSIKICAgICAgICBwcmludCAiQXBwbGl
 jYXRpb24gc2Vzc2lvbi4gRGVzdHJveWVkIHN1Y2Nlc3NmdWxseSIKICAgICAgICByZXR1cm4gVHJ1ZSAgIAoKICAgIGRlZiBnZXRBcGlWZXJzaW9uKHNlbGYpOgogICAgICAgIHJldHVybiAxCgogIC
 AgIyBBcHBsaWNhdGlvbiBjYWxscyBpdCBhdCBlbmQgc2Vzc2lvbiByZXF1ZXN0IHRvIGFsbG93IG5vdGlmeSAzcmQgcGFydCBzeXN0ZW1zCiAgICAjICAgaHR0cFJlcXVlc3QgaXMgamF2YXguc2Vyd
 mxldC5odHRwLkh0dHBTZXJ2bGV0UmVxdWVzdAogICAgIyAgIGF1dGhvcml6YXRpb25HcmFudCBpcyBvcmcueGRpLm94YXV0aC5tb2RlbC5jb21tb24uQXV0aG9yaXphdGlvbkdyYW50CiAgICAjICAg
 Y29uZmlndXJhdGlvbkF0dHJpYnV0ZXMgaXMgamF2YS51dGlsLk1hcDxTdHJpbmcsIFNpbXBsZUN1c3RvbVByb3BlcnR5PgogICAgZGVmIGVuZFNlc3Npb24oc2VsZiwgaHR0cFJlcXVlc3QsIGF1dGh
 vcml6YXRpb25HcmFudCwgY29uZmlndXJhdGlvbkF0dHJpYnV0ZXMpOgogICAgICAgIHByaW50ICJBcHBsaWNhdGlvbiBzZXNzaW9uLiBTdGFydGluZyBleHRlcm5hbCBzZXNzaW9uIGVuZCIKCiAgIC
 AgICAgcHJpbnQgIkFwcGxpY2F0aW9uIHNlc3Npb24uIEV4dGVybmFsIHNlc3Npb24gZW5kZWQgc3VjY2Vzc2Z1bGx5IgogICAgICAgIHJldHVybiBUcnVlCg==
oxScriptType: application_session
programmingLanguage: python

